{
    "language": "en",
    "messages": [
        {
            "id": "Error node authentication credentials do not match requesting node.",
            "message": "Error node authentication credentials do not match requesting node.",
            "translation": "Error node authentication credentials do not match requesting node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unable to retrieve node from the exchange.",
            "message": "Unable to retrieve node from the exchange.",
            "translation": "Unable to retrieve node from the exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error node ha group {HAGroup} does not match group name in request {GroupName}.",
            "message": "Error node ha group {HAGroup} does not match group name in request {GroupName}.",
            "translation": "Error node ha group {HAGroup} does not match group name in request {GroupName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HAGroup",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.HAGroup"
                },
                {
                    "id": "GroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "groupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error handling node upgrade request: {Error}",
            "message": "Error handling node upgrade request: {Error}",
            "translation": "Error handling node upgrade request: {Error}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Error",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "err.Error()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {Org}/{Node} can start executing nmp {NmpId}.",
            "message": "Node {Org}/{Node} can start executing nmp {NmpId}.",
            "translation": "Node {Org}/{Node} can start executing nmp {NmpId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Node",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                },
                {
                    "id": "NmpId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nmpId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {Org}/{Node} can not start executing nmp {NmpId}.",
            "message": "Node {Org}/{Node} can not start executing nmp {NmpId}.",
            "translation": "Node {Org}/{Node} can not start executing nmp {NmpId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Node",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                },
                {
                    "id": "NmpId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nmpId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No input found.",
            "message": "No input found.",
            "translation": "No input found.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unauthorized. No exchange {AuthType} id is supplied.",
            "message": "Unauthorized. No exchange {AuthType} id is supplied.",
            "translation": "Unauthorized. No exchange {AuthType} id is supplied.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AuthType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "authType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to authenticate the {AuthType} with the Exchange. {Err}",
            "message": "Failed to authenticate the {AuthType} with the Exchange. {Err}",
            "translation": "Failed to authenticate the {AuthType} with the Exchange. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AuthType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "authType"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input body couldn't be deserialized to JSON object. {Err}",
            "message": "Input body couldn't be deserialized to JSON object. {Err}",
            "translation": "Input body couldn't be deserialized to JSON object. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input body couldn't be deserialized to PolicyCheck object. {Err}",
            "message": "Input body couldn't be deserialized to PolicyCheck object. {Err}",
            "translation": "Input body couldn't be deserialized to PolicyCheck object. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input body couldn't be deserialized to UserInputCheck object. {Err}",
            "message": "Input body couldn't be deserialized to UserInputCheck object. {Err}",
            "translation": "Input body couldn't be deserialized to UserInputCheck object. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input body couldn't be deserialized to SecretBindingCheck object. {Err}",
            "message": "Input body couldn't be deserialized to SecretBindingCheck object. {Err}",
            "translation": "Input body couldn't be deserialized to SecretBindingCheck object. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input body couldn't be deserialized to CompCheck object. {Err}",
            "message": "Input body couldn't be deserialized to CompCheck object. {Err}",
            "translation": "Input body couldn't be deserialized to CompCheck object. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No exchange user id is supplied.",
            "message": "No exchange user id is supplied.",
            "translation": "No exchange user id is supplied.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "No exchange user organization id is supplied.",
            "message": "No exchange user organization id is supplied.",
            "translation": "No exchange user organization id is supplied.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "No exchange user password or api key is supplied.",
            "message": "No exchange user password or api key is supplied.",
            "translation": "No exchange user password or api key is supplied.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Wrong organization id, {Arg_1} id or password.",
            "message": "Wrong organization id, {Arg_1} id or password.",
            "translation": "Wrong organization id, {Arg_1} id or password.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]s",
                    "type": "",
                    "underlyingType": "string",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Exchange user {Key} is not in the correct format, should be org/username.",
            "message": "Exchange user {Key} is not in the correct format, should be org/username.",
            "translation": "Exchange user {Key} is not in the correct format, should be org/username.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Key",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "key"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Exchange device {Key} is not in the correct format, should be org/nodename.",
            "message": "Exchange device {Key} is not in the correct format, should be org/nodename.",
            "translation": "Exchange device {Key} is not in the correct format, should be org/nodename.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Key",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "key"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Internal server error",
            "message": "Internal server error",
            "translation": "Internal server error",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "There is no secrets provider configured, secrets are unavailable.",
            "message": "There is no secrets provider configured, secrets are unavailable.",
            "translation": "There is no secrets provider configured, secrets are unavailable.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "unavailMsg",
                "The secrets provider is not ready. The caller should retry this API call a small number of times with a short delay between calls to ensure that the secrets provider is unavailable."
            ],
            "message": "The secrets provider is not ready. The caller should retry this API call a small number of times with a short delay between calls to ensure that the secrets provider is unavailable.",
            "translation": "The secrets provider is not ready. The caller should retry this API call a small number of times with a short delay between calls to ensure that the secrets provider is unavailable.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Secret name must be provided",
            "message": "Secret name must be provided",
            "translation": "Secret name must be provided",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unable to read request body, error: {Err}.",
            "message": "Unable to read request body, error: {Err}.",
            "translation": "Unable to read request body, error: {Err}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Request body is empty.",
            "message": "Request body is empty.",
            "translation": "Request body is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Request body parse error, {Uerr}",
            "message": "Request body parse error, {Uerr}",
            "translation": "Request body parse error, {Uerr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Uerr",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "uerr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Permission denied, user \"{ExUser}\" cannot {Action} secrets in organization \"{Org}\"",
            "message": "Permission denied, user \"{ExUser}\" cannot {Action} secrets in organization \"{Org}\"",
            "translation": "Permission denied, user \"{ExUser}\" cannot {Action} secrets in organization \"{Org}\"",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExUser",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "info.exUser"
                },
                {
                    "id": "Action",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "action"
                },
                {
                    "id": "Org",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "info.org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Permission denied, user \"{ExUser}\" cannot {Action} secret \"{SecretName}\" in organization \"{Org}\"",
            "message": "Permission denied, user \"{ExUser}\" cannot {Action} secret \"{SecretName}\" in organization \"{Org}\"",
            "translation": "Permission denied, user \"{ExUser}\" cannot {Action} secret \"{SecretName}\" in organization \"{Org}\"",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExUser",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "info.exUser"
                },
                {
                    "id": "Action",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "action"
                },
                {
                    "id": "SecretName",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "secretName"
                },
                {
                    "id": "Org",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "info.org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to read the vault response: {Error}",
            "message": "Unable to read the vault response: {Error}",
            "translation": "Unable to read the vault response: {Error}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Error",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "e.ReadError.Error()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to parse the vault response \"{Response}\": {Error}",
            "message": "Unable to parse the vault response \"{Response}\": {Error}",
            "translation": "Unable to parse the vault response \"{Response}\": {Error}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Response",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "e.Response"
                },
                {
                    "id": "Error",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "e.ParseError.Error()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to {Action} secrets in organization \"{Org}\", operation not supported by the secrets provider.",
            "message": "Unable to {Action} secrets in organization \"{Org}\", operation not supported by the secrets provider.",
            "translation": "Unable to {Action} secrets in organization \"{Org}\", operation not supported by the secrets provider.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Action",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "action"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "info.org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to {Action} secret \"{SecretName}\" in organization \"{Org}\", operation not supported by the secrets provider.",
            "message": "Unable to {Action} secret \"{SecretName}\" in organization \"{Org}\", operation not supported by the secrets provider.",
            "translation": "Unable to {Action} secret \"{SecretName}\" in organization \"{Org}\", operation not supported by the secrets provider.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Action",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "action"
                },
                {
                    "id": "SecretName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "secretName"
                },
                {
                    "id": "Org",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "info.org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Secrets provider received a bad request, please check all the provided inputs.",
            "message": "Secrets provider received a bad request, please check all the provided inputs.",
            "translation": "Secrets provider received a bad request, please check all the provided inputs.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Response: {Response}",
            "message": "Response: {Response}",
            "translation": "Response: {Response}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Response",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secrets.RespToString(e.Response)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No secret(s) found in organization \"{Org}\"",
            "message": "No secret(s) found in organization \"{Org}\"",
            "translation": "No secret(s) found in organization \"{Org}\"",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "info.org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No secret(s) found under secret name \"{SecretName}\"",
            "message": "No secret(s) found under secret name \"{SecretName}\"",
            "translation": "No secret(s) found under secret name \"{SecretName}\"",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecretName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "An unknown error occurred. Response code {ResponseCode} received from the secrets provider.",
            "message": "An unknown error occurred. Response code {ResponseCode} received from the secrets provider.",
            "translation": "An unknown error occurred. Response code {ResponseCode} received from the secrets provider.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ResponseCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "e.ResponseCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Organization must be specified in the API path",
            "message": "Organization must be specified in the API path",
            "translation": "Organization must be specified in the API path",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "User must be specified in the API path",
            "message": "User must be specified in the API path",
            "translation": "User must be specified in the API path",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node must be specified in the API path",
            "message": "Node must be specified in the API path",
            "translation": "Node must be specified in the API path",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error checking secret {FullSecretName} in the secret manager.",
            "message": "Error checking secret {FullSecretName} in the secret manager.",
            "translation": "Error checking secret {FullSecretName} in the secret manager.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FullSecretName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fullSecretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Wrong type returned checking the secret name in the secret manager: {Payload}",
            "message": "Wrong type returned checking the secret name in the secret manager: {Payload}",
            "translation": "Wrong type returned checking the secret name in the secret manager: {Payload}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Payload",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "payload"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Secret {FullSecretName} does not exist in the secret manager.",
            "message": "Secret {FullSecretName} does not exist in the secret manager.",
            "translation": "Secret {FullSecretName} does not exist in the secret manager.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FullSecretName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fullSecretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error parsing the selections {Form}. {Err}",
            "message": "Error parsing the selections {Form}. {Err}",
            "translation": "Error parsing the selections {Form}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Form",
                    "string": "%[1]v",
                    "type": "net/url.Values",
                    "underlyingType": "map[string][]string",
                    "argNum": 1,
                    "expr": "r.Form"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting {Resource} for output, error {Err}",
            "message": "Error getting {Resource} for output, error {Err}",
            "translation": "Error getting {Resource} for output, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Resource",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "resource"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_REG",
                "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UNREG",
                "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UPDATE",
                "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_POLICY",
                "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_POLICY_PATCH",
                "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_POLICY_PATCH_INPUT_PROPERTY_ERROR2",
                "Error parsing input for node policy patch. Input body does not contain 'properties', 'constraints', 'deployment' or 'management' attribute: {Arg_1}"
            ],
            "message": "Error parsing input for node policy patch. Input body does not contain 'properties', 'constraints', 'deployment' or 'management' attribute: {Arg_1}",
            "translation": "Error parsing input for node policy patch. Input body does not contain 'properties', 'constraints', 'deployment' or 'management' attribute: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UI",
                "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_REG",
                "Error in node configuration/registration for node {Arg_1}. {Arg_2}"
            ],
            "message": "Error in node configuration/registration for node {Arg_1}. {Arg_2}",
            "translation": "Error in node configuration/registration for node {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UPDATE",
                "Error in updating node {Arg_1}. {Arg_2}"
            ],
            "message": "Error in updating node {Arg_1}. {Arg_2}",
            "translation": "Error in updating node {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UNREG",
                "Error in node unregistration. {Arg_1}"
            ],
            "message": "Error in node unregistration. {Arg_1}",
            "translation": "Error in node unregistration. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_VERIFY_EXCH_VERSION",
                "Error verifiying exchange version. error: {Arg_1}"
            ],
            "message": "Error verifiying exchange version. error: {Arg_1}",
            "translation": "Error verifiying exchange version. error: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_CREATE",
                "Error in creating or replacing node policy. {Arg_1}"
            ],
            "message": "Error in creating or replacing node policy. {Arg_1}",
            "translation": "Error in creating or replacing node policy. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_PATCH",
                "Error in patching node policy. {Arg_1}"
            ],
            "message": "Error in patching node policy. {Arg_1}",
            "translation": "Error in patching node policy. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_DEL",
                "Error in deleting node policy. {Arg_1}"
            ],
            "message": "Error in deleting node policy. {Arg_1}",
            "translation": "Error in deleting node policy. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_UPDATE",
                "Error in updating node user input. {Arg_1}"
            ],
            "message": "Error in updating node user input. {Arg_1}",
            "translation": "Error in updating node user input. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_PATCH",
                "Error in patching node user input. {Arg_1}"
            ],
            "message": "Error in patching node user input. {Arg_1}",
            "translation": "Error in patching node user input. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_DEL",
                "Error in deleting node userinput. {Arg_1}"
            ],
            "message": "Error in deleting node userinput. {Arg_1}",
            "translation": "Error in deleting node userinput. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_REG",
                "Start node configuration/registration for node {Arg_1}."
            ],
            "message": "Start node configuration/registration for node {Arg_1}.",
            "translation": "Start node configuration/registration for node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_UPDATE",
                "Start updating node {Arg_1}."
            ],
            "message": "Start updating node {Arg_1}.",
            "translation": "Start updating node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_UPDATE",
                "Complete node update for {Arg_1}."
            ],
            "message": "Complete node update for {Arg_1}.",
            "translation": "Complete node update for {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_UNREG",
                "Start node unregistration."
            ],
            "message": "Start node unregistration.",
            "translation": "Start node unregistration.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_UNREG",
                "Node unregistration complete for node {Arg_1}."
            ],
            "message": "Node unregistration complete for node {Arg_1}.",
            "translation": "Node unregistration complete for node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_NOT_FOUND",
                "Error unregistering the node. The node is not found from the database."
            ],
            "message": "Error unregistering the node. The node is not found from the database.",
            "translation": "Error unregistering the node. The node is not found from the database.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_NOT_IN_STATE",
                "Error unregistering the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it."
            ],
            "message": "Error unregistering the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it.",
            "translation": "Error unregistering the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_RN",
                "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode",
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_DC",
                "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean",
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_BLOCK",
                "Input error for node unregistration. {Arg_1} is an incorrect value for block"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for block",
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for block",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_READ_NODE_FROM_DB",
                "Unable to read node object from database, error {Arg_1}"
            ],
            "message": "Unable to read node object from database, error {Arg_1}",
            "translation": "Unable to read node object from database, error {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SAVE_NODE_CONF_TO_DB",
                "Error saving new node config state (unconfiguring) in the database: {Arg_1}"
            ],
            "message": "Error saving new node config state (unconfiguring) in the database: {Arg_1}",
            "translation": "Error saving new node config state (unconfiguring) in the database: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_CONF_NOT_FOUND",
                "Error in node configuration. The node is not found from the database."
            ],
            "message": "Error in node configuration. The node is not found from the database.",
            "translation": "Error in node configuration. The node is not found from the database.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_CONF_WRONG_STATE",
                "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}."
            ],
            "message": "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}.",
            "translation": "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_UNSUP_NODE_STATE_TRANS",
                "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported."
            ],
            "message": "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported.",
            "translation": "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_FAIL_GET_UI_FROM_DB",
                "Failed get user input from local db. {Arg_1}"
            ],
            "message": "Failed get user input from local db. {Arg_1}",
            "translation": "Failed get user input from local db. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_FAIL_FIND_SVC_PREF_FROM_UI",
                "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}"
            ],
            "message": "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}",
            "translation": "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SAVE_NODE_CONFSTATE",
                "Error saving new node config state to database: {Arg_1}"
            ],
            "message": "Error saving new node config state to database: {Arg_1}",
            "translation": "Error saving new node config state to database: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_REG",
                "Complete node configuration/registration for node {Arg_1}."
            ],
            "message": "Complete node configuration/registration for node {Arg_1}.",
            "translation": "Complete node configuration/registration for node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SVC_CONF",
                "Error in service configuration for {Arg_1}. {Arg_2}"
            ],
            "message": "Error in service configuration for {Arg_1}. {Arg_2}",
            "translation": "Error in service configuration for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_GET_SREFS_FOR_PATTERN",
                "Error getting service references for pattern {Arg_1}. {Arg_2}"
            ],
            "message": "Error getting service references for pattern {Arg_1}. {Arg_2}",
            "translation": "Error getting service references for pattern {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_IGNORE_TYPE_MISMATCH",
                "Ignoring service. {Arg_1}"
            ],
            "message": "Ignoring service. {Arg_1}",
            "translation": "Ignoring service. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NEW_NODE_POL",
                "New node policy: {Arg_1}"
            ],
            "message": "New node policy: {Arg_1}",
            "translation": "New node policy: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NODE_POL_DELETED",
                "Deleted node policy"
            ],
            "message": "Deleted node policy",
            "translation": "Deleted node policy",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NEW_NODE_UI",
                "New node user input: {Arg_1}"
            ],
            "message": "New node user input: {Arg_1}",
            "translation": "New node user input: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NO_NODE_UI_TO_DEL",
                "No node user input to detele"
            ],
            "message": "No node user input to detele",
            "translation": "No node user input to detele",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_DELETED_ALL_NODE_UI",
                "Deleted all node user input"
            ],
            "message": "Deleted all node user input",
            "translation": "Deleted all node user input",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_SVC_CONFIG",
                "Start service configuration with user input for {Arg_1}/{Arg_2}."
            ],
            "message": "Start service configuration with user input for {Arg_1}/{Arg_2}.",
            "translation": "Start service configuration with user input for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_SVC_AUTO_CONFIG",
                "Start service auto configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Start service auto configuration for {Arg_1}/{Arg_2}.",
            "translation": "Start service auto configuration for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_SVC_CONFIG",
                "Complete service configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Complete service configuration for {Arg_1}/{Arg_2}.",
            "translation": "Complete service configuration for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_SVC_AUTO_CONFIG",
                "Complete service auto configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Complete service auto configuration for {Arg_1}/{Arg_2}.",
            "translation": "Complete service auto configuration for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_MISS_VAR_IN_SVC_CONFIG",
                "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may prevent an agreement if the deployment policy does not contain the setting for the missing variable."
            ],
            "message": "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may prevent an agreement if the deployment policy does not contain the setting for the missing variable.",
            "translation": "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may prevent an agreement if the deployment policy does not contain the setting for the missing variable.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_CONFIG_SVC",
                "Error configuring service {Arg_1}. {Arg_2}"
            ],
            "message": "Error configuring service {Arg_1}. {Arg_2}",
            "translation": "Error configuring service {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_CHANGE_SVC_CONFIGSTATE",
                "Error changing service configstate {Arg_1}, error {Arg_2}"
            ],
            "message": "Error changing service configstate {Arg_1}, error {Arg_2}",
            "translation": "Error changing service configstate {Arg_1}, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_CHANGE_SVC_CONFIGSTATE",
                "Start changing service configuration state to {Arg_1} for {Arg_2} for the node."
            ],
            "message": "Start changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translation": "Start changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_CHANGE_SVC_CONFIGSTATE",
                "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node."
            ],
            "message": "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translation": "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NMP_STATUS_CHANGE",
                "Node management status for {Arg_1}/{Arg_2} changed to {Arg_3}."
            ],
            "message": "Node management status for {Arg_1}/{Arg_2} changed to {Arg_3}.",
            "translation": "Node management status for {Arg_1}/{Arg_2} changed to {Arg_3}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error converting the selections into Selectors: {Err}",
            "message": "Error converting the selections into Selectors: {Err}",
            "translation": "Error converting the selections into Selectors: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Name, or Org is empty string.",
            "message": "Name, or Org is empty string.",
            "translation": "Name, or Org is empty string.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The serviceVersions array is empty.",
            "message": "The serviceVersions array is empty.",
            "translation": "The serviceVersions array is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "retry_durations and retries cannot be zero if priority_value is set to non-zero value",
            "message": "retry_durations and retries cannot be zero if priority_value is set to non-zero value",
            "translation": "retry_durations and retries cannot be zero if priority_value is set to non-zero value",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "retry_durations, retries and verified_durations cannot be non-zero value if priority_value is zero or not set",
            "message": "retry_durations, retries and verified_durations cannot be non-zero value if priority_value is zero or not set",
            "translation": "retry_durations, retries and verified_durations cannot be non-zero value if priority_value is zero or not set",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "properties contains an invalid property: {Err}",
            "message": "properties contains an invalid property: {Err}",
            "translation": "properties contains an invalid property: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The property {PROPSVCPRIVILEGED} must have a boolean value (true or false).",
            "message": "The property {PROPSVCPRIVILEGED} must have a boolean value (true or false).",
            "translation": "The property {PROPSVCPRIVILEGED} must have a boolean value (true or false).",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PROPSVCPRIVILEGED",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "externalpolicy.PROP_SVC_PRIVILEGED"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get constraint with name {PROPNODEK8SNAMESPACE}, error: {Err}",
            "message": "Failed to get constraint with name {PROPNODEK8SNAMESPACE}, error: {Err}",
            "translation": "Failed to get constraint with name {PROPNODEK8SNAMESPACE}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PROPNODEK8SNAMESPACE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "externalpolicy.PROP_NODE_K8S_NAMESPACE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "kubernetesNamespace defined in the constraint {Newconstr} is different from the clusterNamespace '{ClusterNSInPolicy}' specified in the deployment policy, the policy might result in no service deployments",
            "message": "kubernetesNamespace defined in the constraint {Newconstr} is different from the clusterNamespace '{ClusterNSInPolicy}' specified in the deployment policy, the policy might result in no service deployments",
            "translation": "kubernetesNamespace defined in the constraint {Newconstr} is different from the clusterNamespace '{ClusterNSInPolicy}' specified in the deployment policy, the policy might result in no service deployments",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Newconstr",
                    "string": "%[1]v",
                    "type": "*github.com/open-horizon/anax/externalpolicy.ConstraintExpression",
                    "underlyingType": "*github.com/open-horizon/anax/externalpolicy.ConstraintExpression",
                    "argNum": 1,
                    "expr": "newconstr"
                },
                {
                    "id": "ClusterNSInPolicy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "clusterNSInPolicy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Command line interface for Horizon agent. Most of the sub-commands use the Horizon Agent API at the default location http://localhost (see environment Environment Variables section to override this).\n\nSubcommands Description:\n  agbot: List and manage Horizon agreement bot resources.\n  agreement: List or manage the agreements this edge node has made with a Horizon agreement bot.\n  architecture: Show the architecture of this machine. \n  attribute: List or manage the global attributes that are currently registered on this Horizon edge node.\n  deploycheck: Check deployment compatibility.\n  dev: Development tools for creation of services.\n  env: Show the Horizon Environment Variables.\n  eventlog: List the event logs for the current or all registrations.\n  exchange: List and manage Horizon Exchange resources.\n  key: List and manage keys for signing and verifying services. \n  mms: List and manage Horizon Model Management Service resources.\n  nmstatus: List and manage node management status for the local node.\n  node: List and manage general information about this Horizon edge node.\n  nodemanagement: List and manage manifests and agent files for node management.\n  policy: List and manage policy for this Horizon edge node. \n  reginput: Create an input file template for this pattern that can be used for the 'hzn register' command. \n  register: Register this edge node with the management hub.\n  secretsmanager: List and manage secrets in the secrets manager.\n  service: List or manage the services that are currently registered on this Horizon edge node.\n  status: Display the current horizon internal status for the node.\n  unregister: Unregister and reset this Horizon edge node.\n  userinput: List or manager the service user inputs that are currently registered on this Horizon edge node.\n  util: Utility commands.\n  version: Show the Horizon version.\n  sdo: List and manage Horizon SDO ownership vouchers and keys.\n  fdo: List and manage Horizon FDO ownership vouchers and keys.\n\nEnvironment Variables:\n  HORIZON_URL:  Override the URL at which hzn contacts the Horizon Agent API.\n      This can facilitate using a remote Horizon Agent via an ssh tunnel.\n  HZN_EXCHANGE_URL:  Override the URL that the 'hzn exchange' sub-commands use\n      to communicate with the Horizon Exchange, for example\n      https://exchange.bluehorizon.network/api/v1. (By default hzn will ask the\n      Horizon Agent for the URL.)\n  HZN_ORG_ID:  Default value for the 'hzn exchange -o' flag,\n      to specify the organization ID'.\n  HZN_EXCHANGE_USER_AUTH:  Default value for the 'hzn exchange -u' or 'hzn\n\t  register -u' flag, in the form '[org/]user:pw'. Notice that HZN_ORG_ID can be set\n\t  if org is omitted when HZN_EXCHANGE_USER_AUTH is set.\n  HZN_FSS_CSSURL:  Override the URL that the 'hzn mms' sub-commands use\n      to communicate with the Horizon Model Management Service, for example\n      https://exchange.bluehorizon.network/css/. (By default hzn will ask the\n      Horizon Agent for the URL.)\n  HZN_SDO_SVC_URL:  Override the URL that the 'hzn sdo' sub-commands use\n\t  to communicate with SDO owner services. (By default hzn will ask the\n\t\tHorizon Agent for the URL.)\n  HZN_FDO_SVC_URL:  Override the URL that the 'hzn fdo' sub-commands use\n\t  to communicate with FDO owner services. (By default hzn will ask the\n\t\tHorizon Agent for the URL.)\n\n  All these environment variables and ones mentioned in the command help can be\n  specified in user's configuration file: ~/.hzn/hzn.json with JSON format.\n  For example:\n  {Com____}",
            "message": "Command line interface for Horizon agent. Most of the sub-commands use the Horizon Agent API at the default location http://localhost (see environment Environment Variables section to override this).\n\nSubcommands Description:\n  agbot: List and manage Horizon agreement bot resources.\n  agreement: List or manage the agreements this edge node has made with a Horizon agreement bot.\n  architecture: Show the architecture of this machine. \n  attribute: List or manage the global attributes that are currently registered on this Horizon edge node.\n  deploycheck: Check deployment compatibility.\n  dev: Development tools for creation of services.\n  env: Show the Horizon Environment Variables.\n  eventlog: List the event logs for the current or all registrations.\n  exchange: List and manage Horizon Exchange resources.\n  key: List and manage keys for signing and verifying services. \n  mms: List and manage Horizon Model Management Service resources.\n  nmstatus: List and manage node management status for the local node.\n  node: List and manage general information about this Horizon edge node.\n  nodemanagement: List and manage manifests and agent files for node management.\n  policy: List and manage policy for this Horizon edge node. \n  reginput: Create an input file template for this pattern that can be used for the 'hzn register' command. \n  register: Register this edge node with the management hub.\n  secretsmanager: List and manage secrets in the secrets manager.\n  service: List or manage the services that are currently registered on this Horizon edge node.\n  status: Display the current horizon internal status for the node.\n  unregister: Unregister and reset this Horizon edge node.\n  userinput: List or manager the service user inputs that are currently registered on this Horizon edge node.\n  util: Utility commands.\n  version: Show the Horizon version.\n  sdo: List and manage Horizon SDO ownership vouchers and keys.\n  fdo: List and manage Horizon FDO ownership vouchers and keys.\n\nEnvironment Variables:\n  HORIZON_URL:  Override the URL at which hzn contacts the Horizon Agent API.\n      This can facilitate using a remote Horizon Agent via an ssh tunnel.\n  HZN_EXCHANGE_URL:  Override the URL that the 'hzn exchange' sub-commands use\n      to communicate with the Horizon Exchange, for example\n      https://exchange.bluehorizon.network/api/v1. (By default hzn will ask the\n      Horizon Agent for the URL.)\n  HZN_ORG_ID:  Default value for the 'hzn exchange -o' flag,\n      to specify the organization ID'.\n  HZN_EXCHANGE_USER_AUTH:  Default value for the 'hzn exchange -u' or 'hzn\n\t  register -u' flag, in the form '[org/]user:pw'. Notice that HZN_ORG_ID can be set\n\t  if org is omitted when HZN_EXCHANGE_USER_AUTH is set.\n  HZN_FSS_CSSURL:  Override the URL that the 'hzn mms' sub-commands use\n      to communicate with the Horizon Model Management Service, for example\n      https://exchange.bluehorizon.network/css/. (By default hzn will ask the\n      Horizon Agent for the URL.)\n  HZN_SDO_SVC_URL:  Override the URL that the 'hzn sdo' sub-commands use\n\t  to communicate with SDO owner services. (By default hzn will ask the\n\t\tHorizon Agent for the URL.)\n  HZN_FDO_SVC_URL:  Override the URL that the 'hzn fdo' sub-commands use\n\t  to communicate with FDO owner services. (By default hzn will ask the\n\t\tHorizon Agent for the URL.)\n\n  All these environment variables and ones mentioned in the command help can be\n  specified in user's configuration file: ~/.hzn/hzn.json with JSON format.\n  For example:\n  {Com____}",
            "translation": "Command line interface for Horizon agent. Most of the sub-commands use the Horizon Agent API at the default location http://localhost (see environment Environment Variables section to override this).\n\nSubcommands Description:\n  agbot: List and manage Horizon agreement bot resources.\n  agreement: List or manage the agreements this edge node has made with a Horizon agreement bot.\n  architecture: Show the architecture of this machine. \n  attribute: List or manage the global attributes that are currently registered on this Horizon edge node.\n  deploycheck: Check deployment compatibility.\n  dev: Development tools for creation of services.\n  env: Show the Horizon Environment Variables.\n  eventlog: List the event logs for the current or all registrations.\n  exchange: List and manage Horizon Exchange resources.\n  key: List and manage keys for signing and verifying services. \n  mms: List and manage Horizon Model Management Service resources.\n  nmstatus: List and manage node management status for the local node.\n  node: List and manage general information about this Horizon edge node.\n  nodemanagement: List and manage manifests and agent files for node management.\n  policy: List and manage policy for this Horizon edge node. \n  reginput: Create an input file template for this pattern that can be used for the 'hzn register' command. \n  register: Register this edge node with the management hub.\n  secretsmanager: List and manage secrets in the secrets manager.\n  service: List or manage the services that are currently registered on this Horizon edge node.\n  status: Display the current horizon internal status for the node.\n  unregister: Unregister and reset this Horizon edge node.\n  userinput: List or manager the service user inputs that are currently registered on this Horizon edge node.\n  util: Utility commands.\n  version: Show the Horizon version.\n  sdo: List and manage Horizon SDO ownership vouchers and keys.\n  fdo: List and manage Horizon FDO ownership vouchers and keys.\n\nEnvironment Variables:\n  HORIZON_URL:  Override the URL at which hzn contacts the Horizon Agent API.\n      This can facilitate using a remote Horizon Agent via an ssh tunnel.\n  HZN_EXCHANGE_URL:  Override the URL that the 'hzn exchange' sub-commands use\n      to communicate with the Horizon Exchange, for example\n      https://exchange.bluehorizon.network/api/v1. (By default hzn will ask the\n      Horizon Agent for the URL.)\n  HZN_ORG_ID:  Default value for the 'hzn exchange -o' flag,\n      to specify the organization ID'.\n  HZN_EXCHANGE_USER_AUTH:  Default value for the 'hzn exchange -u' or 'hzn\n\t  register -u' flag, in the form '[org/]user:pw'. Notice that HZN_ORG_ID can be set\n\t  if org is omitted when HZN_EXCHANGE_USER_AUTH is set.\n  HZN_FSS_CSSURL:  Override the URL that the 'hzn mms' sub-commands use\n      to communicate with the Horizon Model Management Service, for example\n      https://exchange.bluehorizon.network/css/. (By default hzn will ask the\n      Horizon Agent for the URL.)\n  HZN_SDO_SVC_URL:  Override the URL that the 'hzn sdo' sub-commands use\n\t  to communicate with SDO owner services. (By default hzn will ask the\n\t\tHorizon Agent for the URL.)\n  HZN_FDO_SVC_URL:  Override the URL that the 'hzn fdo' sub-commands use\n\t  to communicate with FDO owner services. (By default hzn will ask the\n\t\tHorizon Agent for the URL.)\n\n  All these environment variables and ones mentioned in the command help can be\n  specified in user's configuration file: ~/.hzn/hzn.json with JSON format.\n  For example:\n  {Com____}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Com____",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "`{\n    \"HZN_ORG_ID\": \"me@mycomp.com\"\n  }\n`"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Verbose output.",
            "message": "Verbose output.",
            "translation": "Verbose output.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When calling the Horizon or Exchange API, do GETs, but don't do PUTs, POSTs, or DELETEs.",
            "message": "When calling the Horizon or Exchange API, do GETs, but don't do PUTs, POSTs, or DELETEs.",
            "translation": "When calling the Horizon or Exchange API, do GETs, but don't do PUTs, POSTs, or DELETEs.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage Horizon agreement bot resources.",
            "message": "List and manage Horizon agreement bot resources.",
            "translation": "List and manage Horizon agreement bot resources.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the active or archived agreements this Horizon agreement bot has with edge nodes.",
            "message": "List or manage the active or archived agreements this Horizon agreement bot has with edge nodes.",
            "translation": "List or manage the active or archived agreements this Horizon agreement bot has with edge nodes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cancel 1 or all of the active agreements this Horizon agreement bot has with edge nodes. Usually an agbot will immediately negotiated a new agreement.",
            "message": "Cancel 1 or all of the active agreements this Horizon agreement bot has with edge nodes. Usually an agbot will immediately negotiated a new agreement.",
            "translation": "Cancel 1 or all of the active agreements this Horizon agreement bot has with edge nodes. Usually an agbot will immediately negotiated a new agreement.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cancel all of the current agreements.",
            "message": "Cancel all of the current agreements.",
            "translation": "Cancel all of the current agreements.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The active agreement to cancel.",
            "message": "The active agreement to cancel.",
            "translation": "The active agreement to cancel.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the active or archived agreements this Horizon agreement bot has with edge nodes.",
            "message": "List the active or archived agreements this Horizon agreement bot has with edge nodes.",
            "translation": "List the active or archived agreements this Horizon agreement bot has with edge nodes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List archived agreements instead of the active agreements.",
            "message": "List archived agreements instead of the active agreements.",
            "translation": "List archived agreements instead of the active agreements.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the details of this active or archived agreement.",
            "message": "Show the details of this active or archived agreement.",
            "translation": "Show the details of this active or archived agreement.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Manage cached agbot-serving organizations, patterns, and deployment policies.",
            "message": "Manage cached agbot-serving organizations, patterns, and deployment policies.",
            "translation": "Manage cached agbot-serving organizations, patterns, and deployment policies.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List served deployment policies cached in the agbot.",
            "message": "List served deployment policies cached in the agbot.",
            "translation": "List served deployment policies cached in the agbot.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display served deployment policies cached in the agbot.",
            "message": "Display served deployment policies cached in the agbot.",
            "translation": "Display served deployment policies cached in the agbot.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display policies under this org.",
            "message": "Display policies under this org.",
            "translation": "Display policies under this org.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display this policy.",
            "message": "Display this policy.",
            "translation": "Display this policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display detailed info.",
            "message": "Display detailed info.",
            "translation": "Display detailed info.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List patterns cached in the agbot.",
            "message": "List patterns cached in the agbot.",
            "translation": "List patterns cached in the agbot.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display served patterns cached in the agbot.",
            "message": "Display served patterns cached in the agbot.",
            "translation": "Display served patterns cached in the agbot.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display patterns under this org.",
            "message": "Display patterns under this org.",
            "translation": "Display patterns under this org.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display this pattern.",
            "message": "Display this pattern.",
            "translation": "Display this pattern.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List served pattern orgs and deployment policy orgs.",
            "message": "List served pattern orgs and deployment policy orgs.",
            "translation": "List served pattern orgs and deployment policy orgs.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display served pattern orgs and deployment policy orgs.",
            "message": "Display served pattern orgs and deployment policy orgs.",
            "translation": "Display served pattern orgs and deployment policy orgs.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display general information about this Horizon agbot node.",
            "message": "Display general information about this Horizon agbot node.",
            "translation": "Display general information about this Horizon agbot node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the policies this Horizon agreement bot hosts.",
            "message": "List the policies this Horizon agreement bot hosts.",
            "translation": "List the policies this Horizon agreement bot hosts.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List policies this Horizon agreement bot hosts.",
            "message": "List policies this Horizon agreement bot hosts.",
            "translation": "List policies this Horizon agreement bot hosts.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization the policy belongs to.",
            "message": "The organization the policy belongs to.",
            "translation": "The organization the policy belongs to.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The policy name.",
            "message": "The policy name.",
            "translation": "The policy name.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the current horizon internal status for the Horizon agreement bot.",
            "message": "Display the current horizon internal status for the Horizon agreement bot.",
            "translation": "Display the current horizon internal status for the Horizon agreement bot.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show detailed status",
            "message": "Show detailed status",
            "translation": "Show detailed status",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the active or archived agreements this edge node has made with a Horizon agreement bot.",
            "message": "List or manage the active or archived agreements this edge node has made with a Horizon agreement bot.",
            "translation": "List or manage the active or archived agreements this edge node has made with a Horizon agreement bot.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the active or archived agreements this edge node has made with a Horizon agreement bot.",
            "message": "List the active or archived agreements this edge node has made with a Horizon agreement bot.",
            "translation": "List the active or archived agreements this edge node has made with a Horizon agreement bot.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cancel 1 or all of the active agreements this edge node has made with a Horizon agreement bot. Usually an agbot will immediately negotiated a new agreement. If you want to cancel all agreements and not have this edge accept new agreements, run 'hzn unregister'.",
            "message": "Cancel 1 or all of the active agreements this edge node has made with a Horizon agreement bot. Usually an agbot will immediately negotiated a new agreement. If you want to cancel all agreements and not have this edge accept new agreements, run 'hzn unregister'.",
            "translation": "Cancel 1 or all of the active agreements this edge node has made with a Horizon agreement bot. Usually an agbot will immediately negotiated a new agreement. If you want to cancel all agreements and not have this edge accept new agreements, run 'hzn unregister'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the architecture of this machine (as defined by Horizon and golang).",
            "message": "Show the architecture of this machine (as defined by Horizon and golang).",
            "translation": "Show the architecture of this machine (as defined by Horizon and golang).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the global attributes that are currently registered on this Horizon edge node.",
            "message": "List or manage the global attributes that are currently registered on this Horizon edge node.",
            "translation": "List or manage the global attributes that are currently registered on this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the global attributes that are currently registered on this Horizon edge node.",
            "message": "List the global attributes that are currently registered on this Horizon edge node.",
            "translation": "List the global attributes that are currently registered on this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Check deployment compatibility.",
            "message": "Check deployment compatibility.",
            "translation": "Check deployment compatibility.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange organization ID. If not specified, HZN_ORG_ID will be used as a default.",
            "message": "The Horizon exchange organization ID. If not specified, HZN_ORG_ID will be used as a default.",
            "translation": "The Horizon exchange organization ID. If not specified, HZN_ORG_ID will be used as a default.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon exchange user credential to query exchange resources. If not specified, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH will be used as a default. If you don't prepend it with the organization id, it will automatically be prepended with the -o value.",
            "message": "Horizon exchange user credential to query exchange resources. If not specified, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH will be used as a default. If you don't prepend it with the organization id, it will automatically be prepended with the -o value.",
            "translation": "Horizon exchange user credential to query exchange resources. If not specified, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH will be used as a default. If you don't prepend it with the organization id, it will automatically be prepended with the -o value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the compatibility status of all the service versions referenced in the deployment policy.",
            "message": "Show the compatibility status of all the service versions referenced in the deployment policy.",
            "translation": "Show the compatibility status of all the service versions referenced in the deployment policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show policies and userinput used for the compatibility checking.",
            "message": "Show policies and userinput used for the compatibility checking.",
            "translation": "Show policies and userinput used for the compatibility checking.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Check all compatibilities for a deployment.",
            "message": "Check all compatibilities for a deployment.",
            "translation": "Check all compatibilities for a deployment.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The architecture of the node. It is required when -n is not specified. If omitted, the service of all the architectures referenced in the deployment policy or pattern will be checked for compatibility.",
            "message": "The architecture of the node. It is required when -n is not specified. If omitted, the service of all the architectures referenced in the deployment policy or pattern will be checked for compatibility.",
            "translation": "The architecture of the node. It is required when -n is not specified. If omitted, the service of all the architectures referenced in the deployment policy or pattern will be checked for compatibility.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node type. The valid values are 'device' and 'cluster'. The default value is the type of the node provided by -n or current registered device, if omitted.",
            "message": "The node type. The valid values are 'device' and 'cluster'. The default value is the type of the node provided by -n or current registered device, if omitted.",
            "translation": "The node type. The valid values are 'device' and 'cluster'. The default value is the type of the node provided by -n or current registered device, if omitted.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Kubernetes cluster namespace for the node if the node type is 'cluster'. The default value is 'openhorizon-agent', if omitted. The value is ignored when the node type is 'device'",
            "message": "The Kubernetes cluster namespace for the node if the node type is 'cluster'. The default value is 'openhorizon-agent', if omitted. The value is ignored when the node type is 'device'",
            "translation": "The Kubernetes cluster namespace for the node if the node type is 'cluster'. The default value is 'openhorizon-agent', if omitted. The value is ignored when the node type is 'device'",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The cluster scope for the node is namespace scoped if the node type is 'cluster'. The default value is false, if omitted. The value is ignored when the node type is 'device'",
            "message": "The cluster scope for the node is namespace scoped if the node type is 'cluster'. The default value is false, if omitted. The value is ignored when the node type is 'device'",
            "translation": "The cluster scope for the node is namespace scoped if the node type is 'cluster'. The default value is false, if omitted. The value is ignored when the node type is 'device'",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the node. The default value is the organization of the node provided by -n or current registered device, if omitted.",
            "message": "The organization of the node. The default value is the organization of the node provided by -n or current registered device, if omitted.",
            "translation": "The organization of the node. The default value is the organization of the node provided by -n or current registered device, if omitted.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange node ID. Mutually exclusive with --ha-group, --node-pol and --node-ui. If omitted, the node ID that the current device is registered with will be used. This flag can be repeated to specify more than one nodes. If you don't prepend a node id with the organization id, it will automatically be prepended with the -o value.",
            "message": "The Horizon exchange node ID. Mutually exclusive with --ha-group, --node-pol and --node-ui. If omitted, the node ID that the current device is registered with will be used. This flag can be repeated to specify more than one nodes. If you don't prepend a node id with the organization id, it will automatically be prepended with the -o value.",
            "translation": "The Horizon exchange node ID. Mutually exclusive with --ha-group, --node-pol and --node-ui. If omitted, the node ID that the current device is registered with will be used. This flag can be repeated to specify more than one nodes. If you don't prepend a node id with the organization id, it will automatically be prepended with the -o value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of an HA group. The deployment check will be performed on all the nodes within the given HA group. Mutually exclusive with -n, --node-pol and --node-ui.",
            "message": "The name of an HA group. The deployment check will be performed on all the nodes within the given HA group. Mutually exclusive with -n, --node-pol and --node-ui.",
            "translation": "The name of an HA group. The deployment check will be performed on all the nodes within the given HA group. Mutually exclusive with -n, --node-pol and --node-ui.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input file name containing the node policy. Mutually exclusive with -n, --ha-group, -p and -P.",
            "message": "The JSON input file name containing the node policy. Mutually exclusive with -n, --ha-group, -p and -P.",
            "translation": "The JSON input file name containing the node policy. Mutually exclusive with -n, --ha-group, -p and -P.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input file name containing the node user input. Mutually exclusive with -n, --ha-group.",
            "message": "The JSON input file name containing the node user input. Mutually exclusive with -n, --ha-group.",
            "translation": "The JSON input file name containing the node user input. Mutually exclusive with -n, --ha-group.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange deployment policy ID. Mutually exclusive with -B, -p and -P. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "message": "The Horizon exchange deployment policy ID. Mutually exclusive with -B, -p and -P. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "translation": "The Horizon exchange deployment policy ID. Mutually exclusive with -B, -p and -P. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input file name containing the deployment policy. Mutually exclusive with -b, -p and -P.",
            "message": "The JSON input file name containing the deployment policy. Mutually exclusive with -b, -p and -P.",
            "translation": "The JSON input file name containing the deployment policy. Mutually exclusive with -b, -p and -P.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(optional) The JSON input file name containing the service policy. Mutually exclusive with -p and -P. If omitted, the service policy will be retrieved from the Exchange for the service defined in the deployment policy.",
            "message": "(optional) The JSON input file name containing the service policy. Mutually exclusive with -p and -P. If omitted, the service policy will be retrieved from the Exchange for the service defined in the deployment policy.",
            "translation": "(optional) The JSON input file name containing the service policy. Mutually exclusive with -p and -P. If omitted, the service policy will be retrieved from the Exchange for the service defined in the deployment policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(optional) The JSON input file name containing the service definition. If omitted, the service defined in the deployment policy or pattern will be retrieved from the Exchange. This flag can be repeated to specify different versions of the service.",
            "message": "(optional) The JSON input file name containing the service definition. If omitted, the service defined in the deployment policy or pattern will be retrieved from the Exchange. This flag can be repeated to specify different versions of the service.",
            "translation": "(optional) The JSON input file name containing the service definition. If omitted, the service defined in the deployment policy or pattern will be retrieved from the Exchange. This flag can be repeated to specify different versions of the service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange pattern ID. Mutually exclusive with -P, -b, -B --node-pol and --service-pol. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "message": "The Horizon exchange pattern ID. Mutually exclusive with -P, -b, -B --node-pol and --service-pol. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "translation": "The Horizon exchange pattern ID. Mutually exclusive with -P, -b, -B --node-pol and --service-pol. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input file name containing the pattern. Mutually exclusive with -p, -b and -B, --node-pol and --service-pol.",
            "message": "The JSON input file name containing the pattern. Mutually exclusive with -p, -b and -B, --node-pol and --service-pol.",
            "translation": "The JSON input file name containing the pattern. Mutually exclusive with -p, -b and -B, --node-pol and --service-pol.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Check policy compatibility.",
            "message": "Check policy compatibility.",
            "translation": "Check policy compatibility.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The architecture of the node. It is required when -n is not specified. If omitted, the service of all the architectures referenced in the deployment policy will be checked for compatibility.",
            "message": "The architecture of the node. It is required when -n is not specified. If omitted, the service of all the architectures referenced in the deployment policy will be checked for compatibility.",
            "translation": "The architecture of the node. It is required when -n is not specified. If omitted, the service of all the architectures referenced in the deployment policy will be checked for compatibility.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange node ID. Mutually exclusive with --ha-group and --node-pol. If omitted, the node ID that the current device is registered with will be used. This flag can be repeated to specify more than one nodes. If you don't prepend a node id with the organization id, it will automatically be prepended with the -o value.",
            "message": "The Horizon exchange node ID. Mutually exclusive with --ha-group and --node-pol. If omitted, the node ID that the current device is registered with will be used. This flag can be repeated to specify more than one nodes. If you don't prepend a node id with the organization id, it will automatically be prepended with the -o value.",
            "translation": "The Horizon exchange node ID. Mutually exclusive with --ha-group and --node-pol. If omitted, the node ID that the current device is registered with will be used. This flag can be repeated to specify more than one nodes. If you don't prepend a node id with the organization id, it will automatically be prepended with the -o value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of an HA group. The deployment check will be performed on all the nodes within the given HA group. Mutually exclusive with -n and --node-pol.",
            "message": "The name of an HA group. The deployment check will be performed on all the nodes within the given HA group. Mutually exclusive with -n and --node-pol.",
            "translation": "The name of an HA group. The deployment check will be performed on all the nodes within the given HA group. Mutually exclusive with -n and --node-pol.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input file name containing the node policy. Mutually exclusive with -n, --ha-group.",
            "message": "The JSON input file name containing the node policy. Mutually exclusive with -n, --ha-group.",
            "translation": "The JSON input file name containing the node policy. Mutually exclusive with -n, --ha-group.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange deployment policy ID. Mutually exclusive with -B. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "message": "The Horizon exchange deployment policy ID. Mutually exclusive with -B. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "translation": "The Horizon exchange deployment policy ID. Mutually exclusive with -B. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input file name containing the Deployment policy. Mutually exclusive with -b.",
            "message": "The JSON input file name containing the Deployment policy. Mutually exclusive with -b.",
            "translation": "The JSON input file name containing the Deployment policy. Mutually exclusive with -b.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(optional) The JSON input file name containing the service policy. If omitted, the service policy will be retrieved from the Exchange for the service defined in the deployment policy.",
            "message": "(optional) The JSON input file name containing the service policy. If omitted, the service policy will be retrieved from the Exchange for the service defined in the deployment policy.",
            "translation": "(optional) The JSON input file name containing the service policy. If omitted, the service policy will be retrieved from the Exchange for the service defined in the deployment policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(optional) The JSON input file name containing the service definition. Mutually exclusive with -b. If omitted, the service referenced in the deployment policy is retrieved from the Exchange. This flag can be repeated to specify different versions of the service.",
            "message": "(optional) The JSON input file name containing the service definition. Mutually exclusive with -b. If omitted, the service referenced in the deployment policy is retrieved from the Exchange. This flag can be repeated to specify different versions of the service.",
            "translation": "(optional) The JSON input file name containing the service definition. Mutually exclusive with -b. If omitted, the service referenced in the deployment policy is retrieved from the Exchange. This flag can be repeated to specify different versions of the service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Check secret bindings.",
            "message": "Check secret bindings.",
            "translation": "Check secret bindings.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange node ID. If omitted, the node ID that the current device is registered with will be used. If you don't prepend it with the organization id, it will automatically be prepended with the -o value.",
            "message": "The Horizon exchange node ID. If omitted, the node ID that the current device is registered with will be used. If you don't prepend it with the organization id, it will automatically be prepended with the -o value.",
            "translation": "The Horizon exchange node ID. If omitted, the node ID that the current device is registered with will be used. If you don't prepend it with the organization id, it will automatically be prepended with the -o value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange pattern ID. Mutually exclusive with -P, -b and -B. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "message": "The Horizon exchange pattern ID. Mutually exclusive with -P, -b and -B. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "translation": "The Horizon exchange pattern ID. Mutually exclusive with -P, -b and -B. If you don't prepend it with the organization id, it will automatically be prepended with the node's organization id.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input file name containing the pattern. Mutually exclusive with -p, -b and -B.",
            "message": "The JSON input file name containing the pattern. Mutually exclusive with -p, -b and -B.",
            "translation": "The JSON input file name containing the pattern. Mutually exclusive with -p, -b and -B.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Check user input compatibility.",
            "message": "Check user input compatibility.",
            "translation": "Check user input compatibility.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange node ID. Mutually exclusive with --node-ui. If omitted, the node ID that the current device is registered with will be used. If you don't prepend it with the organization id, it will automatically be prepended with the -o value.",
            "message": "The Horizon exchange node ID. Mutually exclusive with --node-ui. If omitted, the node ID that the current device is registered with will be used. If you don't prepend it with the organization id, it will automatically be prepended with the -o value.",
            "translation": "The Horizon exchange node ID. Mutually exclusive with --node-ui. If omitted, the node ID that the current device is registered with will be used. If you don't prepend it with the organization id, it will automatically be prepended with the -o value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input file name containing the node user input. Mutually exclusive with -n.",
            "message": "The JSON input file name containing the node user input. Mutually exclusive with -n.",
            "translation": "The JSON input file name containing the node user input. Mutually exclusive with -n.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Development tools for creation of services.",
            "message": "Development tools for creation of services.",
            "translation": "Development tools for creation of services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Directory containing Horizon project metadata. If omitted, a subdirectory called 'horizon' under current directory will be used.",
            "message": "Directory containing Horizon project metadata. If omitted, a subdirectory called 'horizon' under current directory will be used.",
            "translation": "Directory containing Horizon project metadata. If omitted, a subdirectory called 'horizon' under current directory will be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "For working with project dependencies.",
            "message": "For working with project dependencies.",
            "translation": "For working with project dependencies.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The URL of the service dependency in the Exchange. Mutually exclusive with -p and --url.",
            "message": "The URL of the service dependency in the Exchange. Mutually exclusive with -p and --url.",
            "translation": "The URL of the service dependency in the Exchange. Mutually exclusive with -p and --url.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The URL of the service dependency in the Exchange. Mutually exclusive with -p and --specRef.",
            "message": "The URL of the service dependency in the Exchange. Mutually exclusive with -p and --specRef.",
            "translation": "The URL of the service dependency in the Exchange. Mutually exclusive with -p and --specRef.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Org of the service dependency in the Exchange. Mutually exclusive with -p.",
            "message": "The Org of the service dependency in the Exchange. Mutually exclusive with -p.",
            "translation": "The Org of the service dependency in the Exchange. Mutually exclusive with -p.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(optional) The Version of the service dependency in the Exchange. Mutually exclusive with -p.",
            "message": "(optional) The Version of the service dependency in the Exchange. Mutually exclusive with -p.",
            "translation": "(optional) The Version of the service dependency in the Exchange. Mutually exclusive with -p.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(optional) The hardware Architecture of the service dependency in the Exchange. Mutually exclusive with -p.",
            "message": "(optional) The hardware Architecture of the service dependency in the Exchange. Mutually exclusive with -p.",
            "translation": "(optional) The hardware Architecture of the service dependency in the Exchange. Mutually exclusive with -p.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Retrieving Horizon metadata for a new dependency.",
            "message": "Retrieving Horizon metadata for a new dependency.",
            "translation": "Retrieving Horizon metadata for a new dependency.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon project containing the definition of a dependency. Mutually exclusive with -s -o --ver -a and --url.",
            "message": "Horizon project containing the definition of a dependency. Mutually exclusive with -s -o --ver -a and --url.",
            "translation": "Horizon project containing the definition of a dependency. Mutually exclusive with -s -o --ver -a and --url.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon Exchange user credentials to query exchange resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "message": "Horizon Exchange user credentials to query exchange resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "translation": "Horizon Exchange user credentials to query exchange resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "File containing user input values for configuring the new dependency. If omitted, the userinput file in the dependency project will be used.",
            "message": "File containing user input values for configuring the new dependency. If omitted, the userinput file in the dependency project will be used.",
            "translation": "File containing user input values for configuring the new dependency. If omitted, the userinput file in the dependency project will be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List all dependencies.",
            "message": "List all dependencies.",
            "translation": "List all dependencies.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a project dependency.",
            "message": "Remove a project dependency.",
            "translation": "Remove a project dependency.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "For working with a service project.",
            "message": "For working with a service project.",
            "translation": "For working with a service project.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the container/system logs for a service.",
            "message": "Show the container/system logs for a service.",
            "translation": "Show the container/system logs for a service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the service whose log records should be displayed. The service name is the same as the url field of a service definition.",
            "message": "The name of the service whose log records should be displayed. The service name is the same as the url field of a service definition.",
            "translation": "The name of the service whose log records should be displayed. The service name is the same as the url field of a service definition.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(DEPRECATED) This flag is deprecated and is replaced by -c.",
            "message": "(DEPRECATED) This flag is deprecated and is replaced by -c.",
            "translation": "(DEPRECATED) This flag is deprecated and is replaced by -c.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the service container whose log records should be displayed. Can be omitted if the service definition has only one container in its deployment config.",
            "message": "The name of the service container whose log records should be displayed. Can be omitted if the service definition has only one container in its deployment config.",
            "translation": "The name of the service container whose log records should be displayed. Can be omitted if the service definition has only one container in its deployment config.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Continuously polls the service's logs to display the most recent records, similar to tail -F behavior.",
            "message": "Continuously polls the service's logs to display the most recent records, similar to tail -F behavior.",
            "translation": "Continuously polls the service's logs to display the most recent records, similar to tail -F behavior.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create a new service project.",
            "message": "Create a new service project.",
            "translation": "Create a new service project.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Org id that the service is defined within. If this flag is omitted, the HZN_ORG_ID environment variable is used.",
            "message": "The Org id that the service is defined within. If this flag is omitted, the HZN_ORG_ID environment variable is used.",
            "translation": "The Org id that the service is defined within. If this flag is omitted, the HZN_ORG_ID environment variable is used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the service. If this flag and the -i flag are omitted, only the skeletal horizon metadata files will be generated.",
            "message": "The name of the service. If this flag and the -i flag are omitted, only the skeletal horizon metadata files will be generated.",
            "translation": "The name of the service. If this flag and the -i flag are omitted, only the skeletal horizon metadata files will be generated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The version of the service. If this flag is omitted, '0.0.1' is used.",
            "message": "The version of the service. If this flag is omitted, '0.0.1' is used.",
            "translation": "The version of the service. If this flag is omitted, '0.0.1' is used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The docker container image base name without the version tag for the service. This command will add arch and version to the base name to form the final image name. The format is 'basename_arch:serviceversion'. This flag can be repeated to specify multiple images when '--noImageGen' flag is specified. This flag is ignored for the '--dconfig {KUBEDEPLOYMENTCONFIGTYPE}' deployment configuration.",
            "message": "The docker container image base name without the version tag for the service. This command will add arch and version to the base name to form the final image name. The format is 'basename_arch:serviceversion'. This flag can be repeated to specify multiple images when '--noImageGen' flag is specified. This flag is ignored for the '--dconfig {KUBEDEPLOYMENTCONFIGTYPE}' deployment configuration.",
            "translation": "The docker container image base name without the version tag for the service. This command will add arch and version to the base name to form the final image name. The format is 'basename_arch:serviceversion'. This flag can be repeated to specify multiple images when '--noImageGen' flag is specified. This flag is ignored for the '--dconfig {KUBEDEPLOYMENTCONFIGTYPE}' deployment configuration.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KUBEDEPLOYMENTCONFIGTYPE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "kube_deployment.KUBE_DEPLOYMENT_CONFIG_TYPE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Indicates that the image is built somewhere else. No image sample code will be created by this command. If this flag is not specified, files for generating a simple service image will be created under current directory.",
            "message": "Indicates that the image is built somewhere else. No image sample code will be created by this command. If this flag is not specified, files for generating a simple service image will be created under current directory.",
            "translation": "Indicates that the image is built somewhere else. No image sample code will be created by this command. If this flag is not specified, files for generating a simple service image will be created under current directory.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Indicates no pattern definition file will be created.",
            "message": "Indicates no pattern definition file will be created.",
            "translation": "Indicates no pattern definition file will be created.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Indicate no policy file will be created.",
            "message": "Indicate no policy file will be created.",
            "translation": "Indicate no policy file will be created.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Indicates the type of deployment configuration that will be used, native (the default), or {KUBEDEPLOYMENTCONFIGTYPE}. This flag can be specified more than once to create a service with more than 1 kind of deployment configuration.",
            "message": "Indicates the type of deployment configuration that will be used, native (the default), or {KUBEDEPLOYMENTCONFIGTYPE}. This flag can be specified more than once to create a service with more than 1 kind of deployment configuration.",
            "translation": "Indicates the type of deployment configuration that will be used, native (the default), or {KUBEDEPLOYMENTCONFIGTYPE}. This flag can be specified more than once to create a service with more than 1 kind of deployment configuration.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KUBEDEPLOYMENTCONFIGTYPE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "kube_deployment.KUBE_DEPLOYMENT_CONFIG_TYPE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Run a service in a mocked Horizon Agent environment. This command is not supported for services using the {KUBEDEPLOYMENTCONFIGTYPE} deployment configuration.",
            "message": "Run a service in a mocked Horizon Agent environment. This command is not supported for services using the {KUBEDEPLOYMENTCONFIGTYPE} deployment configuration.",
            "translation": "Run a service in a mocked Horizon Agent environment. This command is not supported for services using the {KUBEDEPLOYMENTCONFIGTYPE} deployment configuration.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KUBEDEPLOYMENTCONFIGTYPE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "kube_deployment.KUBE_DEPLOYMENT_CONFIG_TYPE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "File containing user input values for running a test. If omitted, the userinput file for the project will be used.",
            "message": "File containing user input values for running a test. If omitted, the userinput file for the project will be used.",
            "translation": "File containing user input values for running a test. If omitted, the userinput file for the project will be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "File to be made available through the sync service APIs. This flag can be repeated to populate multiple files.",
            "message": "File to be made available through the sync service APIs. This flag can be repeated to populate multiple files.",
            "translation": "File to be made available through the sync service APIs. This flag can be repeated to populate multiple files.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of file to be made available through the sync service APIs. All config files are presumed to be of the same type. This flag is required if any configFiles are specified.",
            "message": "The type of file to be made available through the sync service APIs. All config files are presumed to be of the same type. This flag is required if any configFiles are specified.",
            "translation": "The type of file to be made available through the sync service APIs. All config files are presumed to be of the same type. This flag is required if any configFiles are specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Do not bring up file sync service (FSS) containers. They are brought up by default.",
            "message": "Do not bring up file sync service (FSS) containers. They are brought up by default.",
            "translation": "Do not bring up file sync service (FSS) containers. They are brought up by default.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon Exchange user credentials to query exchange resources. Specify it when you want to automatically fetch the missing dependent services from the Exchange. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "message": "Horizon Exchange user credentials to query exchange resources. Specify it when you want to automatically fetch the missing dependent services from the Exchange. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "translation": "Horizon Exchange user credentials to query exchange resources. Specify it when you want to automatically fetch the missing dependent services from the Exchange. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Filepath of a file containing a secret that is required by the service or one of its dependent services. The filename must match a secret name in the service definition. The file is encoded in JSON as an object containing two keys both typed as a string; \"key\" is used to indicate the kind of secret, and \"value\" is the string form of the secret. This flag can be repeated.",
            "message": "Filepath of a file containing a secret that is required by the service or one of its dependent services. The filename must match a secret name in the service definition. The file is encoded in JSON as an object containing two keys both typed as a string; \"key\" is used to indicate the kind of secret, and \"value\" is the string form of the secret. This flag can be repeated.",
            "translation": "Filepath of a file containing a secret that is required by the service or one of its dependent services. The filename must match a secret name in the service definition. The file is encoded in JSON as an object containing two keys both typed as a string; \"key\" is used to indicate the kind of secret, and \"value\" is the string form of the secret. This flag can be repeated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Stop a service that is running in a mocked Horizon Agent environment. This command is not supported for services using the {KUBEDEPLOYMENTCONFIGTYPE} deployment configuration.",
            "message": "Stop a service that is running in a mocked Horizon Agent environment. This command is not supported for services using the {KUBEDEPLOYMENTCONFIGTYPE} deployment configuration.",
            "translation": "Stop a service that is running in a mocked Horizon Agent environment. This command is not supported for services using the {KUBEDEPLOYMENTCONFIGTYPE} deployment configuration.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KUBEDEPLOYMENTCONFIGTYPE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "kube_deployment.KUBE_DEPLOYMENT_CONFIG_TYPE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Validate the project for completeness and schema compliance.",
            "message": "Validate the project for completeness and schema compliance.",
            "translation": "Validate the project for completeness and schema compliance.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "File containing user input values for verification of a project. If omitted, the userinput file for the project will be used.",
            "message": "File containing user input values for verification of a project. If omitted, the userinput file for the project will be used.",
            "translation": "File containing user input values for verification of a project. If omitted, the userinput file for the project will be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the Horizon Environment Variables.",
            "message": "Show the Horizon Environment Variables.",
            "translation": "Show the Horizon Environment Variables.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the event logs for the current or all registrations.",
            "message": "List the event logs for the current or all registrations.",
            "translation": "List the event logs for the current or all registrations.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Continuously polls the event log to display the most recent records, similar to tail -F behavior.",
            "message": "Continuously polls the event log to display the most recent records, similar to tail -F behavior.",
            "translation": "Continuously polls the event log to display the most recent records, similar to tail -F behavior.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List all the event logs including the previous registrations.",
            "message": "List all the event logs including the previous registrations.",
            "translation": "List all the event logs including the previous registrations.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List event logs with details.",
            "message": "List event logs with details.",
            "translation": "List event logs with details.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Selection string. This flag can be repeated which means 'AND'. Each flag should be in the format of attribute=value, attribute~value, \"attribute\u003evalue\" or \"attribute\u003cvalue\", where '~' means contains. The common attribute names are timestamp, severity, message, event_code, source_type, agreement_id, service_url etc. Use the '-l' flag to see all the attribute names.",
            "message": "Selection string. This flag can be repeated which means 'AND'. Each flag should be in the format of attribute=value, attribute~value, \"attribute\u003evalue\" or \"attribute\u003cvalue\", where '~' means contains. The common attribute names are timestamp, severity, message, event_code, source_type, agreement_id, service_url etc. Use the '-l' flag to see all the attribute names.",
            "translation": "Selection string. This flag can be repeated which means 'AND'. Each flag should be in the format of attribute=value, attribute~value, \"attribute\u003evalue\" or \"attribute\u003cvalue\", where '~' means contains. The common attribute names are timestamp, severity, message, event_code, source_type, agreement_id, service_url etc. Use the '-l' flag to see all the attribute names.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List all the active errors that will be shared with the Exchange if the node is online.",
            "message": "List all the active errors that will be shared with the Exchange if the node is online.",
            "translation": "List all the active errors that will be shared with the Exchange if the node is online.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the full event logs of the surface errors.",
            "message": "List the full event logs of the surface errors.",
            "translation": "List the full event logs of the surface errors.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage Horizon Exchange resources.",
            "message": "List and manage Horizon Exchange resources.",
            "translation": "List and manage Horizon Exchange resources.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon Exchange user credentials to query and create exchange resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value. As an alternative to using -o, you can set HZN_ORG_ID with the Horizon exchange organization ID",
            "message": "Horizon Exchange user credentials to query and create exchange resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value. As an alternative to using -o, you can set HZN_ORG_ID with the Horizon exchange organization ID",
            "translation": "Horizon Exchange user credentials to query and create exchange resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value. As an alternative to using -o, you can set HZN_ORG_ID with the Horizon exchange organization ID",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage agbots in the Horizon Exchange",
            "message": "List and manage agbots in the Horizon Exchange",
            "translation": "List and manage agbots in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add this deployment policy to the list of policies this agbot is serving. Currently only support adding all the deployment policies from an organization.",
            "message": "Add this deployment policy to the list of policies this agbot is serving. Currently only support adding all the deployment policies from an organization.",
            "translation": "Add this deployment policy to the list of policies this agbot is serving. Currently only support adding all the deployment policies from an organization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to add the deployment policy to.",
            "message": "The agbot to add the deployment policy to.",
            "translation": "The agbot to add the deployment policy to.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the deployment policy to add.",
            "message": "The organization of the deployment policy to add.",
            "translation": "The organization of the deployment policy to add.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add this pattern to the list of patterns this agbot is serving.",
            "message": "Add this pattern to the list of patterns this agbot is serving.",
            "translation": "Add this pattern to the list of patterns this agbot is serving.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to add the pattern to.",
            "message": "The agbot to add the pattern to.",
            "translation": "The agbot to add the pattern to.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the pattern to add.",
            "message": "The organization of the pattern to add.",
            "translation": "The organization of the pattern to add.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the pattern to add.",
            "message": "The name of the pattern to add.",
            "translation": "The name of the pattern to add.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the nodes that should be searched. Defaults to patternorg.",
            "message": "The organization of the nodes that should be searched. Defaults to patternorg.",
            "translation": "The organization of the nodes that should be searched. Defaults to patternorg.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the agbot resources from the Horizon Exchange.",
            "message": "Display the agbot resources from the Horizon Exchange.",
            "translation": "Display the agbot resources from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one agbot.",
            "message": "List just this one agbot.",
            "translation": "List just this one agbot.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When listing all of the agbots, show the entire resource of each agbots, instead of just the name.",
            "message": "When listing all of the agbots, show the entire resource of each agbots, instead of just the name.",
            "translation": "When listing all of the agbots, show the entire resource of each agbots, instead of just the name.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the deployment policies that this agbot is serving.",
            "message": "Display the deployment policies that this agbot is serving.",
            "translation": "Display the deployment policies that this agbot is serving.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to list serving deployment policies for.",
            "message": "The agbot to list serving deployment policies for.",
            "translation": "The agbot to list serving deployment policies for.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the patterns that this agbot is serving.",
            "message": "Display the patterns that this agbot is serving.",
            "translation": "Display the patterns that this agbot is serving.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to list the patterns for.",
            "message": "The agbot to list the patterns for.",
            "translation": "The agbot to list the patterns for.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the 1 pattern to list.",
            "message": "The organization of the 1 pattern to list.",
            "translation": "The organization of the 1 pattern to list.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the 1 pattern to list.",
            "message": "The name of the 1 pattern to list.",
            "translation": "The name of the 1 pattern to list.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove this deployment policy from the list of policies this agbot is serving. Currently only support removing all the deployment policies from an organization.",
            "message": "Remove this deployment policy from the list of policies this agbot is serving. Currently only support removing all the deployment policies from an organization.",
            "translation": "Remove this deployment policy from the list of policies this agbot is serving. Currently only support removing all the deployment policies from an organization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to remove the deployment policy from.",
            "message": "The agbot to remove the deployment policy from.",
            "translation": "The agbot to remove the deployment policy from.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the deployment policy to remove.",
            "message": "The organization of the deployment policy to remove.",
            "translation": "The organization of the deployment policy to remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove this pattern from the list of patterns this agbot is serving.",
            "message": "Remove this pattern from the list of patterns this agbot is serving.",
            "translation": "Remove this pattern from the list of patterns this agbot is serving.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to remove the pattern from.",
            "message": "The agbot to remove the pattern from.",
            "translation": "The agbot to remove the pattern from.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the pattern to remove.",
            "message": "The organization of the pattern to remove.",
            "translation": "The organization of the pattern to remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the pattern to remove.",
            "message": "The name of the pattern to remove.",
            "translation": "The name of the pattern to remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List all public services/patterns in all orgs that have orgType: IBM.",
            "message": "List all public services/patterns in all orgs that have orgType: IBM.",
            "translation": "List all public services/patterns in all orgs that have orgType: IBM.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display all public patterns in all orgs that have orgType: IBM.",
            "message": "Display all public patterns in all orgs that have orgType: IBM.",
            "translation": "Display all public patterns in all orgs that have orgType: IBM.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Only display org (IBM) and pattern names.",
            "message": "Only display org (IBM) and pattern names.",
            "translation": "Only display org (IBM) and pattern names.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display detailed output about public patterns in all orgs that have orgType: IBM.",
            "message": "Display detailed output about public patterns in all orgs that have orgType: IBM.",
            "translation": "Display detailed output about public patterns in all orgs that have orgType: IBM.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display all public services in all orgs that have orgType: IBM.",
            "message": "Display all public services in all orgs that have orgType: IBM.",
            "translation": "Display all public services in all orgs that have orgType: IBM.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Only display org (IBM) and service names.",
            "message": "Only display org (IBM) and service names.",
            "translation": "Only display org (IBM) and service names.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display detailed output about public services in all orgs that have orgType: IBM.",
            "message": "Display detailed output about public services in all orgs that have orgType: IBM.",
            "translation": "Display detailed output about public services in all orgs that have orgType: IBM.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage deployment policies in the Horizon Exchange.",
            "message": "List and manage deployment policies in the Horizon Exchange.",
            "translation": "List and manage deployment policies in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace a deployment policy in the Horizon Exchange. Use 'hzn exchange deployment new' for an empty deployment policy template.",
            "message": "Add or replace a deployment policy in the Horizon Exchange. Use 'hzn exchange deployment new' for an empty deployment policy template.",
            "translation": "Add or replace a deployment policy in the Horizon Exchange. Use 'hzn exchange deployment new' for an empty deployment policy template.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon ID and password of the user.",
            "message": "The Horizon ID and password of the user.",
            "translation": "The Horizon ID and password of the user.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the deployment policy to add or overwrite.",
            "message": "The name of the deployment policy to add or overwrite.",
            "translation": "The name of the deployment policy to add or overwrite.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the metadata necessary to create/update the service policy in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the metadata necessary to create/update the service policy in the Horizon Exchange. Specify -f- to read from stdin.",
            "translation": "The path of a JSON file containing the metadata necessary to create/update the service policy in the Horizon Exchange. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Allow this deployment policy to be published even though it does not have any constraints.",
            "message": "Allow this deployment policy to be published even though it does not have any constraints.",
            "translation": "Allow this deployment policy to be published even though it does not have any constraints.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the deployment policies from the Horizon Exchange.",
            "message": "Display the deployment policies from the Horizon Exchange.",
            "translation": "Display the deployment policies from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display detailed output about the deployment policies.",
            "message": "Display detailed output about the deployment policies.",
            "translation": "Display detailed output about the deployment policies.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one deployment policy. Use \u003corg\u003e/\u003cpolicy\u003e to specify a public policy in another org, or \u003corg\u003e/ to list all of the public policies in another org.",
            "message": "List just this one deployment policy. Use \u003corg\u003e/\u003cpolicy\u003e to specify a public policy in another org, or \u003corg\u003e/ to list all of the public policies in another org.",
            "translation": "List just this one deployment policy. Use \u003corg\u003e/\u003cpolicy\u003e to specify a public policy in another org, or \u003corg\u003e/ to list all of the public policies in another org.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty deployment policy template that can be filled in.",
            "message": "Display an empty deployment policy template that can be filled in.",
            "translation": "Display an empty deployment policy template that can be filled in.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the deployment policy in the Horizon Exchange.",
            "message": "Remove the deployment policy in the Horizon Exchange.",
            "translation": "Remove the deployment policy in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Skip the 'are you sure?' prompt.",
            "message": "Skip the 'are you sure?' prompt.",
            "translation": "Skip the 'are you sure?' prompt.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the deployment policy to be removed.",
            "message": "The name of the deployment policy to be removed.",
            "translation": "The name of the deployment policy to be removed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update one attribute of an existing deployment policy in the Horizon Exchange. The supported attributes are the top level attributes in the policy definition as shown by the command 'hzn exchange deployment new'.",
            "message": "Update one attribute of an existing deployment policy in the Horizon Exchange. The supported attributes are the top level attributes in the policy definition as shown by the command 'hzn exchange deployment new'.",
            "translation": "Update one attribute of an existing deployment policy in the Horizon Exchange. The supported attributes are the top level attributes in the policy definition as shown by the command 'hzn exchange deployment new'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the policy to be updated in the Horizon Exchange.",
            "message": "The name of the policy to be updated in the Horizon Exchange.",
            "translation": "The name of the policy to be updated in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path to the json file containing the updated deployment policy attribute to be changed in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path to the json file containing the updated deployment policy attribute to be changed in the Horizon Exchange. Specify -f- to read from stdin.",
            "translation": "The path to the json file containing the updated deployment policy attribute to be changed in the Horizon Exchange. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage node management policies in the Horizon Exchange.",
            "message": "List and manage node management policies in the Horizon Exchange.",
            "translation": "List and manage node management policies in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the node management policies from the Horizon Exchange.",
            "message": "Display the node management policies from the Horizon Exchange.",
            "translation": "Display the node management policies from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one node management policy.",
            "message": "List just this one node management policy.",
            "translation": "List just this one node management policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon Exchange node ID and token to be used as credentials to query and modify the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
            "message": "The Horizon Exchange node ID and token to be used as credentials to query and modify the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
            "translation": "The Horizon Exchange node ID and token to be used as credentials to query and modify the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display detailed output about the node management policies.",
            "message": "Display detailed output about the node management policies.",
            "translation": "Display detailed output about the node management policies.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List all the nodes that apply for the given node management policy.",
            "message": "List all the nodes that apply for the given node management policy.",
            "translation": "List all the nodes that apply for the given node management policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace a node management policy in the Horizon Exchange. Use 'hzn exchange nmp new' for an empty node management policy template.",
            "message": "Add or replace a node management policy in the Horizon Exchange. Use 'hzn exchange nmp new' for an empty node management policy template.",
            "translation": "Add or replace a node management policy in the Horizon Exchange. Use 'hzn exchange nmp new' for an empty node management policy template.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List all the nodes that will be compatible with this node management policy. Use this flag with --dry-run to list nodes without publishing the policy to the Exchange.",
            "message": "List all the nodes that will be compatible with this node management policy. Use this flag with --dry-run to list nodes without publishing the policy to the Exchange.",
            "translation": "List all the nodes that will be compatible with this node management policy. Use this flag with --dry-run to list nodes without publishing the policy to the Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the node management policy to add or overwrite.",
            "message": "The name of the node management policy to add or overwrite.",
            "translation": "The name of the node management policy to add or overwrite.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the metadata necessary to create/update the node management policy in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the metadata necessary to create/update the node management policy in the Horizon Exchange. Specify -f- to read from stdin.",
            "translation": "The path of a JSON file containing the metadata necessary to create/update the node management policy in the Horizon Exchange. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Allow this node management policy to be published even though it does not have any constraints.",
            "message": "Allow this node management policy to be published even though it does not have any constraints.",
            "translation": "Allow this node management policy to be published even though it does not have any constraints.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty node management policy template that can be filled in.",
            "message": "Display an empty node management policy template that can be filled in.",
            "translation": "Display an empty node management policy template that can be filled in.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the node management policy in the Horizon Exchange.",
            "message": "Remove the node management policy in the Horizon Exchange.",
            "translation": "Remove the node management policy in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the node management policy to be removed.",
            "message": "The name of the node management policy to be removed.",
            "translation": "The name of the node management policy to be removed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the status of a given node management policy across all nodes in given org.",
            "message": "List the status of a given node management policy across all nodes in given org.",
            "translation": "List the status of a given node management policy across all nodes in given org.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the node management policy status to check.",
            "message": "The name of the node management policy status to check.",
            "translation": "The name of the node management policy status to check.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Filter output to include just this one node. Use with --long flag to display entire content of a single node management policy status object.",
            "message": "Filter output to include just this one node. Use with --long flag to display entire content of a single node management policy status object.",
            "translation": "Filter output to include just this one node. Use with --long flag to display entire content of a single node management policy status object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the entire contents of each node management policy status object.",
            "message": "Show the entire contents of each node management policy status object.",
            "translation": "Show the entire contents of each node management policy status object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Enable a node management policy in the Horizon Exchange.",
            "message": "Enable a node management policy in the Horizon Exchange.",
            "translation": "Enable a node management policy in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the node management policy to enable.",
            "message": "The name of the node management policy to enable.",
            "translation": "The name of the node management policy to enable.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The start time of the enabled node management policy. Start time should be RFC3339 timestamp or \"now\"",
            "message": "The start time of the enabled node management policy. Start time should be RFC3339 timestamp or \"now\"",
            "translation": "The start time of the enabled node management policy. Start time should be RFC3339 timestamp or \"now\"",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The start window of the enabled node management policy.",
            "message": "The start window of the enabled node management policy.",
            "translation": "The start window of the enabled node management policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Disable a node management policy in the Horizon Exchange.",
            "message": "Disable a node management policy in the Horizon Exchange.",
            "translation": "Disable a node management policy in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the node management policy to disable.",
            "message": "The name of the node management policy to disable.",
            "translation": "The name of the node management policy to disable.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage nodes in the Horizon Exchange",
            "message": "List and manage nodes in the Horizon Exchange",
            "translation": "List and manage nodes in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace the node policy in the Horizon Exchange.",
            "message": "Add or replace the node policy in the Horizon Exchange.",
            "translation": "Add or replace the node policy in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace policy for this node.",
            "message": "Add or replace policy for this node.",
            "translation": "Add or replace policy for this node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the metadata necessary to create/update the node policy in the Horizon exchange. Specify -f- to read from stdin. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "message": "The path of a JSON file containing the metadata necessary to create/update the node policy in the Horizon exchange. Specify -f- to read from stdin. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "translation": "The path of a JSON file containing the metadata necessary to create/update the node policy in the Horizon exchange. Specify -f- to read from stdin. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create the node resource in the Horizon Exchange.",
            "message": "Create the node resource in the Horizon Exchange.",
            "translation": "Create the node resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon Exchange node ID and token to be created. The node ID must be unique within the organization.",
            "message": "The Horizon Exchange node ID and token to be created. The node ID must be unique within the organization.",
            "translation": "The Horizon Exchange node ID and token to be created. The node ID must be unique within the organization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Your node architecture. If not specified, architecture will be left blank.",
            "message": "Your node architecture. If not specified, architecture will be left blank.",
            "translation": "Your node architecture. If not specified, architecture will be left blank.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of your node",
            "message": "The name of your node",
            "translation": "The name of your node",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of your node. The valid values are: device, cluster. If omitted, the default is device. However, the node type stays unchanged if the node already exists, only the node token will be updated.",
            "message": "The type of your node. The valid values are: device, cluster. If omitted, the default is device. However, the node type stays unchanged if the node already exists, only the node token will be updated.",
            "translation": "The type of your node. The valid values are: device, cluster. If omitted, the default is device. However, the node type stays unchanged if the node already exists, only the node token will be updated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node to be created.",
            "message": "The node to be created.",
            "translation": "The node to be created.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The token the new node should have.",
            "message": "The token the new node should have.",
            "translation": "The token the new node should have.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Check to see if the specified node and token are valid in the Horizon Exchange.",
            "message": "Check to see if the specified node and token are valid in the Horizon Exchange.",
            "translation": "Check to see if the specified node and token are valid in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange node ID and token to be checked. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. Mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
            "message": "The Horizon exchange node ID and token to be checked. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. Mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
            "translation": "The Horizon exchange node ID and token to be checked. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. Mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node id to be checked. Mutually exclusive with -n flag.",
            "message": "The node id to be checked. Mutually exclusive with -n flag.",
            "translation": "The node id to be checked. Mutually exclusive with -n flag.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The token for the node. Mutually exclusive with -n flag.",
            "message": "The token for the node. Mutually exclusive with -n flag.",
            "translation": "The token for the node. Mutually exclusive with -n flag.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the node resources from the Horizon Exchange.",
            "message": "Display the node resources from the Horizon Exchange.",
            "translation": "Display the node resources from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one node.",
            "message": "List just this one node.",
            "translation": "List just this one node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When listing all of the nodes, show the entire resource of each node, instead of just the name.",
            "message": "When listing all of the nodes, show the entire resource of each node, instead of just the name.",
            "translation": "When listing all of the nodes, show the entire resource of each node, instead of just the name.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the node errors currently surfaced to the Exchange.",
            "message": "List the node errors currently surfaced to the Exchange.",
            "translation": "List the node errors currently surfaced to the Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List surfaced errors for this node.",
            "message": "List surfaced errors for this node.",
            "translation": "List surfaced errors for this node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the full eventlog object of the errors currently surfaced to the Exchange.",
            "message": "Show the full eventlog object of the errors currently surfaced to the Exchange.",
            "translation": "Show the full eventlog object of the errors currently surfaced to the Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the node policy from the Horizon Exchange.",
            "message": "Display the node policy from the Horizon Exchange.",
            "translation": "Display the node policy from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List policy for this node.",
            "message": "List policy for this node.",
            "translation": "List policy for this node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage node management resources in the Horizon Exchange",
            "message": "List and manage node management resources in the Horizon Exchange",
            "translation": "List and manage node management resources in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the compatible node management policies for the node. Only policies that are enabled will be displayed unless the -a flag is specified.",
            "message": "List the compatible node management policies for the node. Only policies that are enabled will be displayed unless the -a flag is specified.",
            "translation": "List the compatible node management policies for the node. Only policies that are enabled will be displayed unless the -a flag is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List node management policies for this node",
            "message": "List node management policies for this node",
            "translation": "List node management policies for this node",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon Exchange node ID and token to be used as credentials to query and modfy the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
            "message": "The Horizon Exchange node ID and token to be used as credentials to query and modfy the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
            "translation": "The Horizon Exchange node ID and token to be used as credentials to query and modfy the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Include disabled NMP's.",
            "message": "Include disabled NMP's.",
            "translation": "Include disabled NMP's.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the node management policy statuses for this node.",
            "message": "List the node management policy statuses for this node.",
            "translation": "List the node management policy statuses for this node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List node management policy statuses for this node.",
            "message": "List node management policy statuses for this node.",
            "translation": "List node management policy statuses for this node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Filter output to include just this one node managment policy. Use with --long flag to display entire content of a single node management policy status object.",
            "message": "Filter output to include just this one node managment policy. Use with --long flag to display entire content of a single node management policy status object.",
            "translation": "Filter output to include just this one node managment policy. Use with --long flag to display entire content of a single node management policy status object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Re-evaluate the node management policy (nmp) for this node. Run this command to retry a nmp when the upgrade failed and the problem is fixed. Do not run this command when the node is still in the middle of an upgrade.",
            "message": "Re-evaluate the node management policy (nmp) for this node. Run this command to retry a nmp when the upgrade failed and the problem is fixed. Do not run this command when the node is still in the middle of an upgrade.",
            "translation": "Re-evaluate the node management policy (nmp) for this node. Run this command to retry a nmp when the upgrade failed and the problem is fixed. Do not run this command when the node is still in the middle of an upgrade.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Re-evaluate node management policy for this node.",
            "message": "Re-evaluate node management policy for this node.",
            "translation": "Re-evaluate node management policy for this node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the node managment policy to be re-evaluated. If omitted, all of the node management policies will be re-evaluated for this node.",
            "message": "The name of the node managment policy to be re-evaluated. If omitted, all of the node management policies will be re-evaluated for this node.",
            "translation": "The name of the node managment policy to be re-evaluated. If omitted, all of the node management policies will be re-evaluated for this node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the run-time status of the node.",
            "message": "List the run-time status of the node.",
            "translation": "List the run-time status of the node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List status for this node",
            "message": "List status for this node",
            "translation": "List status for this node",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a node resource from the Horizon Exchange. Do NOT do this when an edge node is registered with this node id.",
            "message": "Remove a node resource from the Horizon Exchange. Do NOT do this when an edge node is registered with this node id.",
            "translation": "Remove a node resource from the Horizon Exchange. Do NOT do this when an edge node is registered with this node id.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node to remove.",
            "message": "The node to remove.",
            "translation": "The node to remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the node policy in the Horizon Exchange.",
            "message": "Remove the node policy in the Horizon Exchange.",
            "translation": "Remove the node policy in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove policy for this node.",
            "message": "Remove policy for this node.",
            "translation": "Remove policy for this node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Change the token of a node resource in the Horizon Exchange.",
            "message": "Change the token of a node resource in the Horizon Exchange.",
            "translation": "Change the token of a node resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node to be changed.",
            "message": "The node to be changed.",
            "translation": "The node to be changed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The new token for the node.",
            "message": "The new token for the node.",
            "translation": "The new token for the node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update an attribute of the node in the Horizon Exchange.",
            "message": "Update an attribute of the node in the Horizon Exchange.",
            "translation": "Update an attribute of the node in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node to be updated.",
            "message": "The node to be updated.",
            "translation": "The node to be updated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path to a json file containing the changed attribute to be updated in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path to a json file containing the changed attribute to be updated in the Horizon Exchange. Specify -f- to read from stdin.",
            "translation": "The path to a json file containing the changed attribute to be updated in the Horizon Exchange. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(DEPRECATED) This command is deprecated. Please use 'hzn exchange node addpolicy' to update the node policy. This command is used to update either the node policy properties or the constraints, but not both.",
            "message": "(DEPRECATED) This command is deprecated. Please use 'hzn exchange node addpolicy' to update the node policy. This command is used to update either the node policy properties or the constraints, but not both.",
            "translation": "(DEPRECATED) This command is deprecated. Please use 'hzn exchange node addpolicy' to update the node policy. This command is used to update either the node policy properties or the constraints, but not both.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update the policy for this node.",
            "message": "Update the policy for this node.",
            "translation": "Update the policy for this node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the new constraints or properties (not both) for the node policy in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the new constraints or properties (not both) for the node policy in the Horizon Exchange. Specify -f- to read from stdin.",
            "translation": "The path of a JSON file containing the new constraints or properties (not both) for the node policy in the Horizon Exchange. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage organizations in the Horizon Exchange.",
            "message": "List and manage organizations in the Horizon Exchange.",
            "translation": "List and manage organizations in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create the organization resource in the Horizon Exchange.",
            "message": "Create the organization resource in the Horizon Exchange.",
            "translation": "Create the organization resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create this organization and assign it to an agbot.",
            "message": "Create this organization and assign it to an agbot.",
            "translation": "Create this organization and assign it to an agbot.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Label for new organization.",
            "message": "Label for new organization.",
            "translation": "Label for new organization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Description for new organization.",
            "message": "Description for new organization.",
            "translation": "Description for new organization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Tag for new organization. The format is mytag1=myvalue1. This flag can be repeated to specify multiple tags.",
            "message": "Tag for new organization. The format is mytag1=myvalue1. This flag can be repeated to specify multiple tags.",
            "translation": "Tag for new organization. The format is mytag1=myvalue1. This flag can be repeated to specify multiple tags.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The minimum number of seconds between agent heartbeats to the Exchange.",
            "message": "The minimum number of seconds between agent heartbeats to the Exchange.",
            "translation": "The minimum number of seconds between agent heartbeats to the Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The maximum number of seconds between agent heartbeats to the Exchange. During periods of inactivity, the agent will increase the interval between heartbeats by increments of --heartbeatadjust.",
            "message": "The maximum number of seconds between agent heartbeats to the Exchange. During periods of inactivity, the agent will increase the interval between heartbeats by increments of --heartbeatadjust.",
            "translation": "The maximum number of seconds between agent heartbeats to the Exchange. During periods of inactivity, the agent will increase the interval between heartbeats by increments of --heartbeatadjust.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The number of seconds to increment the agent's heartbeat interval.",
            "message": "The number of seconds to increment the agent's heartbeat interval.",
            "translation": "The number of seconds to increment the agent's heartbeat interval.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The maximum number of nodes this organization is allowed to have. The value cannot exceed the Exchange global limit. The default is 0 which means no organization limit.",
            "message": "The maximum number of nodes this organization is allowed to have. The value cannot exceed the Exchange global limit. The default is 0 which means no organization limit.",
            "translation": "The maximum number of nodes this organization is allowed to have. The value cannot exceed the Exchange global limit. The default is 0 which means no organization limit.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add the organization to this agbot so that it will be responsible for deploying services in this org. The agbot will deploy services to nodes in this org, using the patterns and deployment policies in this org. If omitted, the first agbot found in the exchange will become responsible for this org. The format is 'agbot_org/agbot_id'.",
            "message": "Add the organization to this agbot so that it will be responsible for deploying services in this org. The agbot will deploy services to nodes in this org, using the patterns and deployment policies in this org. If omitted, the first agbot found in the exchange will become responsible for this org. The format is 'agbot_org/agbot_id'.",
            "translation": "Add the organization to this agbot so that it will be responsible for deploying services in this org. The agbot will deploy services to nodes in this org, using the patterns and deployment policies in this org. If omitted, the first agbot found in the exchange will become responsible for this org. The format is 'agbot_org/agbot_id'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the organization resource from the Horizon Exchange. (Normally you can only display your own organiztion. If the org does not exist, you will get an invalid credentials error.)",
            "message": "Display the organization resource from the Horizon Exchange. (Normally you can only display your own organiztion. If the org does not exist, you will get an invalid credentials error.)",
            "translation": "Display the organization resource from the Horizon Exchange. (Normally you can only display your own organiztion. If the org does not exist, you will get an invalid credentials error.)",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List this one organization.",
            "message": "List this one organization.",
            "translation": "List this one organization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display detailed info of orgs",
            "message": "Display detailed info of orgs",
            "translation": "Display detailed info of orgs",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove an organization resource from the Horizon Exchange.",
            "message": "Remove an organization resource from the Horizon Exchange.",
            "translation": "Remove an organization resource from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove this organization.",
            "message": "Remove this organization.",
            "translation": "Remove this organization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to remove the deployment policy from. If omitted, the first agbot found in the exchange will be used. The format is 'agbot_org/agbot_id'.",
            "message": "The agbot to remove the deployment policy from. If omitted, the first agbot found in the exchange will be used. The format is 'agbot_org/agbot_id'.",
            "translation": "The agbot to remove the deployment policy from. If omitted, the first agbot found in the exchange will be used. The format is 'agbot_org/agbot_id'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update the organization resource in the Horizon Exchange.",
            "message": "Update the organization resource in the Horizon Exchange.",
            "translation": "Update the organization resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update this organization.",
            "message": "Update this organization.",
            "translation": "Update this organization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "New label for organization.",
            "message": "New label for organization.",
            "translation": "New label for organization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "New description for organization.",
            "message": "New description for organization.",
            "translation": "New description for organization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "New tag for organization. The format is mytag1=myvalue1. This flag can be repeated to specify multiple tags. Use '-t \"\"' once to remove all the tags.",
            "message": "New tag for organization. The format is mytag1=myvalue1. This flag can be repeated to specify multiple tags. Use '-t \"\"' once to remove all the tags.",
            "translation": "New tag for organization. The format is mytag1=myvalue1. This flag can be repeated to specify multiple tags. Use '-t \"\"' once to remove all the tags.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "New minimum number of seconds the between agent heartbeats to the Exchange. The default negative integer -1 means no change to this attribute.",
            "message": "New minimum number of seconds the between agent heartbeats to the Exchange. The default negative integer -1 means no change to this attribute.",
            "translation": "New minimum number of seconds the between agent heartbeats to the Exchange. The default negative integer -1 means no change to this attribute.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "New maximum number of seconds between agent heartbeats to the Exchange. The default negative integer -1 means no change to this attribute.",
            "message": "New maximum number of seconds between agent heartbeats to the Exchange. The default negative integer -1 means no change to this attribute.",
            "translation": "New maximum number of seconds between agent heartbeats to the Exchange. The default negative integer -1 means no change to this attribute.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "New value for the number of seconds to increment the agent's heartbeat interval. The default negative integer -1 means no change to this attribute.",
            "message": "New value for the number of seconds to increment the agent's heartbeat interval. The default negative integer -1 means no change to this attribute.",
            "translation": "New value for the number of seconds to increment the agent's heartbeat interval. The default negative integer -1 means no change to this attribute.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The new maximum number of nodes this organization is allowed to have. The value cannot exceed the Exchange global limit. The default negative integer -1 means no change.",
            "message": "The new maximum number of nodes this organization is allowed to have. The value cannot exceed the Exchange global limit. The default negative integer -1 means no change.",
            "translation": "The new maximum number of nodes this organization is allowed to have. The value cannot exceed the Exchange global limit. The default negative integer -1 means no change.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage patterns in the Horizon Exchange",
            "message": "List and manage patterns in the Horizon Exchange",
            "translation": "List and manage patterns in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the pattern resources from the Horizon Exchange.",
            "message": "Display the pattern resources from the Horizon Exchange.",
            "translation": "Display the pattern resources from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one pattern. Use \u003corg\u003e/\u003cpat\u003e to specify a public pattern in another org, or \u003corg\u003e/ to list all of the public patterns in another org.",
            "message": "List just this one pattern. Use \u003corg\u003e/\u003cpat\u003e to specify a public pattern in another org, or \u003corg\u003e/ to list all of the public patterns in another org.",
            "translation": "List just this one pattern. Use \u003corg\u003e/\u003cpat\u003e to specify a public pattern in another org, or \u003corg\u003e/ to list all of the public patterns in another org.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When listing all of the patterns, show the entire resource of each pattern, instead of just the name.",
            "message": "When listing all of the patterns, show the entire resource of each pattern, instead of just the name.",
            "translation": "When listing all of the patterns, show the entire resource of each pattern, instead of just the name.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the signing public keys/certs for this pattern resource in the Horizon Exchange.",
            "message": "List the signing public keys/certs for this pattern resource in the Horizon Exchange.",
            "translation": "List the signing public keys/certs for this pattern resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing pattern to list the keys for.",
            "message": "The existing pattern to list the keys for.",
            "translation": "The existing pattern to list the keys for.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing key name to see the contents of.",
            "message": "The existing key name to see the contents of.",
            "translation": "The existing key name to see the contents of.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Sign and create/update the pattern resource in the Horizon Exchange.",
            "message": "Sign and create/update the pattern resource in the Horizon Exchange.",
            "translation": "Sign and create/update the pattern resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the metadata necessary to create/update the pattern in the Horizon exchange. See {Sampledir}/pattern.json. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the metadata necessary to create/update the pattern in the Horizon exchange. See {Sampledir}/pattern.json. Specify -f- to read from stdin.",
            "translation": "The path of a JSON file containing the metadata necessary to create/update the pattern in the Horizon exchange. See {Sampledir}/pattern.json. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Sampledir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sample_dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The path of a private key file to be used to sign the pattern. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If HZN_PRIVATE_KEY_FILE not specified, ~/.hzn/keys/service.private.key will be used. If none are specified, a random key pair will be generated and the public key will be stored with the pattern.",
            "message": "The path of a private key file to be used to sign the pattern. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If HZN_PRIVATE_KEY_FILE not specified, ~/.hzn/keys/service.private.key will be used. If none are specified, a random key pair will be generated and the public key will be stored with the pattern.",
            "translation": "The path of a private key file to be used to sign the pattern. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If HZN_PRIVATE_KEY_FILE not specified, ~/.hzn/keys/service.private.key will be used. If none are specified, a random key pair will be generated and the public key will be stored with the pattern.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(DEPRECATED) The path of public key file (that corresponds to the private key) that should be stored with the pattern, to be used by the Horizon Agent to verify the signature. If this flag is not specified, the public key will be calculated from the private key.",
            "message": "(DEPRECATED) The path of public key file (that corresponds to the private key) that should be stored with the pattern, to be used by the Horizon Agent to verify the signature. If this flag is not specified, the public key will be calculated from the private key.",
            "translation": "(DEPRECATED) The path of public key file (that corresponds to the private key) that should be stored with the pattern, to be used by the Horizon Agent to verify the signature. If this flag is not specified, the public key will be calculated from the private key.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name to use for this pattern in the Horizon exchange. If not specified, will default to the base name of the file path specified in -f.",
            "message": "The name to use for this pattern in the Horizon exchange. If not specified, will default to the base name of the file path specified in -f.",
            "translation": "The name to use for this pattern in the Horizon exchange. If not specified, will default to the base name of the file path specified in -f.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a pattern resource from the Horizon Exchange.",
            "message": "Remove a pattern resource from the Horizon Exchange.",
            "translation": "Remove a pattern resource from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The pattern to remove.",
            "message": "The pattern to remove.",
            "translation": "The pattern to remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a signing public key/cert for this pattern resource in the Horizon Exchange.",
            "message": "Remove a signing public key/cert for this pattern resource in the Horizon Exchange.",
            "translation": "Remove a signing public key/cert for this pattern resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing pattern to remove the key from.",
            "message": "The existing pattern to remove the key from.",
            "translation": "The existing pattern to remove the key from.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing key name to remove.",
            "message": "The existing key name to remove.",
            "translation": "The existing key name to remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update an attribute of the pattern in the Horizon Exchange.",
            "message": "Update an attribute of the pattern in the Horizon Exchange.",
            "translation": "Update an attribute of the pattern in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the pattern in the Horizon Exchange to publish.",
            "message": "The name of the pattern in the Horizon Exchange to publish.",
            "translation": "The name of the pattern in the Horizon Exchange to publish.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path to a json file containing the updated attribute of the pattern to be put in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path to a json file containing the updated attribute of the pattern to be put in the Horizon Exchange. Specify -f- to read from stdin.",
            "translation": "The path to a json file containing the updated attribute of the pattern to be put in the Horizon Exchange. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Verify the signatures of a pattern resource in the Horizon Exchange.",
            "message": "Verify the signatures of a pattern resource in the Horizon Exchange.",
            "translation": "Verify the signatures of a pattern resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The pattern to verify.",
            "message": "The pattern to verify.",
            "translation": "The pattern to verify.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a pem public key file to be used to verify the pattern. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "message": "The path of a pem public key file to be used to verify the pattern. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "translation": "The path of a pem public key file to be used to verify the pattern. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage services in the Horizon Exchange",
            "message": "List and manage services in the Horizon Exchange",
            "translation": "List and manage services in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace the service policy in the Horizon Exchange.",
            "message": "Add or replace the service policy in the Horizon Exchange.",
            "translation": "Add or replace the service policy in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon Exchange ID and password of the user",
            "message": "The Horizon Exchange ID and password of the user",
            "translation": "The Horizon Exchange ID and password of the user",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace policy for this service.",
            "message": "Add or replace policy for this service.",
            "translation": "Add or replace policy for this service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the service resources from the Horizon Exchange.",
            "message": "Display the service resources from the Horizon Exchange.",
            "translation": "Display the service resources from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one service. Use \u003corg\u003e/\u003csvc\u003e to specify a public service in another org, or \u003corg\u003e/ to list all of the public services in another org.",
            "message": "List just this one service. Use \u003corg\u003e/\u003csvc\u003e to specify a public service in another org, or \u003corg\u003e/ to list all of the public services in another org.",
            "translation": "List just this one service. Use \u003corg\u003e/\u003csvc\u003e to specify a public service in another org, or \u003corg\u003e/ to list all of the public services in another org.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When listing all of the services, show the entire service definition, instead of just the name. When listing a specific service, show more details.",
            "message": "When listing all of the services, show the entire service definition, instead of just the name. When listing a specific service, show more details.",
            "translation": "When listing all of the services, show the entire service definition, instead of just the name. When listing a specific service, show more details.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the file where the cluster deployment operator yaml archive will be saved. This flag is only used when listing a specific service. This flag is ignored when the service does not have a clusterDeployment attribute.",
            "message": "The name of the file where the cluster deployment operator yaml archive will be saved. This flag is only used when listing a specific service. This flag is ignored when the service does not have a clusterDeployment attribute.",
            "translation": "The name of the file where the cluster deployment operator yaml archive will be saved. This flag is only used when listing a specific service. This flag is ignored when the service does not have a clusterDeployment attribute.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Skip the 'do you want to overwrite?' prompt when -f is specified and the file exists.",
            "message": "Skip the 'do you want to overwrite?' prompt when -f is specified and the file exists.",
            "translation": "Skip the 'do you want to overwrite?' prompt when -f is specified and the file exists.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the docker auth tokens for this service resource in the Horizon Exchange.",
            "message": "List the docker auth tokens for this service resource in the Horizon Exchange.",
            "translation": "List the docker auth tokens for this service resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing service to list the docker auths for.",
            "message": "The existing service to list the docker auths for.",
            "translation": "The existing service to list the docker auths for.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing docker auth id to see the contents of.",
            "message": "The existing docker auth id to see the contents of.",
            "translation": "The existing docker auth id to see the contents of.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the signing public keys/certs for this service resource in the Horizon Exchange.",
            "message": "List the signing public keys/certs for this service resource in the Horizon Exchange.",
            "translation": "List the signing public keys/certs for this service resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing service to list the keys for.",
            "message": "The existing service to list the keys for.",
            "translation": "The existing service to list the keys for.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the nodes that the service is running on.",
            "message": "Display the nodes that the service is running on.",
            "translation": "Display the nodes that the service is running on.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service id. Use \u003corg\u003e/\u003csvc\u003e to specify a service from a different org.",
            "message": "The service id. Use \u003corg\u003e/\u003csvc\u003e to specify a service from a different org.",
            "translation": "The service id. Use \u003corg\u003e/\u003csvc\u003e to specify a service from a different org.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node's organization. If omitted, it will be same as the org specified by -o or HZN_ORG_ID.",
            "message": "The node's organization. If omitted, it will be same as the org specified by -o or HZN_ORG_ID.",
            "translation": "The node's organization. If omitted, it will be same as the org specified by -o or HZN_ORG_ID.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the service policy from the Horizon Exchange.",
            "message": "Display the service policy from the Horizon Exchange.",
            "translation": "Display the service policy from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon Exchange id and password of the user",
            "message": "The Horizon Exchange id and password of the user",
            "translation": "The Horizon Exchange id and password of the user",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List policy for this service.",
            "message": "List policy for this service.",
            "translation": "List policy for this service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty service policy template that can be filled in.",
            "message": "Display an empty service policy template that can be filled in.",
            "translation": "Display an empty service policy template that can be filled in.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Sign and create/update the service resource in the Horizon Exchange.",
            "message": "Sign and create/update the service resource in the Horizon Exchange.",
            "translation": "Sign and create/update the service resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the metadata necessary to create/update the service in the Horizon exchange. See {Sampledir}/service.json and {Sampledir_1}/service_cluster.json. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the metadata necessary to create/update the service in the Horizon exchange. See {Sampledir}/service.json and {Sampledir_1}/service_cluster.json. Specify -f- to read from stdin.",
            "translation": "The path of a JSON file containing the metadata necessary to create/update the service in the Horizon exchange. See {Sampledir}/service.json and {Sampledir_1}/service_cluster.json. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Sampledir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sample_dir"
                },
                {
                    "id": "Sampledir_1",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sample_dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The path of a private key file to be used to sign the service. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If HZN_PRIVATE_KEY_FILE not specified, ~/.hzn/keys/service.private.key will be used. If none are specified, a random key pair will be generated and the public key will be stored with the service.",
            "message": "The path of a private key file to be used to sign the service. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If HZN_PRIVATE_KEY_FILE not specified, ~/.hzn/keys/service.private.key will be used. If none are specified, a random key pair will be generated and the public key will be stored with the service.",
            "translation": "The path of a private key file to be used to sign the service. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If HZN_PRIVATE_KEY_FILE not specified, ~/.hzn/keys/service.private.key will be used. If none are specified, a random key pair will be generated and the public key will be stored with the service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(DEPRECATED) The path of public key file (that corresponds to the private key) that should be stored with the service, to be used by the Horizon Agent to verify the signature. If this flag is not specified, the public key will be calculated from the private key.",
            "message": "(DEPRECATED) The path of public key file (that corresponds to the private key) that should be stored with the service, to be used by the Horizon Agent to verify the signature. If this flag is not specified, the public key will be calculated from the private key.",
            "translation": "(DEPRECATED) The path of public key file (that corresponds to the private key) that should be stored with the service, to be used by the Horizon Agent to verify the signature. If this flag is not specified, the public key will be calculated from the private key.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The image paths in the deployment field have regular tags and should not be changed to sha256 digest values. The image will not get automatically uploaded to the repository. This should only be used during development when testing new versions often.",
            "message": "The image paths in the deployment field have regular tags and should not be changed to sha256 digest values. The image will not get automatically uploaded to the repository. This should only be used during development when testing new versions often.",
            "translation": "The image paths in the deployment field have regular tags and should not be changed to sha256 digest values. The image will not get automatically uploaded to the repository. This should only be used during development when testing new versions often.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Use the image from the image repository. It will pull the image from the image repository and overwrite the local image if exists. This flag is mutually exclusive with -I.",
            "message": "Use the image from the image repository. It will pull the image from the image repository and overwrite the local image if exists. This flag is mutually exclusive with -I.",
            "translation": "Use the image from the image repository. It will pull the image from the image repository and overwrite the local image if exists. This flag is mutually exclusive with -I.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Docker registry domain and auth that should be stored with the service, to enable the Horizon edge node to access the service's docker images. This flag can be repeated, and each flag should be in the format: registry:user:token",
            "message": "Docker registry domain and auth that should be stored with the service, to enable the Horizon edge node to access the service's docker images. This flag can be repeated, and each flag should be in the format: registry:user:token",
            "translation": "Docker registry domain and auth that should be stored with the service, to enable the Horizon edge node to access the service's docker images. This flag can be repeated, and each flag should be in the format: registry:user:token",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Overwrite the existing version if the service exists in the Exchange. It will skip the 'do you want to overwrite' prompt.",
            "message": "Overwrite the existing version if the service exists in the Exchange. It will skip the 'do you want to overwrite' prompt.",
            "translation": "Overwrite the existing version if the service exists in the Exchange. It will skip the 'do you want to overwrite' prompt.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of the service policy JSON file to be used for the service to be published. This flag is optional",
            "message": "The path of the service policy JSON file to be used for the service to be published. This flag is optional",
            "translation": "The path of the service policy JSON file to be used for the service to be published. This flag is optional",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Whether the service is visible to users outside of the organization. This flag is optional. If left unset, the service will default to whatever the metadata has set. If the service definition has also not set the public field, then the service will by default not be public.",
            "message": "Whether the service is visible to users outside of the organization. This flag is optional. If left unset, the service will default to whatever the metadata has set. If the service definition has also not set the public field, then the service will by default not be public.",
            "translation": "Whether the service is visible to users outside of the organization. This flag is optional. If left unset, the service will default to whatever the metadata has set. If the service definition has also not set the public field, then the service will by default not be public.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a service resource from the Horizon Exchange.",
            "message": "Remove a service resource from the Horizon Exchange.",
            "translation": "Remove a service resource from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service to remove.",
            "message": "The service to remove.",
            "translation": "The service to remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a docker auth token for this service resource in the Horizon Exchange.",
            "message": "Remove a docker auth token for this service resource in the Horizon Exchange.",
            "translation": "Remove a docker auth token for this service resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing service to remove the docker auth from.",
            "message": "The existing service to remove the docker auth from.",
            "translation": "The existing service to remove the docker auth from.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing docker auth id to remove.",
            "message": "The existing docker auth id to remove.",
            "translation": "The existing docker auth id to remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a signing public key/cert for this service resource in the Horizon Exchange.",
            "message": "Remove a signing public key/cert for this service resource in the Horizon Exchange.",
            "translation": "Remove a signing public key/cert for this service resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing service to remove the key from.",
            "message": "The existing service to remove the key from.",
            "translation": "The existing service to remove the key from.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the service policy in the Horizon Exchange.",
            "message": "Remove the service policy in the Horizon Exchange.",
            "translation": "Remove the service policy in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove policy for this service.",
            "message": "Remove policy for this service.",
            "translation": "Remove policy for this service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Verify the signatures of a service resource in the Horizon Exchange.",
            "message": "Verify the signatures of a service resource in the Horizon Exchange.",
            "translation": "Verify the signatures of a service resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service to verify.",
            "message": "The service to verify.",
            "translation": "The service to verify.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a pem public key file to be used to verify the service. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "message": "The path of a pem public key file to be used to verify the service. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "translation": "The path of a pem public key file to be used to verify the service. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage high availability (HA) groups in the Horizon Exchange",
            "message": "List and manage high availability (HA) groups in the Horizon Exchange",
            "translation": "List and manage high availability (HA) groups in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the HA group resources from the Horizon Exchange.",
            "message": "Display the HA group resources from the Horizon Exchange.",
            "translation": "Display the HA group resources from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one HA group.",
            "message": "List just this one HA group.",
            "translation": "List just this one HA group.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When listing all of the HA groups, show the entire resource of each group, instead of just the name.",
            "message": "When listing all of the HA groups, show the entire resource of each group, instead of just the name.",
            "translation": "When listing all of the HA groups, show the entire resource of each group, instead of just the name.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty HA group template that can be filled in.",
            "message": "Display an empty HA group template that can be filled in.",
            "translation": "Display an empty HA group template that can be filled in.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace an HA group in the Horizon Exchange. Use 'hzn exchange hagroup new' for an empty HA group template.",
            "message": "Add or replace an HA group in the Horizon Exchange. Use 'hzn exchange hagroup new' for an empty HA group template.",
            "translation": "Add or replace an HA group in the Horizon Exchange. Use 'hzn exchange hagroup new' for an empty HA group template.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the HA group to add or overwrite. If omitted, the name attribute in the input file will be used.",
            "message": "The name of the HA group to add or overwrite. If omitted, the name attribute in the input file will be used.",
            "translation": "The name of the HA group to add or overwrite. If omitted, the name attribute in the input file will be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the metadata necessary to create/update the HA group in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the metadata necessary to create/update the HA group in the Horizon Exchange. Specify -f- to read from stdin.",
            "translation": "The path of a JSON file containing the metadata necessary to create/update the HA group in the Horizon Exchange. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the HA group in the Horizon Exchange.",
            "message": "Remove the HA group in the Horizon Exchange.",
            "translation": "Remove the HA group in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the HA group to be removed.",
            "message": "The name of the HA group to be removed.",
            "translation": "The name of the HA group to be removed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Manage HA group members in the Horizon Exchange",
            "message": "Manage HA group members in the Horizon Exchange",
            "translation": "Manage HA group members in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add nodes to the HA group in the Horizon Exchange.",
            "message": "Add nodes to the HA group in the Horizon Exchange.",
            "translation": "Add nodes to the HA group in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the HA group.",
            "message": "The name of the HA group.",
            "translation": "The name of the HA group.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node to be added to the HA group. This flag can be repeated to specify different nodes.",
            "message": "Node to be added to the HA group. This flag can be repeated to specify different nodes.",
            "translation": "Node to be added to the HA group. This flag can be repeated to specify different nodes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove nodes from the HA group in the Horizon Exchange.",
            "message": "Remove nodes from the HA group in the Horizon Exchange.",
            "translation": "Remove nodes from the HA group in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node to be removed from the HA group. This flag can be repeated to specify different nodes.",
            "message": "Node to be removed from the HA group. This flag can be repeated to specify different nodes.",
            "translation": "Node to be removed from the HA group. This flag can be repeated to specify different nodes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the status of the Horizon Exchange.",
            "message": "Display the status of the Horizon Exchange.",
            "translation": "Display the status of the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage users in the Horizon Exchange.",
            "message": "List and manage users in the Horizon Exchange.",
            "translation": "List and manage users in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create the user resource in the Horizon Exchange.",
            "message": "Create the user resource in the Horizon Exchange.",
            "translation": "Create the user resource in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Your username for this user account when creating it in the Horizon exchange.",
            "message": "Your username for this user account when creating it in the Horizon exchange.",
            "translation": "Your username for this user account when creating it in the Horizon exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Your password for this user account when creating it in the Horizon exchange.",
            "message": "Your password for this user account when creating it in the Horizon exchange.",
            "translation": "Your password for this user account when creating it in the Horizon exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Your email address that should be associated with this user account when creating it in the Horizon exchange. This argument is optional",
            "message": "Your email address that should be associated with this user account when creating it in the Horizon exchange. This argument is optional",
            "translation": "Your email address that should be associated with this user account when creating it in the Horizon exchange. This argument is optional",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "This user should be an administrator, capable of managing all resources in this org of the Exchange.",
            "message": "This user should be an administrator, capable of managing all resources in this org of the Exchange.",
            "translation": "This user should be an administrator, capable of managing all resources in this org of the Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "This user should be a hub administrator, capable of managing orgs in this administration hub.",
            "message": "This user should be a hub administrator, capable of managing orgs in this administration hub.",
            "translation": "This user should be a hub administrator, capable of managing orgs in this administration hub.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the user resource from the Horizon Exchange. (Normally you can only display your own user. If the user does not exist, you will get an invalid credentials error.)",
            "message": "Display the user resource from the Horizon Exchange. (Normally you can only display your own user. If the user does not exist, you will get an invalid credentials error.)",
            "translation": "Display the user resource from the Horizon Exchange. (Normally you can only display your own user. If the user does not exist, you will get an invalid credentials error.)",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List this one user. Default is your own user. Only admin users can list other users.",
            "message": "List this one user. Default is your own user. Only admin users can list other users.",
            "translation": "List this one user. Default is your own user. Only admin users can list other users.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List all users in the org. Will only do this if you are a user with admin privilege.",
            "message": "List all users in the org. Will only do this if you are a user with admin privilege.",
            "translation": "List all users in the org. Will only do this if you are a user with admin privilege.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When listing all of the users, show only the usernames, instead of each entire resource.",
            "message": "When listing all of the users, show only the usernames, instead of each entire resource.",
            "translation": "When listing all of the users, show only the usernames, instead of each entire resource.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a user resource from the Horizon Exchange. Warning: this will cause all exchange resources owned by this user to also be deleted (nodes, services, patterns, etc).",
            "message": "Remove a user resource from the Horizon Exchange. Warning: this will cause all exchange resources owned by this user to also be deleted (nodes, services, patterns, etc).",
            "translation": "Remove a user resource from the Horizon Exchange. Warning: this will cause all exchange resources owned by this user to also be deleted (nodes, services, patterns, etc).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The user to remove.",
            "message": "The user to remove.",
            "translation": "The user to remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Change the existing user to be an admin user (like root in his/her org) or to no longer be an admin user. Can only be run by exchange root or another admin user.",
            "message": "Change the existing user to be an admin user (like root in his/her org) or to no longer be an admin user. Can only be run by exchange root or another admin user.",
            "translation": "Change the existing user to be an admin user (like root in his/her org) or to no longer be an admin user. Can only be run by exchange root or another admin user.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The user to be modified.",
            "message": "The user to be modified.",
            "translation": "The user to be modified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "True if they should be an admin user, otherwise false.",
            "message": "True if they should be an admin user, otherwise false.",
            "translation": "True if they should be an admin user, otherwise false.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the version of the Horizon Exchange.",
            "message": "Display the version of the Horizon Exchange.",
            "translation": "Display the version of the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage keys for signing and verifying services.",
            "message": "List and manage keys for signing and verifying services.",
            "translation": "List and manage keys for signing and verifying services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Generate a signing key pair.",
            "message": "Generate a signing key pair.",
            "translation": "Generate a signing key pair.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "x509 certificate Organization (O) field (preferably a company name or other organization's name).",
            "message": "x509 certificate Organization (O) field (preferably a company name or other organization's name).",
            "translation": "x509 certificate Organization (O) field (preferably a company name or other organization's name).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "x509 certificate Common Name (CN) field (preferably an email address issued by x509org).",
            "message": "x509 certificate Common Name (CN) field (preferably an email address issued by x509org).",
            "translation": "x509 certificate Common Name (CN) field (preferably an email address issued by x509org).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The directory to put the key pair files in. Mutually exclusive with -k and -K. The file names will be randomly generated.",
            "message": "The directory to put the key pair files in. Mutually exclusive with -k and -K. The file names will be randomly generated.",
            "translation": "The directory to put the key pair files in. Mutually exclusive with -k and -K. The file names will be randomly generated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The full path of the private key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
            "message": "The full path of the private key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
            "translation": "The full path of the private key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The full path of the public key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "message": "The full path of the public key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "translation": "The full path of the public key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Overwrite the existing files. It will skip the 'do you want to overwrite' prompt.",
            "message": "Overwrite the existing files. It will skip the 'do you want to overwrite' prompt.",
            "translation": "Overwrite the existing files. It will skip the 'do you want to overwrite' prompt.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The length of the key to create.",
            "message": "The length of the key to create.",
            "translation": "The length of the key to create.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "x509 certificate validity (Validity \u003e Not After) expressed in days from the day of generation.",
            "message": "x509 certificate validity (Validity \u003e Not After) expressed in days from the day of generation.",
            "translation": "x509 certificate validity (Validity \u003e Not After) expressed in days from the day of generation.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Automatically import the created public key into the local Horizon agent.",
            "message": "Automatically import the created public key into the local Horizon agent.",
            "translation": "Automatically import the created public key into the local Horizon agent.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Imports a signing public key into the Horizon agent.",
            "message": "Imports a signing public key into the Horizon agent.",
            "translation": "Imports a signing public key into the Horizon agent.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a pem public key file to be imported. The base name in the path is also used as the key name in the Horizon agent. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "message": "The path of a pem public key file to be imported. The base name in the path is also used as the key name in the Horizon agent. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "translation": "The path of a pem public key file to be imported. The base name in the path is also used as the key name in the Horizon agent. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the signing keys that have been imported into this Horizon agent.",
            "message": "List the signing keys that have been imported into this Horizon agent.",
            "translation": "List the signing keys that have been imported into this Horizon agent.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of a specific key to show.",
            "message": "The name of a specific key to show.",
            "translation": "The name of a specific key to show.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the names of all signing keys, even the older public keys not wrapped in a certificate.",
            "message": "List the names of all signing keys, even the older public keys not wrapped in a certificate.",
            "translation": "List the names of all signing keys, even the older public keys not wrapped in a certificate.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the specified signing key from this Horizon agent.",
            "message": "Remove the specified signing key from this Horizon agent.",
            "translation": "Remove the specified signing key from this Horizon agent.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of a specific key to remove.",
            "message": "The name of a specific key to remove.",
            "translation": "The name of a specific key to remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the metering (payment) information for the active or archived agreements.",
            "message": "List or manage the metering (payment) information for the active or archived agreements.",
            "translation": "List or manage the metering (payment) information for the active or archived agreements.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the metering (payment) information for the active or archived agreements.",
            "message": "List the metering (payment) information for the active or archived agreements.",
            "translation": "List the metering (payment) information for the active or archived agreements.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List archived agreement metering information instead of metering for the active agreements.",
            "message": "List archived agreement metering information instead of metering for the active agreements.",
            "translation": "List archived agreement metering information instead of metering for the active agreements.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage Horizon Model Management Service resources.",
            "message": "List and manage Horizon Model Management Service resources.",
            "translation": "List and manage Horizon Model Management Service resources.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon organization ID. If not specified, HZN_ORG_ID will be used as a default.",
            "message": "The Horizon organization ID. If not specified, HZN_ORG_ID will be used as a default.",
            "translation": "The Horizon organization ID. If not specified, HZN_ORG_ID will be used as a default.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon user credentials to query and create Model Management Service resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
            "message": "Horizon user credentials to query and create Model Management Service resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
            "translation": "Horizon user credentials to query and create Model Management Service resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage objects in the Horizon Model Management Service.",
            "message": "List and manage objects in the Horizon Model Management Service.",
            "translation": "List and manage objects in the Horizon Model Management Service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Delete an object in the Horizon Model Management Service, making it unavailable for services deployed on nodes.",
            "message": "Delete an object in the Horizon Model Management Service, making it unavailable for services deployed on nodes.",
            "translation": "Delete an object in the Horizon Model Management Service, making it unavailable for services deployed on nodes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of the object to delete.",
            "message": "The type of the object to delete.",
            "translation": "The type of the object to delete.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The id of the object to delete.",
            "message": "The id of the object to delete.",
            "translation": "The id of the object to delete.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Download data of the given object in the Horizon Model Management Service.",
            "message": "Download data of the given object in the Horizon Model Management Service.",
            "translation": "Download data of the given object in the Horizon Model Management Service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of the object to download data. This flag must be used with -i.",
            "message": "The type of the object to download data. This flag must be used with -i.",
            "translation": "The type of the object to download data. This flag must be used with -i.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The id of the object to download data. This flag must be used with -t.",
            "message": "The id of the object to download data. This flag must be used with -t.",
            "translation": "The id of the object to download data. This flag must be used with -t.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The file that the data of downloaded object is written to. This flag must be used with -f. If omit, will use default file name in format of objectType_objectID and save in current directory",
            "message": "The file that the data of downloaded object is written to. This flag must be used with -f. If omit, will use default file name in format of objectType_objectID and save in current directory",
            "translation": "The file that the data of downloaded object is written to. This flag must be used with -f. If omit, will use default file name in format of objectType_objectID and save in current directory",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Overwrite the existing file if it exists in the file system.",
            "message": "Overwrite the existing file if it exists in the file system.",
            "translation": "Overwrite the existing file if it exists in the file system.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The download command will not perform a data integrity check on the downloaded object data",
            "message": "The download command will not perform a data integrity check on the downloaded object data",
            "translation": "The download command will not perform a data integrity check on the downloaded object data",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List objects in the Horizon Model Management Service.",
            "message": "List objects in the Horizon Model Management Service.",
            "translation": "List objects in the Horizon Model Management Service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of the object to list.",
            "message": "The type of the object to list.",
            "translation": "The type of the object to list.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The id of the object to list. This flag is optional. Omit this flag to list all objects of a given object type.",
            "message": "The id of the object to list. This flag is optional. Omit this flag to list all objects of a given object type.",
            "translation": "The id of the object to list. This flag is optional. Omit this flag to list all objects of a given object type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Specify true to show only objects using policy. Specify false to show only objects not using policy. If this flag is omitted, both kinds of objects are shown.",
            "message": "Specify true to show only objects using policy. Specify false to show only objects not using policy. If this flag is omitted, both kinds of objects are shown.",
            "translation": "Specify true to show only objects using policy. Specify false to show only objects not using policy. If this flag is omitted, both kinds of objects are shown.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List mms objects using policy that are targetted for the given service. Service specified in the format service-org/service-name.",
            "message": "List mms objects using policy that are targetted for the given service. Service specified in the format service-org/service-name.",
            "translation": "List mms objects using policy that are targetted for the given service. Service specified in the format service-org/service-name.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List mms objects using policy that reference the given property name.",
            "message": "List mms objects using policy that reference the given property name.",
            "translation": "List mms objects using policy that reference the given property name.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List mms objects using policy that has been updated since the given time. The time value is spefified in RFC3339 format: yyyy-MM-ddTHH:mm:ssZ. The time of day may be omitted.",
            "message": "List mms objects using policy that has been updated since the given time. The time value is spefified in RFC3339 format: yyyy-MM-ddTHH:mm:ssZ. The time of day may be omitted.",
            "translation": "List mms objects using policy that has been updated since the given time. The time value is spefified in RFC3339 format: yyyy-MM-ddTHH:mm:ssZ. The time of day may be omitted.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List mms objects with given destination type",
            "message": "List mms objects with given destination type",
            "translation": "List mms objects with given destination type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List mms objects with given destination id. Must specify --destinationType to use this flag",
            "message": "List mms objects with given destination id. Must specify --destinationType to use this flag",
            "translation": "List mms objects with given destination id. Must specify --destinationType to use this flag",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Specify true to show objects that have data. Specify false to show objects that have no data. If this flag is omitted, both kinds of objects are shown.",
            "message": "Specify true to show objects that have data. Specify false to show objects that have no data. If this flag is omitted, both kinds of objects are shown.",
            "translation": "Specify true to show objects that have data. Specify false to show objects that have no data. If this flag is omitted, both kinds of objects are shown.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List mms objects that expired before the given time. The time value is spefified in RFC3339 format: yyyy-MM-ddTHH:mm:ssZ. Specify now to show objects that are currently expired.",
            "message": "List mms objects that expired before the given time. The time value is spefified in RFC3339 format: yyyy-MM-ddTHH:mm:ssZ. Specify now to show objects that are currently expired.",
            "translation": "List mms objects that expired before the given time. The time value is spefified in RFC3339 format: yyyy-MM-ddTHH:mm:ssZ. Specify now to show objects that are currently expired.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Specify true to show objects that are marked deleted. Specify false to show objects that are not marked deleted. If this flag is omitted, both kinds of objects are shown. Object will be marked deleted if object is deleted in CSS but it doesn't receive notifications from all the destinations",
            "message": "Specify true to show objects that are marked deleted. Specify false to show objects that are not marked deleted. If this flag is omitted, both kinds of objects are shown. Object will be marked deleted if object is deleted in CSS but it doesn't receive notifications from all the destinations",
            "translation": "Specify true to show objects that are marked deleted. Specify false to show objects that are not marked deleted. If this flag is omitted, both kinds of objects are shown. Object will be marked deleted if object is deleted in CSS but it doesn't receive notifications from all the destinations",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show detailed object metadata information",
            "message": "Show detailed object metadata information",
            "translation": "Show detailed object metadata information",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Provides additional detail about the deployment of the object on edge nodes.",
            "message": "Provides additional detail about the deployment of the object on edge nodes.",
            "translation": "Provides additional detail about the deployment of the object on edge nodes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty object metadata template that can be filled in and passed as the -m option on the 'hzn mms object publish' command.",
            "message": "Display an empty object metadata template that can be filled in and passed as the -m option on the 'hzn mms object publish' command.",
            "translation": "Display an empty object metadata template that can be filled in and passed as the -m option on the 'hzn mms object publish' command.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Publish an object in the Horizon Model Management Service, making it available for services deployed on nodes.",
            "message": "Publish an object in the Horizon Model Management Service, making it available for services deployed on nodes.",
            "translation": "Publish an object in the Horizon Model Management Service, making it available for services deployed on nodes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of the object to publish. This flag must be used with -i. It is mutually exclusive with -m",
            "message": "The type of the object to publish. This flag must be used with -i. It is mutually exclusive with -m",
            "translation": "The type of the object to publish. This flag must be used with -i. It is mutually exclusive with -m",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The id of the object to publish. This flag must be used with -t. It is mutually exclusive with -m",
            "message": "The id of the object to publish. This flag must be used with -t. It is mutually exclusive with -m",
            "translation": "The id of the object to publish. This flag must be used with -t. It is mutually exclusive with -m",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "If you want the object to be deployed on nodes using a given pattern, specify it using this flag. This flag is optional and can only be used with --type and --id. It is mutually exclusive with -m",
            "message": "If you want the object to be deployed on nodes using a given pattern, specify it using this flag. This flag is optional and can only be used with --type and --id. It is mutually exclusive with -m",
            "translation": "If you want the object to be deployed on nodes using a given pattern, specify it using this flag. This flag is optional and can only be used with --type and --id. It is mutually exclusive with -m",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The definition of the object to publish. A blank template can be obtained from the 'hzn mms object new' command. Specify -m- to read from stdin.",
            "message": "The definition of the object to publish. A blank template can be obtained from the 'hzn mms object new' command. Specify -m- to read from stdin.",
            "translation": "The definition of the object to publish. A blank template can be obtained from the 'hzn mms object new' command. Specify -m- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The object (in the form of a file) to publish. This flag is optional so that you can update only the object's definition.",
            "message": "The object (in the form of a file) to publish. This flag is optional so that you can update only the object's definition.",
            "translation": "The object (in the form of a file) to publish. This flag is optional so that you can update only the object's definition.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The publish command will disable chunk upload. Data will stream to CSS.",
            "message": "The publish command will disable chunk upload. Data will stream to CSS.",
            "translation": "The publish command will disable chunk upload. Data will stream to CSS.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The size of data chunk that will be published with. Ignored if --disableChunkUpload is specified.",
            "message": "The size of data chunk that will be published with. Ignored if --disableChunkUpload is specified.",
            "translation": "The size of data chunk that will be published with. Ignored if --disableChunkUpload is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The publish command will not perform a data integrity check on the uploaded object data. It is mutually exclusive with --hashAlgo and --hash",
            "message": "The publish command will not perform a data integrity check on the uploaded object data. It is mutually exclusive with --hashAlgo and --hash",
            "translation": "The publish command will not perform a data integrity check on the uploaded object data. It is mutually exclusive with --hashAlgo and --hash",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The hash algorithm used to hash the object data before signing it, ensuring data integrity during upload and download. Supported hash algorithms are SHA1 or SHA256, the default is SHA1. It is mutually exclusive with the --noIntegrity flag",
            "message": "The hash algorithm used to hash the object data before signing it, ensuring data integrity during upload and download. Supported hash algorithms are SHA1 or SHA256, the default is SHA1. It is mutually exclusive with the --noIntegrity flag",
            "translation": "The hash algorithm used to hash the object data before signing it, ensuring data integrity during upload and download. Supported hash algorithms are SHA1 or SHA256, the default is SHA1. It is mutually exclusive with the --noIntegrity flag",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The hash of the object data being uploaded or downloaded. Use this flag if you want to provide the hash instead of allowing the command to automatically calculate the hash. The hash must be generated using either the SHA1 or SHA256 algorithm. The -a flag must be specified if the hash was generated using SHA256. This flag is mutually exclusive with --noIntegrity.",
            "message": "The hash of the object data being uploaded or downloaded. Use this flag if you want to provide the hash instead of allowing the command to automatically calculate the hash. The hash must be generated using either the SHA1 or SHA256 algorithm. The -a flag must be specified if the hash was generated using SHA256. This flag is mutually exclusive with --noIntegrity.",
            "translation": "The hash of the object data being uploaded or downloaded. Use this flag if you want to provide the hash instead of allowing the command to automatically calculate the hash. The hash must be generated using either the SHA1 or SHA256 algorithm. The -a flag must be specified if the hash was generated using SHA256. This flag is mutually exclusive with --noIntegrity.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a private key file to be used to sign the object. The corresponding public key will be stored in the MMS to ensure integrity of the object. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used to find a private key. If not set, ~/.hzn/keys/service.private.key will be used. If it does not exist, an RSA key pair is generated only for this publish operation and then the private key is discarded.",
            "message": "The path of a private key file to be used to sign the object. The corresponding public key will be stored in the MMS to ensure integrity of the object. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used to find a private key. If not set, ~/.hzn/keys/service.private.key will be used. If it does not exist, an RSA key pair is generated only for this publish operation and then the private key is discarded.",
            "translation": "The path of a private key file to be used to sign the object. The corresponding public key will be stored in the MMS to ensure integrity of the object. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used to find a private key. If not set, ~/.hzn/keys/service.private.key will be used. If it does not exist, an RSA key pair is generated only for this publish operation and then the private key is discarded.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display a list of object types stored in the Horizon Model Management Service.",
            "message": "Display a list of object types stored in the Horizon Model Management Service.",
            "translation": "Display a list of object types stored in the Horizon Model Management Service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the status of the Horizon Model Management Service.",
            "message": "Display the status of the Horizon Model Management Service.",
            "translation": "Display the status of the Horizon Model Management Service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage general information about this Horizon edge node.",
            "message": "List and manage general information about this Horizon edge node.",
            "translation": "List and manage general information about this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display general information about this Horizon edge node.",
            "message": "Display general information about this Horizon edge node.",
            "translation": "Display general information about this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage manifests and agent files for node management.",
            "message": "List and manage manifests and agent files for node management.",
            "translation": "List and manage manifests and agent files for node management.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon user credentials to query and create Node Management resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
            "message": "Horizon user credentials to query and create Node Management resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
            "translation": "Horizon user credentials to query and create Node Management resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage manifest files stored in the management hub.",
            "message": "List and manage manifest files stored in the management hub.",
            "translation": "List and manage manifest files stored in the management hub.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace a manifest file in the management hub. Use 'hzn nodemanagement manifest new' for an empty manifest template.",
            "message": "Add or replace a manifest file in the management hub. Use 'hzn nodemanagement manifest new' for an empty manifest template.",
            "translation": "Add or replace a manifest file in the management hub. Use 'hzn nodemanagement manifest new' for an empty manifest template.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of manifest to add. Valid values include 'agent_upgrade_manifests'.",
            "message": "The type of manifest to add. Valid values include 'agent_upgrade_manifests'.",
            "translation": "The type of manifest to add. Valid values include 'agent_upgrade_manifests'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The id of the manifest to add.",
            "message": "The id of the manifest to add.",
            "translation": "The id of the manifest to add.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the manifest data. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the manifest data. Specify -f- to read from stdin.",
            "translation": "The path of a JSON file containing the manifest data. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The hash algorithm used to hash the manifest data before signing it, ensuring data integrity during upload and download. Supported hash algorithms are SHA1 or SHA256, the default is SHA1. It is mutually exclusive with the --noIntegrity flag",
            "message": "The hash algorithm used to hash the manifest data before signing it, ensuring data integrity during upload and download. Supported hash algorithms are SHA1 or SHA256, the default is SHA1. It is mutually exclusive with the --noIntegrity flag",
            "translation": "The hash algorithm used to hash the manifest data before signing it, ensuring data integrity during upload and download. Supported hash algorithms are SHA1 or SHA256, the default is SHA1. It is mutually exclusive with the --noIntegrity flag",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The hash of the manifest data being uploaded or downloaded. Use this flag if you want to provide the hash instead of allowing the command to automatically calculate the hash. The hash must be generated using either the SHA1 or SHA256 algorithm. The -a flag must be specified if the hash was generated using SHA256. This flag is mutually exclusive with --noIntegrity.",
            "message": "The hash of the manifest data being uploaded or downloaded. Use this flag if you want to provide the hash instead of allowing the command to automatically calculate the hash. The hash must be generated using either the SHA1 or SHA256 algorithm. The -a flag must be specified if the hash was generated using SHA256. This flag is mutually exclusive with --noIntegrity.",
            "translation": "The hash of the manifest data being uploaded or downloaded. Use this flag if you want to provide the hash instead of allowing the command to automatically calculate the hash. The hash must be generated using either the SHA1 or SHA256 algorithm. The -a flag must be specified if the hash was generated using SHA256. This flag is mutually exclusive with --noIntegrity.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a private key file to be used to sign the manifest. The corresponding public key will be stored in the MMS to ensure integrity of the manifest. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used to find a private key. If not set, ~/.hzn/keys/service.private.key will be used. If it does not exist, an RSA key pair is generated only for this publish operation and then the private key is discarded.",
            "message": "The path of a private key file to be used to sign the manifest. The corresponding public key will be stored in the MMS to ensure integrity of the manifest. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used to find a private key. If not set, ~/.hzn/keys/service.private.key will be used. If it does not exist, an RSA key pair is generated only for this publish operation and then the private key is discarded.",
            "translation": "The path of a private key file to be used to sign the manifest. The corresponding public key will be stored in the MMS to ensure integrity of the manifest. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used to find a private key. If not set, ~/.hzn/keys/service.private.key will be used. If it does not exist, an RSA key pair is generated only for this publish operation and then the private key is discarded.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The publish command will not perform a data integrity check on the uploaded manifest data. It is mutually exclusive with --hashAlgo and --hash",
            "message": "The publish command will not perform a data integrity check on the uploaded manifest data. It is mutually exclusive with --hashAlgo and --hash",
            "translation": "The publish command will not perform a data integrity check on the uploaded manifest data. It is mutually exclusive with --hashAlgo and --hash",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display a list of manifest files stored in the management hub.",
            "message": "Display a list of manifest files stored in the management hub.",
            "translation": "Display a list of manifest files stored in the management hub.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of manifest to list. Valid values include 'agent_upgrade_manifests'.",
            "message": "The type of manifest to list. Valid values include 'agent_upgrade_manifests'.",
            "translation": "The type of manifest to list. Valid values include 'agent_upgrade_manifests'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The id of the manifest to list. Must specify --type flag.",
            "message": "The id of the manifest to list. Must specify --type flag.",
            "translation": "The id of the manifest to list. Must specify --type flag.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the contents of the manifest file. Must specify --type and --id flags.",
            "message": "Display the contents of the manifest file. Must specify --type and --id flags.",
            "translation": "Display the contents of the manifest file. Must specify --type and --id flags.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty manifest template that can be filled in.",
            "message": "Display an empty manifest template that can be filled in.",
            "translation": "Display an empty manifest template that can be filled in.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a manifest file from the management hub. Use 'hzn nodemanagement manifest new' for an empty manifest template.",
            "message": "Remove a manifest file from the management hub. Use 'hzn nodemanagement manifest new' for an empty manifest template.",
            "translation": "Remove a manifest file from the management hub. Use 'hzn nodemanagement manifest new' for an empty manifest template.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of manifest to remove. Valid values include 'agent_upgrade_manifests'.",
            "message": "The type of manifest to remove. Valid values include 'agent_upgrade_manifests'.",
            "translation": "The type of manifest to remove. Valid values include 'agent_upgrade_manifests'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The id of the manifest to remove.",
            "message": "The id of the manifest to remove.",
            "translation": "The id of the manifest to remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List agent files and types stored in the management hub.",
            "message": "List agent files and types stored in the management hub.",
            "translation": "List agent files and types stored in the management hub.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display a list of agent files stored in the management hub.",
            "message": "Display a list of agent files stored in the management hub.",
            "translation": "Display a list of agent files stored in the management hub.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Filter the list of agent upgrade files by the specified type. Valid values include 'agent_software_files', 'agent_cert_files' and 'agent_config_files'.",
            "message": "Filter the list of agent upgrade files by the specified type. Valid values include 'agent_software_files', 'agent_cert_files' and 'agent_config_files'.",
            "translation": "Filter the list of agent upgrade files by the specified type. Valid values include 'agent_software_files', 'agent_cert_files' and 'agent_config_files'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Filter the list of agent upgrade files by the specified version range or version string. Version can be a version range, a single version string or 'latest'.",
            "message": "Filter the list of agent upgrade files by the specified version range or version string. Version can be a version range, a single version string or 'latest'.",
            "translation": "Filter the list of agent upgrade files by the specified version range or version string. Version can be a version range, a single version string or 'latest'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display a list of agent file types with their corresponding versions.",
            "message": "Display a list of agent file types with their corresponding versions.",
            "translation": "Display a list of agent file types with their corresponding versions.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of agent files to list versions for. Valid values include 'agent_software_files', 'agent_cert_files' and 'agent_config_files'.",
            "message": "The type of agent files to list versions for. Valid values include 'agent_software_files', 'agent_cert_files' and 'agent_config_files'.",
            "translation": "The type of agent files to list versions for. Valid values include 'agent_software_files', 'agent_cert_files' and 'agent_config_files'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show only a list of versions for a given file type. Must also specify a file type with the --type flag.",
            "message": "Show only a list of versions for a given file type. Must also specify a file type with the --type flag.",
            "translation": "Show only a list of versions for a given file type. Must also specify a file type with the --type flag.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage policy for this Horizon edge node.",
            "message": "List and manage policy for this Horizon edge node.",
            "translation": "List and manage policy for this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display this edge node's policy.",
            "message": "Display this edge node's policy.",
            "translation": "Display this edge node's policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty policy template that can be filled in.",
            "message": "Display an empty policy template that can be filled in.",
            "translation": "Display an empty policy template that can be filled in.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(DEPRECATED) This command is deprecated. Please use 'hzn policy update' to update the node policy. This command is used to update either the node policy properties or the constraints, but not both.",
            "message": "(DEPRECATED) This command is deprecated. Please use 'hzn policy update' to update the node policy. This command is used to update either the node policy properties or the constraints, but not both.",
            "translation": "(DEPRECATED) This command is deprecated. Please use 'hzn policy update' to update the node policy. This command is used to update either the node policy properties or the constraints, but not both.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The new constraints or properties in the format '{Constraintsconstraint_list}' or '{Propertiesproperty_list}'.",
            "message": "The new constraints or properties in the format '{Constraintsconstraint_list}' or '{Propertiesproperty_list}'.",
            "translation": "The new constraints or properties in the format '{Constraintsconstraint_list}' or '{Propertiesproperty_list}'.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Constraintsconstraint_list",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "\"{\\\"constraints\\\":[\u003cconstraint list\u003e]}\""
                },
                {
                    "id": "Propertiesproperty_list",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "\"{\\\"properties\\\":[\u003cproperty list\u003e]}\""
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Remove the node's policy.",
            "message": "Remove the node's policy.",
            "translation": "Remove the node's policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create or replace the node's policy. The node's built-in properties cannot be modified or deleted by this command, with the exception of openhorizon.allowPrivileged.",
            "message": "Create or replace the node's policy. The node's built-in properties cannot be modified or deleted by this command, with the exception of openhorizon.allowPrivileged.",
            "translation": "Create or replace the node's policy. The node's built-in properties cannot be modified or deleted by this command, with the exception of openhorizon.allowPrivileged.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input file name containing the node policy. Specify -f- to read from stdin. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "message": "The JSON input file name containing the node policy. Specify -f- to read from stdin. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "translation": "The JSON input file name containing the node policy. Specify -f- to read from stdin. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create an input file template for this pattern that can be used for the 'hzn register' command (once filled in). This examines the services that the specified pattern uses, and determines the node owner input that is required for them.",
            "message": "Create an input file template for this pattern that can be used for the 'hzn register' command (once filled in). This examines the services that the specified pattern uses, and determines the node owner input that is required for them.",
            "translation": "Create an input file template for this pattern that can be used for the 'hzn register' command (once filled in). This examines the services that the specified pattern uses, and determines the node owner input that is required for them.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange node ID and token (it must already exist).",
            "message": "The Horizon exchange node ID and token (it must already exist).",
            "translation": "The Horizon exchange node ID and token (it must already exist).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input template file name that should be created. This file will contain placeholders for you to fill in user input values.",
            "message": "The JSON input template file name that should be created. This file will contain placeholders for you to fill in user input values.",
            "translation": "The JSON input template file name that should be created. This file will contain placeholders for you to fill in user input values.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange organization ID that the node will be registered in.",
            "message": "The Horizon exchange organization ID that the node will be registered in.",
            "translation": "The Horizon exchange organization ID that the node will be registered in.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format.",
            "message": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format.",
            "translation": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The architecture to write the template file for. (Horizon ignores services in patterns whose architecture is different from the target system.) The architecture must be what is returned by 'hzn node list' on the target system.",
            "message": "The architecture to write the template file for. (Horizon ignores services in patterns whose architecture is different from the target system.) The architecture must be what is returned by 'hzn node list' on the target system.",
            "translation": "The architecture to write the template file for. (Horizon ignores services in patterns whose architecture is different from the target system.) The architecture must be what is returned by 'hzn node list' on the target system.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Register this edge node with Horizon.",
            "message": "Register this edge node with Horizon.",
            "translation": "Register this edge node with Horizon.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange node ID and token. The node ID must be unique within the organization. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. If both -n and HZN_EXCHANGE_NODE_AUTH are not specified, the node ID will be created by Horizon from the machine serial number or fully qualified hostname. If the token is not specified, Horizon will create a random token. If node resource in the Exchange identified by the ID and token does not yet exist, you must also specify the -u flag so it can be created.",
            "message": "The Horizon exchange node ID and token. The node ID must be unique within the organization. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. If both -n and HZN_EXCHANGE_NODE_AUTH are not specified, the node ID will be created by Horizon from the machine serial number or fully qualified hostname. If the token is not specified, Horizon will create a random token. If node resource in the Exchange identified by the ID and token does not yet exist, you must also specify the -u flag so it can be created.",
            "translation": "The Horizon exchange node ID and token. The node ID must be unique within the organization. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. If both -n and HZN_EXCHANGE_NODE_AUTH are not specified, the node ID will be created by Horizon from the machine serial number or fully qualified hostname. If the token is not specified, Horizon will create a random token. If node resource in the Exchange identified by the ID and token does not yet exist, you must also specify the -u flag so it can be created.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the node. If not specified, it will be the same as the node id.",
            "message": "The name of the node. If not specified, it will be the same as the node id.",
            "translation": "The name of the node. If not specified, it will be the same as the node id.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "User credentials to create the node resource in the Horizon exchange if it does not already exist. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default.",
            "message": "User credentials to create the node resource in the Horizon exchange if it does not already exist. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default.",
            "translation": "User credentials to create the node resource in the Horizon exchange if it does not already exist. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A JSON file that sets or overrides user input variables needed by the services that will be deployed to this node. See {Sampledir}/user_input.json. Specify -f- to read from stdin.",
            "message": "A JSON file that sets or overrides user input variables needed by the services that will be deployed to this node. See {Sampledir}/user_input.json. Specify -f- to read from stdin.",
            "translation": "A JSON file that sets or overrides user input variables needed by the services that will be deployed to this node. See {Sampledir}/user_input.json. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Sampledir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sample_dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange organization ID that the node should be registered in. The default is the HZN_ORG_ID environment variable. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
            "message": "The Horizon exchange organization ID that the node should be registered in. The default is the HZN_ORG_ID environment variable. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
            "translation": "The Horizon exchange organization ID that the node should be registered in. The default is the HZN_ORG_ID environment variable. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
            "message": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
            "translation": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A JSON file that sets or overrides the node policy for this node. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "message": "A JSON file that sets or overrides the node policy for this node. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "translation": "A JSON file that sets or overrides the node policy for this node. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange organization ID that the node should be registered in. Mutually exclusive with -o and -p.",
            "message": "The Horizon exchange organization ID that the node should be registered in. Mutually exclusive with -o and -p.",
            "translation": "The Horizon exchange organization ID that the node should be registered in. Mutually exclusive with -o and -p.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with -o and -p.",
            "message": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with -o and -p.",
            "translation": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with -o and -p.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the HA group that this node will be added to.",
            "message": "The name of the HA group that this node will be added to.",
            "translation": "The name of the HA group that this node will be added to.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Wait for the named service to start executing on this node. When registering with a pattern, use '*' to watch all the services in the pattern. When registering with a policy, '*' is not a valid value for -s. This flag is not supported for edge cluster nodes.",
            "message": "Wait for the named service to start executing on this node. When registering with a pattern, use '*' to watch all the services in the pattern. When registering with a policy, '*' is not a valid value for -s. This flag is not supported for edge cluster nodes.",
            "translation": "Wait for the named service to start executing on this node. When registering with a pattern, use '*' to watch all the services in the pattern. When registering with a policy, '*' is not a valid value for -s. This flag is not supported for edge cluster nodes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The org of the service to wait for on this node. If '-s *' is specified, then --serviceorg must be omitted.",
            "message": "The org of the service to wait for on this node. If '-s *' is specified, then --serviceorg must be omitted.",
            "translation": "The org of the service to wait for on this node. If '-s *' is specified, then --serviceorg must be omitted.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The number of seconds for the --service to start. The default is 60 seconds, beginning when registration is successful. Ignored if --service is not specified.",
            "message": "The number of seconds for the --service to start. The default is 60 seconds, beginning when registration is successful. Ignored if --service is not specified.",
            "translation": "The number of seconds for the --service to start. The default is 60 seconds, beginning when registration is successful. Ignored if --service is not specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the services that are currently registered on this Horizon edge node.",
            "message": "List or manage the services that are currently registered on this Horizon edge node.",
            "translation": "List or manage the services that are currently registered on this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the configuration state for the services that are currently registered on this Horizon edge node.",
            "message": "List or manage the configuration state for the services that are currently registered on this Horizon edge node.",
            "translation": "List or manage the configuration state for the services that are currently registered on this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the configuration state for the services that are currently registered on this Horizon edge node.",
            "message": "List the configuration state for the services that are currently registered on this Horizon edge node.",
            "translation": "List the configuration state for the services that are currently registered on this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Change the configuration state to 'active' for a service.",
            "message": "Change the configuration state to 'active' for a service.",
            "translation": "Change the configuration state to 'active' for a service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Resume all registerd services.",
            "message": "Resume all registerd services.",
            "translation": "Resume all registerd services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the service that should be resumed.",
            "message": "The organization of the service that should be resumed.",
            "translation": "The organization of the service that should be resumed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the service that should be resumed. If omitted, all the services for the organization will be resumed.",
            "message": "The name of the service that should be resumed. If omitted, all the services for the organization will be resumed.",
            "translation": "The name of the service that should be resumed. If omitted, all the services for the organization will be resumed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The version of the service that should be resumed. If omitted, all the versions for this service will be resumed.",
            "message": "The version of the service that should be resumed. If omitted, all the versions for this service will be resumed.",
            "translation": "The version of the service that should be resumed. If omitted, all the versions for this service will be resumed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Change the configuration state to 'suspend' for a service. Parent and child dependencies of the suspended service will be stopped until the service is resumed.",
            "message": "Change the configuration state to 'suspend' for a service. Parent and child dependencies of the suspended service will be stopped until the service is resumed.",
            "translation": "Change the configuration state to 'suspend' for a service. Parent and child dependencies of the suspended service will be stopped until the service is resumed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Suspend all registerd services.",
            "message": "Suspend all registerd services.",
            "translation": "Suspend all registerd services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the service that should be suspended.",
            "message": "The organization of the service that should be suspended.",
            "translation": "The organization of the service that should be suspended.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the service that should be suspended. If omitted, all the services for the organization will be suspended.",
            "message": "The name of the service that should be suspended. If omitted, all the services for the organization will be suspended.",
            "translation": "The name of the service that should be suspended. If omitted, all the services for the organization will be suspended.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The version of the service that should be suspended. If omitted, all the versions for this service will be suspended.",
            "message": "The version of the service that should be suspended. If omitted, all the versions for this service will be suspended.",
            "translation": "The version of the service that should be suspended. If omitted, all the versions for this service will be suspended.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the container logs for a service.",
            "message": "Show the container logs for a service.",
            "translation": "Show the container logs for a service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the service whose log records should be displayed. The service name is the same as the url field of a service definition. Displays log records similar to tail behavior and returns .",
            "message": "The name of the service whose log records should be displayed. The service name is the same as the url field of a service definition. Displays log records similar to tail behavior and returns .",
            "translation": "The name of the service whose log records should be displayed. The service name is the same as the url field of a service definition. Displays log records similar to tail behavior and returns .",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The version of the service.",
            "message": "The version of the service.",
            "translation": "The version of the service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the container within the service whose log records should be displayed.",
            "message": "The name of the container within the service whose log records should be displayed.",
            "translation": "The name of the container within the service whose log records should be displayed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the services variable configuration that has been done on this Horizon edge node.",
            "message": "List the services variable configuration that has been done on this Horizon edge node.",
            "translation": "List the services variable configuration that has been done on this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the services that are currently registered on this Horizon edge node.",
            "message": "List the services that are currently registered on this Horizon edge node.",
            "translation": "List the services that are currently registered on this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the current horizon internal status for the node.",
            "message": "Display the current horizon internal status for the node.",
            "translation": "Display the current horizon internal status for the node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unregister and reset this Horizon edge node so that it is ready to be registered again. Warning: this will stop all the Horizon services running on this edge node, and restart the Horizon agent.",
            "message": "Unregister and reset this Horizon edge node so that it is ready to be registered again. Warning: this will stop all the Horizon services running on this edge node, and restart the Horizon agent.",
            "translation": "Unregister and reset this Horizon edge node so that it is ready to be registered again. Warning: this will stop all the Horizon services running on this edge node, and restart the Horizon agent.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Also remove this node resource from the Horizon exchange (because you no longer want to use this node with Horizon).",
            "message": "Also remove this node resource from the Horizon exchange (because you no longer want to use this node with Horizon).",
            "translation": "Also remove this node resource from the Horizon exchange (because you no longer want to use this node with Horizon).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Also remove all the previous registration information. Use it only after the 'hzn unregister' command failed. The eventlog is automatically saved after running this command.",
            "message": "Also remove all the previous registration information. Use it only after the 'hzn unregister' command failed. The eventlog is automatically saved after running this command.",
            "translation": "Also remove all the previous registration information. Use it only after the 'hzn unregister' command failed. The eventlog is automatically saved after running this command.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The number of minutes to wait for unregistration to complete. The default is zero which will wait forever.",
            "message": "The number of minutes to wait for unregistration to complete. The default is zero which will wait forever.",
            "translation": "The number of minutes to wait for unregistration to complete. The default is zero which will wait forever.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Perform a deep clean on a node running in a container. This flag  must be used with -D and only if the agent was installed as anax-in-container.",
            "message": "Perform a deep clean on a node running in a container. This flag  must be used with -D and only if the agent was installed as anax-in-container.",
            "translation": "Perform a deep clean on a node running in a container. This flag  must be used with -D and only if the agent was installed as anax-in-container.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the service user inputs that are currently registered on this Horizon edge node.",
            "message": "List or manage the service user inputs that are currently registered on this Horizon edge node.",
            "translation": "List or manage the service user inputs that are currently registered on this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add a new user input object or overwrite the current user input object for this Horizon edge node.",
            "message": "Add a new user input object or overwrite the current user input object for this Horizon edge node.",
            "translation": "Add a new user input object or overwrite the current user input object for this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The file path to the json file with the user input object. Specify -f- to read from stdin.",
            "message": "The file path to the json file with the user input object. Specify -f- to read from stdin.",
            "translation": "The file path to the json file with the user input object. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the service user inputs currently registered on this Horizon edge node.",
            "message": "List the service user inputs currently registered on this Horizon edge node.",
            "translation": "List the service user inputs currently registered on this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty userinput template.",
            "message": "Display an empty userinput template.",
            "translation": "Display an empty userinput template.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the user inputs that are currently registered on this Horizon edge node.",
            "message": "Remove the user inputs that are currently registered on this Horizon edge node.",
            "translation": "Remove the user inputs that are currently registered on this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Skip the 'Are you sure?' prompt.",
            "message": "Skip the 'Are you sure?' prompt.",
            "translation": "Skip the 'Are you sure?' prompt.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update an existing user input object for this Horizon edge node.",
            "message": "Update an existing user input object for this Horizon edge node.",
            "translation": "Update an existing user input object for this Horizon edge node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The file path to the json file with the updated user input object. Specify -f- to read from stdin.",
            "message": "The file path to the json file with the updated user input object. Specify -f- to read from stdin.",
            "translation": "The file path to the json file with the updated user input object. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage node management status for the local node.",
            "message": "List and manage node management status for the local node.",
            "translation": "List and manage node management status for the local node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the node managment status for the local node.",
            "message": "Display the node managment status for the local node.",
            "translation": "Display the node managment status for the local node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the node management policy. If omitted the status of all management policies for this node will be displayed.",
            "message": "The name of the node management policy. If omitted the status of all management policies for this node will be displayed.",
            "translation": "The name of the node management policy. If omitted the status of all management policies for this node will be displayed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the entire contents of each node management status object.",
            "message": "Show the entire contents of each node management status object.",
            "translation": "Show the entire contents of each node management status object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Re-evaluate the node management policy (nmp). Run this command to retry a nmp when the upgrade failed and the problem is fixed. Do not run this command when the node is still in the middle of an upgrade.",
            "message": "Re-evaluate the node management policy (nmp). Run this command to retry a nmp when the upgrade failed and the problem is fixed. Do not run this command when the node is still in the middle of an upgrade.",
            "translation": "Re-evaluate the node management policy (nmp). Run this command to retry a nmp when the upgrade failed and the problem is fixed. Do not run this command when the node is still in the middle of an upgrade.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the node management policy. If omitted all management policies for this node will be re-evaluated.",
            "message": "The name of the node management policy. If omitted all management policies for this node will be re-evaluated.",
            "translation": "The name of the node management policy. If omitted all management policies for this node will be re-evaluated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Utility commands.",
            "message": "Utility commands.",
            "translation": "Utility commands.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Convert the configuration file from JSON format to a shell script.",
            "message": "Convert the configuration file from JSON format to a shell script.",
            "translation": "Convert the configuration file from JSON format to a shell script.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a configuration file to be converted.",
            "message": "The path of a configuration file to be converted.",
            "translation": "The path of a configuration file to be converted.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Sign the text in stdin. The signature is sent to stdout.",
            "message": "Sign the text in stdin. The signature is sent to stdout.",
            "translation": "Sign the text in stdin. The signature is sent to stdout.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a private key file to be used to sign the stdin.",
            "message": "The path of a private key file to be used to sign the stdin.",
            "translation": "The path of a private key file to be used to sign the stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Verify that the signature specified via -s is a valid signature for the text in stdin.",
            "message": "Verify that the signature specified via -s is a valid signature for the text in stdin.",
            "translation": "Verify that the signature specified via -s is a valid signature for the text in stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of public key file (that corresponds to the private key that was used to sign) to verify the signature of stdin.",
            "message": "The path of public key file (that corresponds to the private key that was used to sign) to verify the signature of stdin.",
            "translation": "The path of public key file (that corresponds to the private key that was used to sign) to verify the signature of stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The supposed signature of stdin.",
            "message": "The supposed signature of stdin.",
            "translation": "The supposed signature of stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage secrets in the secrets manager. NOTE: You must authenticate as an administrator to list secrets available to the entire organization. Secrets are not supported on cluster agents.",
            "message": "List and manage secrets in the secrets manager. NOTE: You must authenticate as an administrator to list secrets available to the entire organization. Secrets are not supported on cluster agents.",
            "translation": "List and manage secrets in the secrets manager. NOTE: You must authenticate as an administrator to list secrets available to the entire organization. Secrets are not supported on cluster agents.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon Exchange credentials to query secrets manager resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "message": "Horizon Exchange credentials to query secrets manager resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "translation": "Horizon Exchange credentials to query secrets manager resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage secrets in the secrets manager.",
            "message": "List and manage secrets in the secrets manager.",
            "translation": "List and manage secrets in the secrets manager.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the names of the secrets in the secrets manager.",
            "message": "Display the names of the secrets in the secrets manager.",
            "translation": "Display the names of the secrets in the secrets manager.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node id of the node secret to list. Include only if this secret is specific to a single node.",
            "message": "The node id of the node secret to list. Include only if this secret is specific to a single node.",
            "translation": "The node id of the node secret to list. Include only if this secret is specific to a single node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one secret. Returns a boolean indicating the existence of the secret. This is the name of the secret used in the secrets manager. If the secret does not exist, returns with exit code 1.",
            "message": "List just this one secret. Returns a boolean indicating the existence of the secret. This is the name of the secret used in the secrets manager. If the secret does not exist, returns with exit code 1.",
            "translation": "List just this one secret. Returns a boolean indicating the existence of the secret. This is the name of the secret used in the secrets manager. If the secret does not exist, returns with exit code 1.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add a secret to the secrets manager.",
            "message": "Add a secret to the secrets manager.",
            "translation": "Add a secret to the secrets manager.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the secret. It must be unique within your organization. This name is used in deployment policies and patterns to bind this secret to a secret name in a service definition.",
            "message": "The name of the secret. It must be unique within your organization. This name is used in deployment policies and patterns to bind this secret to a secret name in a service definition.",
            "translation": "The name of the secret. It must be unique within your organization. This name is used in deployment policies and patterns to bind this secret to a secret name in a service definition.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The id of the node to apply this secret to. Include only if this secret is specific to a single node.",
            "message": "The id of the node to apply this secret to. Include only if this secret is specific to a single node.",
            "translation": "The id of the node to apply this secret to. Include only if this secret is specific to a single node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Filepath to a file containing the secret details. Mutually exclusive with --secretDetail. Specify -f- to read from stdin.",
            "message": "Filepath to a file containing the secret details. Mutually exclusive with --secretDetail. Specify -f- to read from stdin.",
            "translation": "Filepath to a file containing the secret details. Mutually exclusive with --secretDetail. Specify -f- to read from stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A key for the secret.",
            "message": "A key for the secret.",
            "translation": "A key for the secret.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The secret details as a string. Secret details are the actual secret itself, not the name of the secret. For example, a password, a private key, etc. are examples of secret details. Mutually exclusive with --secretFile.",
            "message": "The secret details as a string. Secret details are the actual secret itself, not the name of the secret. For example, a password, a private key, etc. are examples of secret details. Mutually exclusive with --secretFile.",
            "translation": "The secret details as a string. Secret details are the actual secret itself, not the name of the secret. For example, a password, a private key, etc. are examples of secret details. Mutually exclusive with --secretFile.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Overwrite the existing secret if it exists in the secrets manager. It will skip the 'do you want to overwrite' prompt.",
            "message": "Overwrite the existing secret if it exists in the secrets manager. It will skip the 'do you want to overwrite' prompt.",
            "translation": "Overwrite the existing secret if it exists in the secrets manager. It will skip the 'do you want to overwrite' prompt.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a secret in the secrets manager.",
            "message": "Remove a secret in the secrets manager.",
            "translation": "Remove a secret in the secrets manager.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node id of the secret to be removed. Include only if this secret is specific to a single node.",
            "message": "The node id of the secret to be removed. Include only if this secret is specific to a single node.",
            "translation": "The node id of the secret to be removed. Include only if this secret is specific to a single node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the secret to be removed from the secrets manager.",
            "message": "The name of the secret to be removed from the secrets manager.",
            "translation": "The name of the secret to be removed from the secrets manager.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Read the details of a secret stored in the secrets manager. This consists of the key and value pair provided on secret creation.",
            "message": "Read the details of a secret stored in the secrets manager. This consists of the key and value pair provided on secret creation.",
            "translation": "Read the details of a secret stored in the secrets manager. This consists of the key and value pair provided on secret creation.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node id of the node secret to read. Include only if this secret is specific to a single node.",
            "message": "The node id of the node secret to read. Include only if this secret is specific to a single node.",
            "translation": "The node id of the node secret to read. Include only if this secret is specific to a single node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the secret to read in the secrets manager.",
            "message": "The name of the secret to read in the secrets manager.",
            "translation": "The name of the secret to read in the secrets manager.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the Horizon version.",
            "message": "Show the Horizon version.",
            "translation": "Show the Horizon version.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage resources in SDO owner services",
            "message": "List and manage resources in SDO owner services",
            "translation": "List and manage resources in SDO owner services",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon Exchange credentials to SDO owner service resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "message": "Horizon Exchange credentials to SDO owner service resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "translation": "Horizon Exchange credentials to SDO owner service resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage Horizon SDO ownership keys.",
            "message": "List and manage Horizon SDO ownership keys.",
            "translation": "List and manage Horizon SDO ownership keys.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the SDO ownership keys stored in SDO owner services.",
            "message": "List the SDO ownership keys stored in SDO owner services.",
            "translation": "List the SDO ownership keys stored in SDO owner services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the full details of this SDO ownership key.",
            "message": "List the full details of this SDO ownership key.",
            "translation": "List the full details of this SDO ownership key.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create a new key in SDO owner services.",
            "message": "Create a new key in SDO owner services.",
            "translation": "Create a new key in SDO owner services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The file containing metadata for the key to be created in SDO owner services. Must be JSON file type extension.",
            "message": "The file containing metadata for the key to be created in SDO owner services. Must be JSON file type extension.",
            "translation": "The file containing metadata for the key to be created in SDO owner services. Must be JSON file type extension.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The file that the returned public key is written to. If omit, the key will be printed to the console.",
            "message": "The file that the returned public key is written to. If omit, the key will be printed to the console.",
            "translation": "The file that the returned public key is written to. If omit, the key will be printed to the console.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Overwrite the existing output public key file if it exists.",
            "message": "Overwrite the existing output public key file if it exists.",
            "translation": "Overwrite the existing output public key file if it exists.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Download the specified key from SDO owner services.",
            "message": "Download the specified key from SDO owner services.",
            "translation": "Download the specified key from SDO owner services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the key to be downloaded from SDO owner services.",
            "message": "The name of the key to be downloaded from SDO owner services.",
            "translation": "The name of the key to be downloaded from SDO owner services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The file that the data of downloaded key is written to. If omit, the key will be printed to the console.",
            "message": "The file that the data of downloaded key is written to. If omit, the key will be printed to the console.",
            "translation": "The file that the data of downloaded key is written to. If omit, the key will be printed to the console.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Overwrite the existing file if it exists.",
            "message": "Overwrite the existing file if it exists.",
            "translation": "Overwrite the existing file if it exists.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a key from SDO owner services.",
            "message": "Remove a key from SDO owner services.",
            "translation": "Remove a key from SDO owner services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the key to be removed from SDO owner services.",
            "message": "The name of the key to be removed from SDO owner services.",
            "translation": "The name of the key to be removed from SDO owner services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create a new SDO key metadata template file. All fields must be filled before adding to SDO owner services.",
            "message": "Create a new SDO key metadata template file. All fields must be filled before adding to SDO owner services.",
            "translation": "Create a new SDO key metadata template file. All fields must be filled before adding to SDO owner services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The file that the SDO key template will be written to in JSON format. If omit, the key metadata will be printed to the console.",
            "message": "The file that the SDO key template will be written to in JSON format. If omit, the key metadata will be printed to the console.",
            "translation": "The file that the SDO key template will be written to in JSON format. If omit, the key metadata will be printed to the console.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage Horizon SDO ownership vouchers.",
            "message": "List and manage Horizon SDO ownership vouchers.",
            "translation": "List and manage Horizon SDO ownership vouchers.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the imported SDO ownership vouchers.",
            "message": "List the imported SDO ownership vouchers.",
            "translation": "List the imported SDO ownership vouchers.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the full details of this SDO ownership voucher.",
            "message": "List the full details of this SDO ownership voucher.",
            "translation": "List the full details of this SDO ownership voucher.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When a voucher uuid is specified the full contents of the voucher will be listed, otherwise the full contents of all the imported vouchers will be listed.",
            "message": "When a voucher uuid is specified the full contents of the voucher will be listed, otherwise the full contents of all the imported vouchers will be listed.",
            "translation": "When a voucher uuid is specified the full contents of the voucher will be listed, otherwise the full contents of all the imported vouchers will be listed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display properties of the SDO ownership voucher.",
            "message": "Display properties of the SDO ownership voucher.",
            "translation": "Display properties of the SDO ownership voucher.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The SDO ownership voucher file.",
            "message": "The SDO ownership voucher file.",
            "translation": "The SDO ownership voucher file.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Imports the SDO ownership voucher so that the corresponding device can be booted, configured, and registered.",
            "message": "Imports the SDO ownership voucher so that the corresponding device can be booted, configured, and registered.",
            "translation": "Imports the SDO ownership voucher so that the corresponding device can be booted, configured, and registered.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The SDO ownership voucher file. Must be file type extension: json, tar, tar.gz, tgz, or zip. If it is any of the tar/zip formats, all json files within it will be imported (other files/dirs will be silently ignored).",
            "message": "The SDO ownership voucher file. Must be file type extension: json, tar, tar.gz, tgz, or zip. If it is any of the tar/zip formats, all json files within it will be imported (other files/dirs will be silently ignored).",
            "translation": "The SDO ownership voucher file. Must be file type extension: json, tar, tar.gz, tgz, or zip. If it is any of the tar/zip formats, all json files within it will be imported (other files/dirs will be silently ignored).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Automatically create a node policy that will result in the specified example edge service (for example 'helloworld') being deployed to the edge device associated with this voucher. It is mutually exclusive with --policy and -p.",
            "message": "Automatically create a node policy that will result in the specified example edge service (for example 'helloworld') being deployed to the edge device associated with this voucher. It is mutually exclusive with --policy and -p.",
            "translation": "Automatically create a node policy that will result in the specified example edge service (for example 'helloworld') being deployed to the edge device associated with this voucher. It is mutually exclusive with --policy and -p.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node policy file to use for the edge device associated with this voucher. It is mutually exclusive with -e and -p. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "message": "The node policy file to use for the edge device associated with this voucher. It is mutually exclusive with -e and -p. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "translation": "The node policy file to use for the edge device associated with this voucher. It is mutually exclusive with -e and -p. A node policy contains the 'deployment' and 'management' attributes. Please use 'hzn policy new' to see the node policy format.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The deployment pattern name to use for the edge device associated with this voucher. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. It is mutually exclusive with -e and --policy.",
            "message": "The deployment pattern name to use for the edge device associated with this voucher. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. It is mutually exclusive with -e and --policy.",
            "translation": "The deployment pattern name to use for the edge device associated with this voucher. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. It is mutually exclusive with -e and --policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A JSON file that sets or overrides user input variables needed by the services that will be deployed to the edge device associated with this voucher. Please use 'hzn userinput new' to see the format.",
            "message": "A JSON file that sets or overrides user input variables needed by the services that will be deployed to the edge device associated with this voucher. Please use 'hzn userinput new' to see the format.",
            "translation": "A JSON file that sets or overrides user input variables needed by the services that will be deployed to the edge device associated with this voucher. Please use 'hzn userinput new' to see the format.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the HA group that the edge device associated with this voucher will be added to.",
            "message": "The name of the HA group that the edge device associated with this voucher will be added to.",
            "translation": "The name of the HA group that the edge device associated with this voucher will be added to.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Download the specified SDO ownership voucher from SDO owner services.",
            "message": "Download the specified SDO ownership voucher from SDO owner services.",
            "translation": "Download the specified SDO ownership voucher from SDO owner services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The SDO ownership voucher to download.",
            "message": "The SDO ownership voucher to download.",
            "translation": "The SDO ownership voucher to download.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The file that the data of downloaded voucher is written to in JSON format. This flag must be used with -f. If omit, will use default file name in format of \u003cdeviceID\u003e.json and save in current directory.",
            "message": "The file that the data of downloaded voucher is written to in JSON format. This flag must be used with -f. If omit, will use default file name in format of \u003cdeviceID\u003e.json and save in current directory.",
            "translation": "The file that the data of downloaded voucher is written to in JSON format. This flag must be used with -f. If omit, will use default file name in format of \u003cdeviceID\u003e.json and save in current directory.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher' to list and manage Horizon SDO ownership vouchers.",
            "message": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher' to list and manage Horizon SDO ownership vouchers.",
            "translation": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher' to list and manage Horizon SDO ownership vouchers.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher list' to list the imported SDO ownership vouchers.",
            "message": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher list' to list the imported SDO ownership vouchers.",
            "translation": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher list' to list the imported SDO ownership vouchers.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher inspect' to display properties of the SDO ownership voucher.",
            "message": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher inspect' to display properties of the SDO ownership voucher.",
            "translation": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher inspect' to display properties of the SDO ownership voucher.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher import' to import the SDO ownership voucher",
            "message": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher import' to import the SDO ownership voucher",
            "translation": "(DEPRECATED) This command is deprecated. Please use 'hzn sdo voucher import' to import the SDO ownership voucher",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon user credentials to import a voucher. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
            "message": "Horizon user credentials to import a voucher. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
            "translation": "Horizon user credentials to import a voucher. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node policy file to use for the edge device associated with this voucher. It is mutually exclusive with -e and -p.",
            "message": "The node policy file to use for the edge device associated with this voucher. It is mutually exclusive with -e and -p.",
            "translation": "The node policy file to use for the edge device associated with this voucher. It is mutually exclusive with -e and -p.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage resources in FDO owner services",
            "message": "List and manage resources in FDO owner services",
            "translation": "List and manage resources in FDO owner services",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon Exchange credentials to query FDO Owner service resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "message": "Horizon Exchange credentials to query FDO Owner service resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "translation": "Horizon Exchange credentials to query FDO Owner service resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List FDO ownership public keys.",
            "message": "List FDO ownership public keys.",
            "translation": "List FDO ownership public keys.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List a public key from the FDO Owner services using the device alias from the manufacturer.",
            "message": "List a public key from the FDO Owner services using the device alias from the manufacturer.",
            "translation": "List a public key from the FDO Owner services using the device alias from the manufacturer.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The device alias received from the manufacturer. It can be one of the following: SECP256R1, SECP384R1, RSAPKCS3072, RSAPKCS2048, RSA2048RESTR which are all cryptography standards.",
            "message": "The device alias received from the manufacturer. It can be one of the following: SECP256R1, SECP384R1, RSAPKCS3072, RSAPKCS2048, RSA2048RESTR which are all cryptography standards.",
            "translation": "The device alias received from the manufacturer. It can be one of the following: SECP256R1, SECP384R1, RSAPKCS3072, RSAPKCS2048, RSA2048RESTR which are all cryptography standards.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage Horizon FDO ownership vouchers.",
            "message": "List and manage Horizon FDO ownership vouchers.",
            "translation": "List and manage Horizon FDO ownership vouchers.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the imported FDO ownership vouchers.",
            "message": "List the imported FDO ownership vouchers.",
            "translation": "List the imported FDO ownership vouchers.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the full details of this FDO ownership voucher.",
            "message": "List the full details of this FDO ownership voucher.",
            "translation": "List the full details of this FDO ownership voucher.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Imports the FDO ownership voucher so that the corresponding device can be booted, configured, and registered.",
            "message": "Imports the FDO ownership voucher so that the corresponding device can be booted, configured, and registered.",
            "translation": "Imports the FDO ownership voucher so that the corresponding device can be booted, configured, and registered.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The FDO ownership voucher file. Must be file type extension: txt, tar, tar.gz, tgz, or zip. If it is any of the tar/zip formats, all .txt files within it will be imported (other files/dirs will be silently ignored).",
            "message": "The FDO ownership voucher file. Must be file type extension: txt, tar, tar.gz, tgz, or zip. If it is any of the tar/zip formats, all .txt files within it will be imported (other files/dirs will be silently ignored).",
            "translation": "The FDO ownership voucher file. Must be file type extension: txt, tar, tar.gz, tgz, or zip. If it is any of the tar/zip formats, all .txt files within it will be imported (other files/dirs will be silently ignored).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Download the specified FDO ownership voucher from FDO owner services.",
            "message": "Download the specified FDO ownership voucher from FDO owner services.",
            "translation": "Download the specified FDO ownership voucher from FDO owner services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The FDO ownership voucher to download.",
            "message": "The FDO ownership voucher to download.",
            "translation": "The FDO ownership voucher to download.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "organization ID must be specified with either the -o flag or HZN_ORG_ID",
            "message": "organization ID must be specified with either the -o flag or HZN_ORG_ID",
            "translation": "organization ID must be specified with either the -o flag or HZN_ORG_ID",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "exchange user authentication must be specified with either the -u flag or HZN_EXCHANGE_USER_AUTH",
            "message": "exchange user authentication must be specified with either the -u flag or HZN_EXCHANGE_USER_AUTH",
            "translation": "exchange user authentication must be specified with either the -u flag or HZN_EXCHANGE_USER_AUTH",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "horizon api agreement output did not include 'agreements' key",
            "message": "horizon api agreement output did not include 'agreements' key",
            "translation": "horizon api agreement output did not include 'agreements' key",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "horizon api agreement output did not include '{WhichAgreements}' key",
            "message": "horizon api agreement output did not include '{WhichAgreements}' key",
            "translation": "horizon api agreement output did not include '{WhichAgreements}' key",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "WhichAgreements",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "whichAgreements"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal agreement with index {I}: {Err}",
            "message": "failed to marshal agreement with index {I}: {Err}",
            "translation": "failed to marshal agreement with index {I}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "agreement id {AgreementId} not found",
            "message": "agreement id {AgreementId} not found",
            "translation": "agreement id {AgreementId} not found",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AgreementId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "agreementId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn agreement list' output: {Err}",
            "message": "failed to marshal 'hzn agreement list' output: {Err}",
            "translation": "failed to marshal 'hzn agreement list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No active agreements to cancel.",
            "message": "No active agreements to cancel.",
            "translation": "No active agreements to cancel.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "either an agreement ID or -a must be specified.",
            "message": "either an agreement ID or -a must be specified.",
            "translation": "either an agreement ID or -a must be specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Canceling agreement {Id} ...",
            "message": "Canceling agreement {Id} ...",
            "translation": "Canceling agreement {Id} ...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Id",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "id"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to set env var 'HORIZON_URL', error {Err}",
            "message": "unable to set env var 'HORIZON_URL', error {Err}",
            "translation": "unable to set env var 'HORIZON_URL', error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'agreement list' output: {Err}",
            "message": "failed to marshal 'agreement list' output: {Err}",
            "translation": "failed to marshal 'agreement list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn node list' output: {Err}",
            "message": "failed to marshal 'hzn node list' output: {Err}",
            "translation": "failed to marshal 'hzn node list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "org must be specified with -o when pattern name is specified.",
            "message": "org must be specified with -o when pattern name is specified.",
            "translation": "org must be specified with -o when pattern name is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal output: {Err}",
            "message": "failed to marshal output: {Err}",
            "translation": "failed to marshal output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Org} does not exist in the pattern management cache.",
            "message": "{Org} does not exist in the pattern management cache.",
            "translation": "{Org} does not exist in the pattern management cache.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Org}/{Name} does not exist in the pattern management cache.",
            "message": "{Org}/{Name} does not exist in the pattern management cache.",
            "translation": "{Org}/{Name} does not exist in the pattern management cache.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "org must be specified with -o when deployment policy name is specified.",
            "message": "org must be specified with -o when deployment policy name is specified.",
            "translation": "org must be specified with -o when deployment policy name is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "{Org} does not exist in the deployment policy management cache.",
            "message": "{Org} does not exist in the deployment policy management cache.",
            "translation": "{Org} does not exist in the deployment policy management cache.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Org}/{Name} does not exist in the deployment policy management cache.",
            "message": "{Org}/{Name} does not exist in the deployment policy management cache.",
            "translation": "{Org}/{Name} does not exist in the deployment policy management cache.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'policy list' output: {Err}",
            "message": "failed to marshal 'policy list' output: {Err}",
            "translation": "failed to marshal 'policy list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error: The organization '{Org}' does not exist.",
            "message": "Error: The organization '{Org}' does not exist.",
            "translation": "Error: The organization '{Org}' does not exist.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error: Either the organization '{Org}' does not exist or the policy '{Name}' is not hosted by this agbot.",
            "message": "Error: Either the organization '{Org}' does not exist or the policy '{Name}' is not hosted by this agbot.",
            "translation": "Error: Either the organization '{Org}' does not exist or the policy '{Name}' is not hosted by this agbot.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "this command can not be run before running 'hzn register'",
            "message": "this command can not be run before running 'hzn register'",
            "translation": "this command can not be run before running 'hzn register'",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "horizon api attributes output did not include 'attributes' key",
            "message": "horizon api attributes output did not include 'attributes' key",
            "translation": "horizon api attributes output did not include 'attributes' key",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn attribute list' output: {Err}",
            "message": "failed to marshal 'hzn attribute list' output: {Err}",
            "translation": "failed to marshal 'hzn attribute list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Reading configuration file: {ConfigFile}",
            "message": "Reading configuration file: {ConfigFile}",
            "translation": "Reading configuration file: {ConfigFile}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to read config file: {ConfigFile}. {Err}",
            "message": "Unable to read config file: {ConfigFile}. {Err}",
            "translation": "Unable to read config file: {ConfigFile}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to decode content of config file {ConfigFile}. {Err}",
            "message": "Unable to decode content of config file {ConfigFile}. {Err}",
            "translation": "Unable to decode content of config file {ConfigFile}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Config file does not exist: {ConfigFile}.",
            "message": "Config file does not exist: {ConfigFile}.",
            "translation": "Config file does not exist: {ConfigFile}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to set the environment variable defined in the MetadataVars attribute in file {ConfigFile}. {Err}",
            "message": "Failed to set the environment variable defined in the MetadataVars attribute in file {ConfigFile}. {Err}",
            "translation": "Failed to set the environment variable defined in the MetadataVars attribute in file {ConfigFile}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to set the environment variable in top level in file {ConfigFile}. {Err}",
            "message": "Failed to set the environment variable in top level in file {ConfigFile}. {Err}",
            "translation": "Failed to set the environment variable in top level in file {ConfigFile}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to set the environment variable defined in file {ConfigFile}. {Err}",
            "message": "Failed to set the environment variable defined in file {ConfigFile}. {Err}",
            "translation": "Failed to set the environment variable defined in file {ConfigFile}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Local configuration {LocalConfigFile} has been setup at the beginning of this command. Will not setup twice.",
            "message": "Local configuration {LocalConfigFile} has been setup at the beginning of this command. Will not setup twice.",
            "translation": "Local configuration {LocalConfigFile} has been setup at the beginning of this command. Will not setup twice.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "LocalConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "localConfigFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to set the environment variable from the local configuration file {LocalConfigFile} for file {FilePath}. Error: {Err}",
            "message": "Failed to set the environment variable from the local configuration file {LocalConfigFile} for file {FilePath}. Error: {Err}",
            "translation": "Failed to set the environment variable from the local configuration file {LocalConfigFile} for file {FilePath}. Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "LocalConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "localConfigFile"
                },
                {
                    "id": "FilePath",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to restore the environment variable after using local configuration file {UseLocalConfig}. {Err}",
            "message": "Failed to restore the environment variable after using local configuration file {UseLocalConfig}. {Err}",
            "translation": "Failed to restore the environment variable after using local configuration file {UseLocalConfig}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "UseLocalConfig",
                    "string": "%[1]v",
                    "type": "bool",
                    "underlyingType": "bool",
                    "argNum": 1,
                    "expr": "useLocalConfig"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get the absolute path for file {ConfigFilepkg}. {Err}",
            "message": "Failed to get the absolute path for file {ConfigFilepkg}. {Err}",
            "translation": "Failed to get the absolute path for file {ConfigFilepkg}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFilepkg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile_pkg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error reading environment variables from file {ConfigFilepkg}. {Err}",
            "message": "Error reading environment variables from file {ConfigFilepkg}. {Err}",
            "translation": "Error reading environment variables from file {ConfigFilepkg}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFilepkg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile_pkg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error reading environment variables from file /etc/default/horizon. {Err}",
            "message": "Error reading environment variables from file /etc/default/horizon. {Err}",
            "translation": "Error reading environment variables from file /etc/default/horizon. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get the absolute path for file ~/.hzn/hzn.json. {Err}",
            "message": "Failed to get the absolute path for file ~/.hzn/hzn.json. {Err}",
            "translation": "Failed to get the absolute path for file ~/.hzn/hzn.json. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting project level configuration file name. {Err}",
            "message": "Error getting project level configuration file name. {Err}",
            "translation": "Error getting project level configuration file name. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No project level configuration file found.",
            "message": "No project level configuration file found.",
            "translation": "No project level configuration file found.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[verbose] {M}",
            "message": "[verbose] {M}",
            "translation": "[verbose] {M}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "M",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "m"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error: {Msg}",
            "message": "Error: {Msg}",
            "translation": "Error: {Msg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: {Msg}",
            "message": "Warning: {Msg}",
            "translation": "Warning: {Msg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal bytes from {ErrMsg}: {Err}",
            "message": "failed to unmarshal bytes from {ErrMsg}: {Err}",
            "translation": "failed to unmarshal bytes from {ErrMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ErrMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "errMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal data type from {ErrMsg}: {Err}",
            "message": "failed to marshal data type from {ErrMsg}: {Err}",
            "translation": "failed to marshal data type from {ErrMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ErrMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "errMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem testing api key match: {Err}",
            "message": "problem testing api key match: {Err}",
            "translation": "problem testing api key match: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Using API key",
            "message": "Using API key",
            "translation": "Using API key",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to create docker client: {Err}",
            "message": "unable to create docker client: {Err}",
            "translation": "unable to create docker client: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "docker auth domainName: {DomainName}",
            "message": "docker auth domainName: {DomainName}",
            "translation": "docker auth domainName: {DomainName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DomainName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "domainName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to load docker credentials for {Domain}: {Err}",
            "message": "unable to load docker credentials for {Domain}: {Err}",
            "translation": "unable to load docker credentials for {Domain}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Domain",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "domain"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to find docker credentials for {Domain}",
            "message": "unable to find docker credentials for {Domain}",
            "translation": "unable to find docker credentials for {Domain}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Domain",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "domain"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pushing {ImageName}...",
            "message": "Pushing {ImageName}...",
            "translation": "Pushing {ImageName}...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ImageName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "imageName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not get docker credentials from ~/.docker/config.json: {Err}. Maybe you need to run 'docker login ...' to provide credentials for the image registry.",
            "message": "could not get docker credentials from ~/.docker/config.json: {Err}. Maybe you need to run 'docker login ...' to provide credentials for the image registry.",
            "translation": "could not get docker credentials from ~/.docker/config.json: {Err}. Maybe you need to run 'docker login ...' to provide credentials for the image registry.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to push docker image {Repository____tag}: {Err}",
            "message": "unable to push docker image {Repository____tag}: {Err}",
            "translation": "unable to push docker image {Repository____tag}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository____tag",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository + \":\" + tag"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pulling {ImageName}...",
            "message": "Pulling {ImageName}...",
            "translation": "Pulling {ImageName}...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ImageName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "imageName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to get docker auth for docker.io or {Domain} domain: {Err}",
            "message": "unable to get docker auth for docker.io or {Domain} domain: {Err}",
            "translation": "unable to get docker auth for docker.io or {Domain} domain: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Domain",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "domain"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to pull docker image {Repository____tag}. Docker credentials were not found. Maybe you need to run 'docker login ...' if the image registry is private. Error: {Err}: {LoginErr}",
            "message": "unable to pull docker image {Repository____tag}. Docker credentials were not found. Maybe you need to run 'docker login ...' if the image registry is private. Error: {Err}: {LoginErr}",
            "translation": "unable to pull docker image {Repository____tag}. Docker credentials were not found. Maybe you need to run 'docker login ...' if the image registry is private. Error: {Err}: {LoginErr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository____tag",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository + \":\" + tag"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                },
                {
                    "id": "LoginErr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "loginErr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to pull docker image {Repository____tag}: {Err}",
            "message": "unable to pull docker image {Repository____tag}: {Err}",
            "translation": "unable to pull docker image {Repository____tag}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository____tag",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository + \":\" + tag"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Could not find the image digest in the docker output, retrieving image digest directly from the image.",
            "message": "Could not find the image digest in the docker output, retrieving image digest directly from the image.",
            "translation": "Could not find the image digest in the docker output, retrieving image digest directly from the image.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "could not inspect image {ImageName}: {Err}.",
            "message": "could not inspect image {ImageName}: {Err}.",
            "translation": "could not inspect image {ImageName}: {Err}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ImageName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "imageName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not find digest for image {ImageName}.",
            "message": "could not find digest for image {ImageName}.",
            "translation": "could not find digest for image {ImageName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ImageName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "imageName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the id can not contain more than 1 '/'",
            "message": "the id can not contain more than 1 '/'",
            "translation": "the id can not contain more than 1 '/'",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "reading stdin failed: {Err}",
            "message": "reading stdin failed: {Err}",
            "translation": "reading stdin failed: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "reading {FilePath} failed: {Err}",
            "message": "reading {FilePath} failed: {Err}",
            "translation": "reading {FilePath} failed: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: environment variable '{EnvVarName}' is referenced in input file, but not defined in the environment.",
            "message": "Warning: environment variable '{EnvVarName}' is referenced in input file, but not defined in the environment.",
            "translation": "Warning: environment variable '{EnvVarName}' is referenced in input file, but not defined in the environment.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "EnvVarName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "envVarName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error reading input, error {Err}",
            "message": "Error reading input, error {Err}",
            "translation": "Error reading input, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Exiting.",
            "message": "Exiting.",
            "translation": "Exiting.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to get absolute path for file {KeyFile}. {Err}",
            "message": "Failed to get absolute path for file {KeyFile}. {Err}",
            "translation": "Failed to get absolute path for file {KeyFile}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error checking absolute path for file {KeyFile}. {Err}",
            "message": "Error checking absolute path for file {KeyFile}. {Err}",
            "translation": "Error checking absolute path for file {KeyFile}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error parsing HORIZON_URL: {Err}",
            "message": "Error parsing HORIZON_URL: {Err}",
            "translation": "Error parsing HORIZON_URL: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error parsing host of the HORIZON_URL: {Err}",
            "message": "Error parsing host of the HORIZON_URL: {Err}",
            "translation": "Error parsing host of the HORIZON_URL: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error parsing port of the HORIZON_URL: {Err}",
            "message": "Error parsing port of the HORIZON_URL: {Err}",
            "translation": "Error parsing port of the HORIZON_URL: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unexpected port of the HORIZON_URL: {PortInt}",
            "message": "Unexpected port of the HORIZON_URL: {PortInt}",
            "translation": "Unexpected port of the HORIZON_URL: {PortInt}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PortInt",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "portInt"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The agbot url: {EnvVar}",
            "message": "The agbot url: {EnvVar}",
            "translation": "The agbot url: {EnvVar}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "EnvVar",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "envVar"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error reading HTTP response, error {Err}",
            "message": "Error reading HTTP response, error {Err}",
            "translation": "Error reading HTTP response, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon REST API to run {ApiMethod}. Run '{StatusCommand}' to check if the Horizon agent is running. Or run '{StatusURL}' to check the Horizon agent status. Or set HORIZON_URL to connect to another local port that is connected to a remote Horizon agent via a ssh tunnel. Specific error is: {Err}",
            "message": "Can't connect to the Horizon REST API to run {ApiMethod}. Run '{StatusCommand}' to check if the Horizon agent is running. Or run '{StatusURL}' to check the Horizon agent status. Or set HORIZON_URL to connect to another local port that is connected to a remote Horizon agent via a ssh tunnel. Specific error is: {Err}",
            "translation": "Can't connect to the Horizon REST API to run {ApiMethod}. Run '{StatusCommand}' to check if the Horizon agent is running. Or run '{StatusURL}' to check the Horizon agent status. Or set HORIZON_URL to connect to another local port that is connected to a remote Horizon agent via a ssh tunnel. Specific error is: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMethod",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMethod"
                },
                {
                    "id": "StatusCommand",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "statusCommand"
                },
                {
                    "id": "StatusURL",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "statusURL"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon REST API to run {ApiMethod}. Maybe the ssh tunnel associated with that port is down? Or maybe the remote Horizon agent at the other end of that tunnel is down. Specific error is: {Err}",
            "message": "Can't connect to the Horizon REST API to run {ApiMethod}. Maybe the ssh tunnel associated with that port is down? Or maybe the remote Horizon agent at the other end of that tunnel is down. Specific error is: {Err}",
            "translation": "Can't connect to the Horizon REST API to run {ApiMethod}. Maybe the ssh tunnel associated with that port is down? Or maybe the remote Horizon agent at the other end of that tunnel is down. Specific error is: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMethod",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMethod"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{ApiMsg} new request failed: {Err}",
            "message": "{ApiMsg} new request failed: {Err}",
            "translation": "{ApiMsg} new request failed: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HTTP code: {HttpCode}",
            "message": "HTTP code: {HttpCode}",
            "translation": "HTTP code: {HttpCode}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Bad HTTP code from {ApiMsg}: {HttpCode}",
            "message": "Bad HTTP code from {ApiMsg}: {HttpCode}",
            "translation": "Bad HTTP code from {ApiMsg}: {HttpCode}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "HttpCode",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code from {ApiMsg}: {HttpCode}",
            "message": "bad HTTP code from {ApiMsg}: {HttpCode}",
            "translation": "bad HTTP code from {ApiMsg}: {HttpCode}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "HttpCode",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to read body response from {ApiMsg}: {Err}",
            "message": "Failed to read body response from {ApiMsg}: {Err}",
            "translation": "Failed to read body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to read body response from {ApiMsg}: {Err}",
            "message": "failed to read body response from {ApiMsg}: {Err}",
            "translation": "failed to read body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to unmarshal body response from {ApiMsg}: {Err}",
            "message": "Failed to unmarshal body response from {ApiMsg}: {Err}",
            "translation": "Failed to unmarshal body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal body response from {ApiMsg}: {Err}",
            "message": "failed to unmarshal body response from {ApiMsg}: {Err}",
            "translation": "failed to unmarshal body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}: {Body}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}: {Body}",
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}: {Body}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "Body",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "GetRespBodyAsString(resp.Body)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal body for {ApiMsg}: {Err}",
            "message": "failed to marshal body for {ApiMsg}: {Err}",
            "translation": "failed to marshal body for {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_AGBOT_URL is not defined",
            "message": "HZN_AGBOT_URL is not defined",
            "translation": "HZN_AGBOT_URL is not defined",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}, output: {StringbodyBytes}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}, output: {StringbodyBytes}",
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}, output: {StringbodyBytes}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "StringbodyBytes",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "string(bodyBytes)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal exchange body response from {ApiMsg}: {Err}",
            "message": "failed to unmarshal exchange body response from {ApiMsg}: {Err}",
            "translation": "failed to unmarshal exchange body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal exchange output from {ApiMsg}: {Err}",
            "message": "failed to marshal exchange output from {ApiMsg}: {Err}",
            "translation": "failed to marshal exchange output from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to unmarshal bytes. {Err}",
            "message": "Failed to unmarshal bytes. {Err}",
            "translation": "Failed to unmarshal bytes. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting {OldMgmtHubCertPath} from {ANAXOVERWRITEFILE}: {Err}",
            "message": "Error getting {OldMgmtHubCertPath} from {ANAXOVERWRITEFILE}: {Err}",
            "translation": "Error getting {OldMgmtHubCertPath} from {ANAXOVERWRITEFILE}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OldMgmtHubCertPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "config.OldMgmtHubCertPath"
                },
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "ANAX_OVERWRITE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Encountered error reading ICP cert file {IcpCertPath}: {Err}",
            "message": "Encountered error reading ICP cert file {IcpCertPath}: {Err}",
            "translation": "Encountered error reading ICP cert file {IcpCertPath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "IcpCertPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "icpCertPath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting HZN_EXCHANGE_URL from {ANAXOVERWRITEFILE}. {Err}",
            "message": "Error getting HZN_EXCHANGE_URL from {ANAXOVERWRITEFILE}. {Err}",
            "translation": "Error getting HZN_EXCHANGE_URL from {ANAXOVERWRITEFILE}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting ExchangeUrl from {ANAXCONFIGFILE}. {Err}",
            "message": "Error getting ExchangeUrl from {ANAXCONFIGFILE}. {Err}",
            "translation": "Error getting ExchangeUrl from {ANAXCONFIGFILE}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXCONFIGFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_CONFIG_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_EXCHANGE_URL is not set, get it from horizon agent configuration on the node.",
            "message": "HZN_EXCHANGE_URL is not set, get it from horizon agent configuration on the node.",
            "translation": "HZN_EXCHANGE_URL is not set, get it from horizon agent configuration on the node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Could not get the Exchange url from environment variable HZN_EXCHANGE_URL or the horizon agent",
            "message": "Could not get the Exchange url from environment variable HZN_EXCHANGE_URL or the horizon agent",
            "translation": "Could not get the Exchange url from environment variable HZN_EXCHANGE_URL or the horizon agent",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The exchange url: {ExchUrl}",
            "message": "The exchange url: {ExchUrl}",
            "translation": "The exchange url: {ExchUrl}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting HZN_FSS_CSSURL from {ANAXOVERWRITEFILE}. {Err}",
            "message": "Error getting HZN_FSS_CSSURL from {ANAXOVERWRITEFILE}. {Err}",
            "translation": "Error getting HZN_FSS_CSSURL from {ANAXOVERWRITEFILE}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting model management service Url from {ANAXCONFIGFILE}. {Err}",
            "message": "Error getting model management service Url from {ANAXCONFIGFILE}. {Err}",
            "translation": "Error getting model management service Url from {ANAXCONFIGFILE}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXCONFIGFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_CONFIG_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_FSS_CSSURL is not set, get it from horizon agent configuration on the node.",
            "message": "HZN_FSS_CSSURL is not set, get it from horizon agent configuration on the node.",
            "translation": "HZN_FSS_CSSURL is not set, get it from horizon agent configuration on the node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Could not get the model management service url from environment variable HZN_FSS_CSSURL or the horizon agent",
            "message": "Could not get the model management service url from environment variable HZN_FSS_CSSURL or the horizon agent",
            "translation": "Could not get the model management service url from environment variable HZN_FSS_CSSURL or the horizon agent",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The model management service url: {MmsUrl}",
            "message": "The model management service url: {MmsUrl}",
            "translation": "The model management service url: {MmsUrl}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MmsUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "mmsUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_SDO_SVC_URL is not set, get it from {ANAXOVERWRITEFILE}.",
            "message": "HZN_SDO_SVC_URL is not set, get it from {ANAXOVERWRITEFILE}.",
            "translation": "HZN_SDO_SVC_URL is not set, get it from {ANAXOVERWRITEFILE}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting HZN_SDO_SVC_URL from {ANAXOVERWRITEFILE}: {Err}",
            "message": "Error getting HZN_SDO_SVC_URL from {ANAXOVERWRITEFILE}: {Err}",
            "translation": "Error getting HZN_SDO_SVC_URL from {ANAXOVERWRITEFILE}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Could not get the HZN_SDO_SVC_URL value from the environment, {ANAXOVERWRITEFILE}, or one of the hzn.json files",
            "message": "Could not get the HZN_SDO_SVC_URL value from the environment, {ANAXOVERWRITEFILE}, or one of the hzn.json files",
            "translation": "Could not get the HZN_SDO_SVC_URL value from the environment, {ANAXOVERWRITEFILE}, or one of the hzn.json files",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The SDO service url: {SdoUrl}",
            "message": "The SDO service url: {SdoUrl}",
            "translation": "The SDO service url: {SdoUrl}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SdoUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sdoUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_FDO_SVC_URL is not set, get it from {ANAXOVERWRITEFILE}.",
            "message": "HZN_FDO_SVC_URL is not set, get it from {ANAXOVERWRITEFILE}.",
            "translation": "HZN_FDO_SVC_URL is not set, get it from {ANAXOVERWRITEFILE}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting HZN_FDO_SVC_URL from {ANAXOVERWRITEFILE}: {Err}",
            "message": "Error getting HZN_FDO_SVC_URL from {ANAXOVERWRITEFILE}: {Err}",
            "translation": "Error getting HZN_FDO_SVC_URL from {ANAXOVERWRITEFILE}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Could not get the HZN_FDO_SVC_URL value from the environment, {ANAXOVERWRITEFILE}, or one of the hzn.json files",
            "message": "Could not get the HZN_FDO_SVC_URL value from the environment, {ANAXOVERWRITEFILE}, or one of the hzn.json files",
            "translation": "Could not get the HZN_FDO_SVC_URL value from the environment, {ANAXOVERWRITEFILE}, or one of the hzn.json files",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The FDO service url: {FdoUrl}",
            "message": "The FDO service url: {FdoUrl}",
            "translation": "The FDO service url: {FdoUrl}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FdoUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fdoUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Set {ServiceEnvVarName} to use {Article} {HorizonService_1} other than the one the Horizon Agent is currently configured for. Specific error is: {Err}",
            "message": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Set {ServiceEnvVarName} to use {Article} {HorizonService_1} other than the one the Horizon Agent is currently configured for. Specific error is: {Err}",
            "translation": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Set {ServiceEnvVarName} to use {Article} {HorizonService_1} other than the one the Horizon Agent is currently configured for. Specific error is: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HorizonService",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "horizonService"
                },
                {
                    "id": "ApiMethod",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMethod"
                },
                {
                    "id": "ServiceEnvVarName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceEnvVarName"
                },
                {
                    "id": "Article",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "article"
                },
                {
                    "id": "HorizonService_1",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "horizonService"
                },
                {
                    "id": "Err",
                    "string": "%[6]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 6,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Maybe {ServiceEnvVarName} is set incorrectly? Or unset {ServiceEnvVarName_1} to use the {HorizonService_1} that the Horizon Agent is configured for. Specific error is: {Err}",
            "message": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Maybe {ServiceEnvVarName} is set incorrectly? Or unset {ServiceEnvVarName_1} to use the {HorizonService_1} that the Horizon Agent is configured for. Specific error is: {Err}",
            "translation": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Maybe {ServiceEnvVarName} is set incorrectly? Or unset {ServiceEnvVarName_1} to use the {HorizonService_1} that the Horizon Agent is configured for. Specific error is: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HorizonService",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "horizonService"
                },
                {
                    "id": "ApiMethod",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMethod"
                },
                {
                    "id": "ServiceEnvVarName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceEnvVarName"
                },
                {
                    "id": "ServiceEnvVarName_1",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "serviceEnvVarName"
                },
                {
                    "id": "HorizonService_1",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "horizonService"
                },
                {
                    "id": "Err",
                    "string": "%[6]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 6,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal exchange body for {ApiMsg}: {Err}",
            "message": "failed to marshal exchange body for {ApiMsg}: {Err}",
            "translation": "failed to marshal exchange body for {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get file info: {Err}",
            "message": "Failed to get file info: {Err}",
            "translation": "Failed to get file info: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Malformed URL: {UrlPath}. {ErrUrl}",
            "message": "Malformed URL: {UrlPath}. {ErrUrl}",
            "translation": "Malformed URL: {UrlPath}. {ErrUrl}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "UrlPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "urlPath"
                },
                {
                    "id": "ErrUrl",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "errUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to open object file {Name}: {Err}",
            "message": "unable to open object file {Name}: {Err}",
            "translation": "unable to open object file {Name}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "file.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}. Will retry.",
            "message": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}. Will retry.",
            "translation": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}. Will retry.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "apiMsg"
                },
                {
                    "id": "Httpstatus",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "http_status"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}.",
            "message": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}.",
            "translation": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "apiMsg"
                },
                {
                    "id": "Httpstatus",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "http_status"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to read exchange body response from {ApiMsg}: {Err}",
            "message": "failed to read exchange body response from {ApiMsg}: {Err}",
            "translation": "failed to read exchange body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}: {Code}, {Msg}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}: {Code}, {Msg}",
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}: {Code}, {Msg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "Code",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "respMsg.Code"
                },
                {
                    "id": "Msg",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "respMsg.Msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}",
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "exchange authentication must be specified with one of the following: the -u flag, the -n flag, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH",
            "message": "exchange authentication must be specified with one of the following: the -u flag, the -n flag, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH",
            "translation": "exchange authentication must be specified with one of the following: the -u flag, the -n flag, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "exchange authentication must be specified with one of the following: the -u flag, or HZN_EXCHANGE_USER_AUTH",
            "message": "exchange authentication must be specified with one of the following: the -u flag, or HZN_EXCHANGE_USER_AUTH",
            "translation": "exchange authentication must be specified with one of the following: the -u flag, or HZN_EXCHANGE_USER_AUTH",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Verifying public key file ...",
            "message": "Verifying public key file ...",
            "translation": "Verifying public key file ...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "provided public key is not valid; error: {Err}",
            "message": "provided public key is not valid; error: {Err}",
            "translation": "provided public key is not valid; error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Checking private key file format ...",
            "message": "Checking private key file format ...",
            "translation": "Checking private key file format ...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "provided private key {KeyFile} is not valid; error: {Err}",
            "message": "provided private key {KeyFile} is not valid; error: {Err}",
            "translation": "provided private key {KeyFile} is not valid; error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Err}. Please create the signing key.",
            "message": "{Err}. Please create the signing key.",
            "translation": "{Err}. Please create the signing key.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "private key could not be generated; error: {Err}",
            "message": "private key could not be generated; error: {Err}",
            "translation": "private key could not be generated; error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Arg_1}. Public key could not be generated.",
            "message": "{Arg_1}. Public key could not be generated.",
            "translation": "{Arg_1}. Public key could not be generated.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": "running: {CmdStr}",
            "message": "running: {CmdStr}",
            "translation": "running: {CmdStr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CmdStr",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cmdStr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "did not get a command object",
            "message": "did not get a command object",
            "translation": "did not get a command object",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Could not get Stdin pipe, error: {Err}",
            "message": "Could not get Stdin pipe, error: {Err}",
            "translation": "Could not get Stdin pipe, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not retrieve output from command, error: {Err}",
            "message": "could not retrieve output from command, error: {Err}",
            "translation": "could not retrieve output from command, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not retrieve stderr from command, error: {Err}",
            "message": "could not retrieve stderr from command, error: {Err}",
            "translation": "could not retrieve stderr from command, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to start command, error: {Err}",
            "message": "Unable to start command, error: {Err}",
            "translation": "Unable to start command, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to write to stdin of command, error: {Err}",
            "message": "Unable to write to stdin of command, error: {Err}",
            "translation": "Unable to write to stdin of command, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to close stdin, error: {Err}",
            "message": "Unable to close stdin, error: {Err}",
            "translation": "Unable to close stdin, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not read stdout, error: {Err}",
            "message": "could not read stdout, error: {Err}",
            "translation": "could not read stdout, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not read stderr, error: {Err}",
            "message": "could not read stderr, error: {Err}",
            "translation": "could not read stderr, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "command failed: {Err}, stderr: {StringstderrBytes}",
            "message": "command failed: {Err}, stderr: {StringstderrBytes}",
            "translation": "command failed: {Err}, stderr: {StringstderrBytes}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                },
                {
                    "id": "StringstderrBytes",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "string(stderrBytes)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to use {HTTPRequestTimeoutOverride} to set the request timeout, the value is not a valid number: {EnvTimeout}",
            "message": "Unable to use {HTTPRequestTimeoutOverride} to set the request timeout, the value is not a valid number: {EnvTimeout}",
            "translation": "Unable to use {HTTPRequestTimeoutOverride} to set the request timeout, the value is not a valid number: {EnvTimeout}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HTTPRequestTimeoutOverride",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "config.HTTPRequestTimeoutOverride"
                },
                {
                    "id": "EnvTimeout",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "envTimeout"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HTTP request timeout set to {RequestTimeout} seconds",
            "message": "HTTP request timeout set to {RequestTimeout} seconds",
            "translation": "HTTP request timeout set to {RequestTimeout} seconds",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RequestTimeout",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "requestTimeout"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error converting environmental variable HZN_HTTP_RETRIES {MaxRetriess} to integer. {Err1}",
            "message": "Error converting environmental variable HZN_HTTP_RETRIES {MaxRetriess} to integer. {Err1}",
            "translation": "Error converting environmental variable HZN_HTTP_RETRIES {MaxRetriess} to integer. {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MaxRetriess",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "maxRetries_s"
                },
                {
                    "id": "Err1",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error converting environmental variable HZN_HTTP_RETRY_INTERVAL {RetryIntervals} to integer. {Err1}",
            "message": "Error converting environmental variable HZN_HTTP_RETRY_INTERVAL {RetryIntervals} to integer. {Err1}",
            "translation": "Error converting environmental variable HZN_HTTP_RETRY_INTERVAL {RetryIntervals} to integer. {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RetryIntervals",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "retryInterval_s"
                },
                {
                    "id": "Err1",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "File {FileName} already exists. Please specify a different file path or file name. To overwrite the existing file, use the '--overwrite' flag.",
            "message": "File {FileName} already exists. Please specify a different file path or file name. To overwrite the existing file, use the '--overwrite' flag.",
            "translation": "File {FileName} already exists. Please specify a different file path or file name. To overwrite the existing file, use the '--overwrite' flag.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to save data for object '{DefaultFileName}' to file {FileName}, err: {Err}",
            "message": "Failed to save data for object '{DefaultFileName}' to file {FileName}, err: {Err}",
            "translation": "Failed to save data for object '{DefaultFileName}' to file {FileName}, err: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DefaultFileName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "defaultFileName"
                },
                {
                    "id": "FileName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Image} parsed into: domain={Domain}, path={Path}, tag={Tag}",
            "message": "{Image} parsed into: domain={Domain}, path={Path}, tag={Tag}",
            "translation": "{Image} parsed into: domain={Domain}, path={Path}, tag={Tag}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Image",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "image"
                },
                {
                    "id": "Domain",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "domain"
                },
                {
                    "id": "Path",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "path"
                },
                {
                    "id": "Tag",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "tag"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: could not parse image path '{Image}'. Not pushing it to a docker registry, just including it in the 'deployment' field as-is.",
            "message": "Warning: could not parse image path '{Image}'. Not pushing it to a docker registry, just including it in the 'deployment' field as-is.",
            "translation": "Warning: could not parse image path '{Image}'. Not pushing it to a docker registry, just including it in the 'deployment' field as-is.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Image",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "image"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Docker pull failure: {Err}",
            "message": "Docker pull failure: {Err}",
            "translation": "Docker pull failure: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Provided log-driver ({LogDriver}) does not support logs viewing. Logs are only available on the following drivers: {DockerDriversWithLoggingSupport}",
            "message": "Provided log-driver ({LogDriver}) does not support logs viewing. Logs are only available on the following drivers: {DockerDriversWithLoggingSupport}",
            "translation": "Provided log-driver ({LogDriver}) does not support logs viewing. Logs are only available on the following drivers: {DockerDriversWithLoggingSupport}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "LogDriver",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "logDriver"
                },
                {
                    "id": "DockerDriversWithLoggingSupport",
                    "string": "%[2]v",
                    "type": "[]string",
                    "underlyingType": "[]string",
                    "argNum": 2,
                    "expr": "dockerDriversWithLoggingSupport"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Problem validating org name: {Err}",
            "message": "Problem validating org name: {Err}",
            "translation": "Problem validating org name: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error creating StdoutPipe for command: {Err}",
            "message": "Error creating StdoutPipe for command: {Err}",
            "translation": "Error creating StdoutPipe for command: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error starting command: {Err}",
            "message": "Error starting command: {Err}",
            "translation": "Error starting command: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error waiting for command: {Err}",
            "message": "Error waiting for command: {Err}",
            "translation": "Error waiting for command: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{SysLogPath} could not be opened or does not exist: {Err}",
            "message": "{SysLogPath} could not be opened or does not exist: {Err}",
            "translation": "{SysLogPath} could not be opened or does not exist: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SysLogPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sysLogPath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{SysLogPath} could not get stats: {Err}",
            "message": "{SysLogPath} could not get stats: {Err}",
            "translation": "{SysLogPath} could not get stats: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SysLogPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sysLogPath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error reading from {SysLogPath}: {Err}",
            "message": "Error reading from {SysLogPath}: {Err}",
            "translation": "Error reading from {SysLogPath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SysLogPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sysLogPath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to state {SysLogPath}: {Err}",
            "message": "Unable to state {SysLogPath}: {Err}",
            "translation": "Unable to state {SysLogPath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SysLogPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sysLogPath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Neither node id nor node policy is specified. Getting node policy from the local node.",
            "message": "Neither node id nor node policy is specified. Getting node policy from the local node.",
            "translation": "Neither node id nor node policy is specified. Getting node policy from the local node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Neither node id nor node user input file is specified. Getting node user input from the local node.",
            "message": "Neither node id nor node user input file is specified. Getting node user input from the local node.",
            "translation": "Neither node id nor node user input file is specified. Getting node user input from the local node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "No node type has been provided: node type of '{NodeId}' node will be used",
            "message": "No node type has been provided: node type of '{NodeId}' node will be used",
            "translation": "No node type has been provided: node type of '{NodeId}' node will be used",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compCheckInput.NodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Using compatibility checking input: {CompCheckInput}",
            "message": "Using compatibility checking input: {CompCheckInput}",
            "translation": "Using compatibility checking input: {CompCheckInput}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompCheckInput",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/compcheck.CompCheck",
                    "underlyingType": "struct{NodeId string \"json:\\\"node_id,omitempty\\\"\"; NodeArch string \"json:\\\"node_arch,omitempty\\\"\"; NodeType string \"json:\\\"node_type,omitempty\\\"\"; NodeClusterNS string \"json:\\\"node_cluster_namespace,omitempty\\\"\"; NodeNamespaceScoped bool \"json:\\\"node_namespace_scoped,omitempty\\\"\"; NodeOrg string \"json:\\\"node_org,omitempty\\\"\"; NodePolicy *github.com/open-horizon/anax/exchangecommon.NodePolicy \"json:\\\"node_policy,omitempty\\\"\"; NodeUserInput []github.com/open-horizon/anax/policy.UserInput \"json:\\\"node_user_input,omitempty\\\"\"; BusinessPolId string \"json:\\\"business_policy_id,omitempty\\\"\"; BusinessPolicy *github.com/open-horizon/anax/businesspolicy.BusinessPolicy \"json:\\\"business_policy,omitempty\\\"\"; PatternId string \"json:\\\"pattern_id,omitempty\\\"\"; Pattern github.com/open-horizon/anax/common.AbstractPatternFile \"json:\\\"pattern,omitempty\\\"\"; ServicePolicy *github.com/open-horizon/anax/externalpolicy.ExternalPolicy \"json:\\\"service_policy,omitempty\\\"\"; Service []github.com/open-horizon/anax/common.AbstractServiceFile \"json:\\\"service,omitempty\\\"\"}",
                    "argNum": 1,
                    "expr": "compCheckInput"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn deploycheck all' output: {Err}",
            "message": "failed to marshal 'hzn deploycheck all' output: {Err}",
            "translation": "failed to marshal 'hzn deploycheck all' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "-s can only be specified when the node type sepcified by -t is 'cluster'.",
            "message": "-s can only be specified when the node type sepcified by -t is 'cluster'.",
            "translation": "-s can only be specified when the node type sepcified by -t is 'cluster'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Please specify either deployment policy or pattern.",
            "message": "Please specify either deployment policy or pattern.",
            "translation": "Please specify either deployment policy or pattern.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "One of these flags must be specified: -b, -B, -p, or -P.",
            "message": "One of these flags must be specified: -b, -B, -p, or -P.",
            "translation": "One of these flags must be specified: -b, -B, -p, or -P.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "-n and --ha-group are mutually exclusive.",
            "message": "-n and --ha-group are mutually exclusive.",
            "translation": "-n and --ha-group are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "--ha-group and --node-pol are mutually exclusive.",
            "message": "--ha-group and --node-pol are mutually exclusive.",
            "translation": "--ha-group and --node-pol are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "--ha-group and --node-ui are mutually exclusive.",
            "message": "--ha-group and --node-ui are mutually exclusive.",
            "translation": "--ha-group and --node-ui are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The HA group {HaGroupName} does not have members.",
            "message": "The HA group {HaGroupName} does not have members.",
            "translation": "The HA group {HaGroupName} does not have members.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "-n and --node-pol are mutually exclusive.",
            "message": "-n and --node-pol are mutually exclusive.",
            "translation": "-n and --node-pol are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "-n and --node-ui are mutually exclusive.",
            "message": "-n and --node-ui are mutually exclusive.",
            "translation": "-n and --node-ui are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "-b and -B are mutually exclusive.",
            "message": "-b and -B are mutually exclusive.",
            "translation": "-b and -B are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "-p and -P are mutually exclusive.",
            "message": "-p and -P are mutually exclusive.",
            "translation": "-p and -P are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cannot use the local node because it is not registered.",
            "message": "Cannot use the local node because it is not registered.",
            "translation": "Cannot use the local node because it is not registered.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node architecture {InputArch} specified by -a does not match the architecture of the local node {Arch}.",
            "message": "The node architecture {InputArch} specified by -a does not match the architecture of the local node {Arch}.",
            "translation": "The node architecture {InputArch} specified by -a does not match the architecture of the local node {Arch}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "InputArch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "inputArch"
                },
                {
                    "id": "Arch",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "arch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The node type {InputType} specified by -t does not match the type of the local node {NodeType}.",
            "message": "The node type {InputType} specified by -t does not match the type of the local node {NodeType}.",
            "translation": "The node type {InputType} specified by -t does not match the type of the local node {NodeType}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "InputType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "inputType"
                },
                {
                    "id": "NodeType",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The node cluster namespace {InputNamespace} specified by -s does not match the cluster namespace of the local node {Namespace}.",
            "message": "The node cluster namespace {InputNamespace} specified by -s does not match the cluster namespace of the local node {Namespace}.",
            "translation": "The node cluster namespace {InputNamespace} specified by -s does not match the cluster namespace of the local node {Namespace}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "InputNamespace",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "inputNamespace"
                },
                {
                    "id": "Namespace",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "namespace"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The node is-namespace-scoped {InputIsNamespaceScoped} specified by --is-namespace-scoped does not match the agent scope of local node {IsNamespaceScoped}.",
            "message": "The node is-namespace-scoped {InputIsNamespaceScoped} specified by --is-namespace-scoped does not match the agent scope of local node {IsNamespaceScoped}.",
            "translation": "The node is-namespace-scoped {InputIsNamespaceScoped} specified by --is-namespace-scoped does not match the agent scope of local node {IsNamespaceScoped}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "InputIsNamespaceScoped",
                    "string": "%[1]v",
                    "type": "bool",
                    "underlyingType": "bool",
                    "argNum": 1,
                    "expr": "inputIsNamespaceScoped"
                },
                {
                    "id": "IsNamespaceScoped",
                    "string": "%[2]v",
                    "type": "bool",
                    "underlyingType": "bool",
                    "argNum": 2,
                    "expr": "isNamespaceScoped"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The node organization {InputType} specified by -O does not match the organization of the local node {NodeOrg}.",
            "message": "The node organization {InputType} specified by -O does not match the organization of the local node {NodeOrg}.",
            "translation": "The node organization {InputType} specified by -O does not match the organization of the local node {NodeOrg}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "InputType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "inputType"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal deployment policy json input file {BusinessPolFile}: {Err}",
            "message": "failed to unmarshal deployment policy json input file {BusinessPolFile}: {Err}",
            "translation": "failed to unmarshal deployment policy json input file {BusinessPolFile}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BusinessPolFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "businessPolFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deployment policy not found for {PolOrg}/{PolId}",
            "message": "Deployment policy not found for {PolOrg}/{PolId}",
            "translation": "Deployment policy not found for {PolOrg}/{PolId}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "PolId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "polId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Wrong node type specified: {NodeType}. It must be 'device' or 'cluster'.",
            "message": "Wrong node type specified: {NodeType}. It must be 'device' or 'cluster'.",
            "translation": "Wrong node type specified: {NodeType}. It must be 'device' or 'cluster'.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HA group {HaGroupName} does not exist in org {HaGroupOrg}.",
            "message": "HA group {HaGroupName} does not exist in org {HaGroupOrg}.",
            "translation": "HA group {HaGroupName} does not exist in org {HaGroupOrg}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupName"
                },
                {
                    "id": "HaGroupOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal json input file {FilePath}: {Err}",
            "message": "failed to unmarshal json input file {FilePath}: {Err}",
            "translation": "failed to unmarshal json input file {FilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn deploycheck policy' output: {Err}",
            "message": "failed to marshal 'hzn deploycheck policy' output: {Err}",
            "translation": "failed to marshal 'hzn deploycheck policy' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Either -b or -B must be specified.",
            "message": "Either -b or -B must be specified.",
            "translation": "Either -b or -B must be specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "-b and --service are mutually exclusive.",
            "message": "-b and --service are mutually exclusive.",
            "translation": "-b and --service are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Please specify the Exchange credential with -u for querying the node, deployment policy, service and service policy.",
            "message": "Please specify the Exchange credential with -u for querying the node, deployment policy, service and service policy.",
            "translation": "Please specify the Exchange credential with -u for querying the node, deployment policy, service and service policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Please specify the organization with -o for the Exchange credentials: {CredToUse}.",
            "message": "Please specify the organization with -o for the Exchange credentials: {CredToUse}.",
            "translation": "Please specify the organization with -o for the Exchange credentials: {CredToUse}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CredToUse",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "credToUse"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node architecture, organization or type is not specified and node ID is not specified. Getting the node information from the local node.",
            "message": "Node architecture, organization or type is not specified and node ID is not specified. Getting the node information from the local node.",
            "translation": "Node architecture, organization or type is not specified and node ID is not specified. Getting the node information from the local node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn deploycheck secretbinding' output: {Err}",
            "message": "failed to marshal 'hzn deploycheck secretbinding' output: {Err}",
            "translation": "failed to marshal 'hzn deploycheck secretbinding' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error unmarshaling service json file {FilePath}: {Err}",
            "message": "Error unmarshaling service json file {FilePath}: {Err}",
            "translation": "Error unmarshaling service json file {FilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error unmarshaling userInput json file: {Err}",
            "message": "Error unmarshaling userInput json file: {Err}",
            "translation": "Error unmarshaling userInput json file: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn deploycheck userinput' output: {Err}",
            "message": "failed to marshal 'hzn deploycheck userinput' output: {Err}",
            "translation": "failed to marshal 'hzn deploycheck userinput' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "URL must be specified in the service definition.",
            "message": "URL must be specified in the service definition.",
            "translation": "URL must be specified in the service definition.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Version must be specified in the service definition.",
            "message": "Version must be specified in the service definition.",
            "translation": "Version must be specified in the service definition.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid version format: {Version}.",
            "message": "Invalid version format: {Version}.",
            "translation": "Invalid version format: {Version}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "service.GetVersion()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Arch must be specified in the service definition.",
            "message": "Arch must be specified in the service definition.",
            "translation": "Arch must be specified in the service definition.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error in service file {Sfile}. {Err}",
            "message": "Error in service file {Sfile}. {Err}",
            "translation": "Error in service file {Sfile}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Sfile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "s_file"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal pattern json input file {PatternFile}: {Err}",
            "message": "failed to unmarshal pattern json input file {PatternFile}: {Err}",
            "translation": "failed to unmarshal pattern json input file {PatternFile}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatternFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patternFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pattern not found for {PatOrg}/{PatId}",
            "message": "Pattern not found for {PatOrg}/{PatId}",
            "translation": "Pattern not found for {PatOrg}/{PatId}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patOrg"
                },
                {
                    "id": "PatId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The service {Org}/{URL} {Arch} {Version} specified in file {SvcDefFilesi} does not match the pattern requirement.",
            "message": "The service {Org}/{URL} {Arch} {Version} specified in file {SvcDefFilesi} does not match the pattern requirement.",
            "translation": "The service {Org}/{URL} {Arch} {Version} specified in file {SvcDefFilesi} does not match the pattern requirement.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sdef.GetOrg()"
                },
                {
                    "id": "URL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sdef.GetURL()"
                },
                {
                    "id": "Arch",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "sdef.GetArch()"
                },
                {
                    "id": "Version",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "sdef.GetVersion()"
                },
                {
                    "id": "SvcDefFilesi",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "svcDefFiles[i]"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The service {Org}/{URL} {Arch} {Version} specified in file {SvcDefFilesi} does not match the deployment policy requirement.",
            "message": "The service {Org}/{URL} {Arch} {Version} specified in file {SvcDefFilesi} does not match the deployment policy requirement.",
            "translation": "The service {Org}/{URL} {Arch} {Version} specified in file {SvcDefFilesi} does not match the deployment policy requirement.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sdef.GetOrg()"
                },
                {
                    "id": "URL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sdef.GetURL()"
                },
                {
                    "id": "Arch",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "sdef.GetArch()"
                },
                {
                    "id": "Version",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "sdef.GetVersion()"
                },
                {
                    "id": "SvcDefFilesi",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "svcDefFiles[i]"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "New dependency created: {Target} .",
            "message": "New dependency created: {Target} .",
            "translation": "New dependency created: {Target} .",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Target",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "target"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{DEPENDENCYCOMMAND} {DEPENDENCYLISTCOMMAND}' unable to create json object from dependencies, {Err}",
            "message": "'{DEPENDENCYCOMMAND} {DEPENDENCYLISTCOMMAND}' unable to create json object from dependencies, {Err}",
            "translation": "'{DEPENDENCYCOMMAND} {DEPENDENCYLISTCOMMAND}' unable to create json object from dependencies, {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEPENDENCYCOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEPENDENCY_COMMAND"
                },
                {
                    "id": "DEPENDENCYLISTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "DEPENDENCY_LIST_COMMAND"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
            "message": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
            "translation": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to restore env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
            "message": "Unable to restore env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
            "translation": "Unable to restore env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to get list of dependency files in {DepPath}, error: {Err}",
            "message": "unable to get list of dependency files in {DepPath}, error: {Err}",
            "translation": "unable to get list of dependency files in {DepPath}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DepPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "depPath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not create dependency directory {NewDir}, error: {Err}",
            "message": "could not create dependency directory {NewDir}, error: {Err}",
            "translation": "could not create dependency directory {NewDir}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NewDir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "newDir"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "dependency validation failed, unable to read {Name}, error: {Err}",
            "message": "dependency validation failed, unable to read {Name}, error: {Err}",
            "translation": "dependency validation failed, unable to read {Name}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileInfo.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "dependency validation failed, dependency {Name} has an invalid version {Version}, error: {Err}",
            "message": "dependency validation failed, dependency {Name} has an invalid version {Version}, error: {Err}",
            "translation": "dependency validation failed, dependency {Name} has an invalid version {Version}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileInfo.Name()"
                },
                {
                    "id": "Version",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "rs.Version"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "dependency validation failed, unable to verify version range {Version} is within required range {Expression}, error: {Err}",
            "message": "dependency validation failed, unable to verify version range {Version} is within required range {Expression}, error: {Err}",
            "translation": "dependency validation failed, unable to verify version range {Version} is within required range {Expression}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dDef.Version"
                },
                {
                    "id": "Expression",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "vRange.Get_expression()"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "dependency {URL} at version {VersionRange} does not exist in {Joindirectory_DEFAULTDEPENDENCYDIR}.",
            "message": "dependency {URL} at version {VersionRange} does not exist in {Joindirectory_DEFAULTDEPENDENCYDIR}.",
            "translation": "dependency {URL} at version {VersionRange} does not exist in {Joindirectory_DEFAULTDEPENDENCYDIR}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "rs.URL"
                },
                {
                    "id": "VersionRange",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "rs.VersionRange"
                },
                {
                    "id": "Joindirectory_DEFAULTDEPENDENCYDIR",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "path.Join(directory, DEFAULT_DEPENDENCY_DIR)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "dependency {Name} did not validate, error: {Err}",
            "message": "dependency {Name} did not validate, error: {Err}",
            "translation": "dependency {Name} did not validate, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileInfo.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "variable {Name} has no default and must be specified in {UserInputsFilePath}",
            "message": "variable {Name} has no default and must be specified in {UserInputsFilePath}",
            "translation": "variable {Name} has no default and must be specified in {UserInputsFilePath}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ui.Name"
                },
                {
                    "id": "UserInputsFilePath",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "userInputsFilePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "--specRef is mutually exclusive with --url.",
            "message": "--specRef is mutually exclusive with --url.",
            "translation": "--specRef is mutually exclusive with --url.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "--project is mutually exclusive with --specRef, --org and --url.",
            "message": "--project is mutually exclusive with --specRef, --org and --url.",
            "translation": "--project is mutually exclusive with --specRef, --org and --url.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "one of --project, or --specRef and --org, or --url and --org must be specified.",
            "message": "one of --project, or --specRef and --org, or --url and --org must be specified.",
            "translation": "one of --project, or --specRef and --org, or --url and --org must be specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "either --specRef and --org, or --url and --org must be specified.",
            "message": "either --specRef and --org, or --url and --org must be specified.",
            "translation": "either --specRef and --org, or --url and --org must be specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "use --url with service projects.",
            "message": "use --url with service projects.",
            "translation": "use --url with service projects.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "--project {Project} does not contain Horizon service metadata.",
            "message": "--project {Project} does not contain Horizon service metadata.",
            "translation": "--project {Project} does not contain Horizon service metadata.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Project",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "project"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Reading Horizon metadata from {Dir}",
            "message": "Reading Horizon metadata from {Dir}",
            "translation": "Reading Horizon metadata from {Dir}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "--specRef or --url is required for remove.",
            "message": "--specRef or --url is required for remove.",
            "translation": "--specRef or --url is required for remove.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "--specRef and --url are mutually exclusive.",
            "message": "--specRef and --url are mutually exclusive.",
            "translation": "--specRef and --url are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Service project {Dir} verified.",
            "message": "Service project {Dir} verified.",
            "translation": "Service project {Dir} verified.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS' to zero, error {Err}",
            "message": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS' to zero, error {Err}",
            "translation": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS' to zero, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get the hzn.json configuration file under {Project} directory. Error: {Err}",
            "message": "Failed to get the hzn.json configuration file under {Project} directory. Error: {Err}",
            "translation": "Failed to get the hzn.json configuration file under {Project} directory. Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Project",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "project"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to set the environment variables from configuration file {Projconfigfile}. Error: {Err}",
            "message": "Failed to set the environment variables from configuration file {Projconfigfile}. Error: {Err}",
            "translation": "Failed to set the environment variables from configuration file {Projconfigfile}. Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Projconfigfile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "proj_config_file"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Reading Horizon metadata from dependency: {AbsProject}",
            "message": "Reading Horizon metadata from dependency: {AbsProject}",
            "translation": "Reading Horizon metadata from dependency: {AbsProject}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AbsProject",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "absProject"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Found dependency {URL}, Org: {Org}",
            "message": "Found dependency {URL}, Org: {Org}",
            "translation": "Found dependency {URL}, Org: {Org}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sDef.GetURL()"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sDef.GetOrg()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to restore the environment variables. {Err}",
            "message": "Failed to restore the environment variables. {Err}",
            "translation": "Failed to restore the environment variables. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable and global attribute configuration.",
            "message": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable and global attribute configuration.",
            "translation": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable and global attribute configuration.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "USERINPUTFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "USERINPUT_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "To ensure that the dependency operates correctly, please add variable values to the userinput.json file if this service needs any.",
            "message": "To ensure that the dependency operates correctly, please add variable values to the userinput.json file if this service needs any.",
            "translation": "To ensure that the dependency operates correctly, please add variable values to the userinput.json file if this service needs any.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The current project already has userinputs defined for this dependency.",
            "message": "The current project already has userinputs defined for this dependency.",
            "translation": "The current project already has userinputs defined for this dependency.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable configuration.",
            "message": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable configuration.",
            "translation": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable configuration.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "USERINPUTFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "USERINPUT_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "no service definition config file found in project",
            "message": "no service definition config file found in project",
            "translation": "no service definition config file found in project",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "no dependency directory found in project",
            "message": "no dependency directory found in project",
            "translation": "no dependency directory found in project",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Created {FilePath}/{FileName} as a new dependency.",
            "message": "Created {FilePath}/{FileName} as a new dependency.",
            "translation": "Created {FilePath}/{FileName} as a new dependency.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "FileName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to find highest version of {Surl} {Org} in the Exchange: {Services}",
            "message": "unable to find highest version of {Surl} {Org} in the Exchange: {Services}",
            "translation": "unable to find highest version of {Surl} {Org} in the Exchange: {Services}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Surl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "surl"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                },
                {
                    "id": "Services",
                    "string": "%[3]v",
                    "type": "map[string]github.com/open-horizon/anax/exchange.ServiceDefinition",
                    "underlyingType": "map[string]github.com/open-horizon/anax/exchange.ServiceDefinition",
                    "argNum": 3,
                    "expr": "resp.Services"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "no services found in the Exchange.",
            "message": "no services found in the Exchange.",
            "translation": "no services found in the Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Creating dependency on: {ServiceDef}, Org: {Org}",
            "message": "Creating dependency on: {ServiceDef}, Org: {Org}",
            "translation": "Creating dependency on: {ServiceDef}, Org: {Org}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceDef",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/exchange.ServiceDefinition",
                    "underlyingType": "struct{Owner string \"json:\\\"owner,omitempty\\\"\"; Label string \"json:\\\"label\\\"\"; Description string \"json:\\\"description\\\"\"; Documentation string \"json:\\\"documentation\\\"\"; Public bool \"json:\\\"public\\\"\"; URL string \"json:\\\"url\\\"\"; Version string \"json:\\\"version\\\"\"; Arch string \"json:\\\"arch\\\"\"; Sharable string \"json:\\\"sharable\\\"\"; MatchHardware github.com/open-horizon/anax/exchange.HardwareRequirement \"json:\\\"matchHardware\\\"\"; RequiredServices []github.com/open-horizon/anax/exchangecommon.ServiceDependency \"json:\\\"requiredServices\\\"\"; UserInputs []github.com/open-horizon/anax/exchangecommon.UserInput \"json:\\\"userInput\\\"\"; Deployment string \"json:\\\"deployment\\\"\"; DeploymentSignature string \"json:\\\"deploymentSignature\\\"\"; ClusterDeployment string \"json:\\\"clusterDeployment\\\"\"; ClusterDeploymentSignature string \"json:\\\"clusterDeploymentSignature\\\"\"; LastUpdated string \"json:\\\"lastUpdated,omitempty\\\"\"}",
                    "argNum": 1,
                    "expr": "serviceDef"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal deployment {Deployment}: {Err}",
            "message": "failed to unmarshal deployment {Deployment}: {Err}",
            "translation": "failed to unmarshal deployment {Deployment}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Deployment",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceDef.Deployment"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The image docker auths for the service {Org}/{Surl} are: {Imgauths}",
            "message": "The image docker auths for the service {Org}/{Surl} are: {Imgauths}",
            "translation": "The image docker auths for the service {Org}/{Surl} are: {Imgauths}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Surl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "surl"
                },
                {
                    "id": "Imgauths",
                    "string": "%[3]v",
                    "type": "[]github.com/open-horizon/anax/events.ImageDockerAuth",
                    "underlyingType": "[]github.com/open-horizon/anax/events.ImageDockerAuth",
                    "argNum": 3,
                    "expr": "img_auths"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to get images for {Org}/{Surl}: {Err}",
            "message": "failed to get images for {Org}/{Surl}: {Err}",
            "translation": "failed to get images for {Org}/{Surl}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Surl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "surl"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to get dependency info for {Sp} , error {Err}",
            "message": "Unable to get dependency info for {Sp} , error {Err}",
            "translation": "Unable to get dependency info for {Sp} , error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Sp",
                    "string": "%[1]v",
                    "type": "*github.com/open-horizon/anax/cli/dev.ServiceSpec",
                    "underlyingType": "*github.com/open-horizon/anax/cli/dev.ServiceSpec",
                    "argNum": 1,
                    "expr": "sp"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'dependency {DEPENDENCYREMOVECOMMAND}' failed to get a list of dependecies. Error {Err}",
            "message": "'dependency {DEPENDENCYREMOVECOMMAND}' failed to get a list of dependecies. Error {Err}",
            "translation": "'dependency {DEPENDENCYREMOVECOMMAND}' failed to get a list of dependecies. Error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEPENDENCYREMOVECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEPENDENCY_REMOVE_COMMAND"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "All dependencies are: {Deps}",
            "message": "All dependencies are: {Deps}",
            "translation": "All dependencies are: {Deps}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Deps",
                    "string": "%[1]v",
                    "type": "[]*github.com/open-horizon/anax/cli/dev.ServiceDependency",
                    "underlyingType": "[]*github.com/open-horizon/anax/cli/dev.ServiceDependency",
                    "argNum": 1,
                    "expr": "deps"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Found dependency: {Name}",
            "message": "Found dependency: {Name}",
            "translation": "Found dependency: {Name}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dep.FileInfo.Name()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Will not remove dependency {Name} because it is referenced by other services.",
            "message": "Will not remove dependency {Name} because it is referenced by other services.",
            "translation": "Will not remove dependency {Name} because it is referenced by other services.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dep.FileInfo.Name()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'dependency {DEPENDENCYREMOVECOMMAND}' dependency not found.",
            "message": "'dependency {DEPENDENCYREMOVECOMMAND}' dependency not found.",
            "translation": "'dependency {DEPENDENCYREMOVECOMMAND}' dependency not found.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEPENDENCYREMOVECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEPENDENCY_REMOVE_COMMAND"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Could not read the dependency file {Name}. Error: {Err}",
            "message": "Could not read the dependency file {Name}. Error: {Err}",
            "translation": "Could not read the dependency file {Name}. Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sd.FileInfo.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error updating project definition: {Err}",
            "message": "Error updating project definition: {Err}",
            "translation": "Error updating project definition: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Dependency {Name} could not be removed. Error: {Err}",
            "message": "Dependency {Name} could not be removed. Error: {Err}",
            "translation": "Dependency {Name} could not be removed. Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sd.FileInfo.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error updating userinputs: {Err}",
            "message": "Error updating userinputs: {Err}",
            "translation": "Error updating userinputs: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removed dependency {Arch}.",
            "message": "Removed dependency {Arch}.",
            "translation": "Removed dependency {Arch}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "createLogMessage(sd.Service.SpecRef, \"\", sd.Service.Org, sd.Service.Version, sd.Service.Arch)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removed dependency's dependency {Arch}.",
            "message": "Removed dependency's dependency {Arch}.",
            "translation": "Removed dependency's dependency {Arch}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "createLogMessage(sd.Service.SpecRef, \"\", sd.Service.Org, sd.Service.Version, sd.Service.Arch)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error creating {DOCKERFILE} for service image. {Err}",
            "message": "error creating {DOCKERFILE} for service image. {Err}",
            "translation": "error creating {DOCKERFILE} for service image. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DOCKERFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DOCKER_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Edge $SERVICE_NAME Service Pattern for $ARCH",
            "message": "Edge $SERVICE_NAME Service Pattern for $ARCH",
            "translation": "Edge $SERVICE_NAME Service Pattern for $ARCH",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pattern for $SERVICE_NAME for $ARCH",
            "message": "Pattern for $SERVICE_NAME for $ARCH",
            "translation": "Pattern for $SERVICE_NAME for $ARCH",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Edge $SERVICE_NAME Service Pattern for all architectures",
            "message": "Edge $SERVICE_NAME Service Pattern for all architectures",
            "translation": "Edge $SERVICE_NAME Service Pattern for all architectures",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pattern for $SERVICE_NAME",
            "message": "Pattern for $SERVICE_NAME",
            "translation": "Pattern for $SERVICE_NAME",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Warning: Failed to convert file name {SvcPath} to absolute path. {Err}",
            "message": "Warning: Failed to convert file name {SvcPath} to absolute path. {Err}",
            "translation": "Warning: Failed to convert file name {SvcPath} to absolute path. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcPath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: Secret {SecName} for service {SvcName} not specified with {SERVICESTARTCOMMAND} command.",
            "message": "Warning: Secret {SecName} for service {SvcName} not specified with {SERVICESTARTCOMMAND} command.",
            "translation": "Warning: Secret {SecName} for service {SvcName} not specified with {SERVICESTARTCOMMAND} command.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secName"
                },
                {
                    "id": "SvcName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svcName"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "SERVICE_START_COMMAND"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICECREATIONCOMMAND}' Failed to get the service name from the image name. {Err}",
            "message": "'{SERVICECOMMAND} {SERVICECREATIONCOMMAND}' Failed to get the service name from the image name. {Err}",
            "translation": "'{SERVICECOMMAND} {SERVICECREATIONCOMMAND}' Failed to get the service name from the image name. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "SERVICE_COMMAND"
                },
                {
                    "id": "SERVICECREATIONCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_CREATION_COMMAND"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating config file for environmental variables: {Dir}/{HZNENVFILE}",
            "message": "Creating config file for environmental variables: {Dir}/{HZNENVFILE}",
            "translation": "Creating config file for environmental variables: {Dir}/{HZNENVFILE}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "HZNENVFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "HZNENV_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating user input file: {Dir}/{USERINPUTFILE}",
            "message": "Creating user input file: {Dir}/{USERINPUTFILE}",
            "translation": "Creating user input file: {Dir}/{USERINPUTFILE}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "USERINPUTFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "USERINPUT_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating secrets file: {Dir}/{SECRETSFILE}",
            "message": "Creating secrets file: {Dir}/{SECRETSFILE}",
            "translation": "Creating secrets file: {Dir}/{SECRETSFILE}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "SECRETSFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SECRETS_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating service definition file: {Dir}/{SERVICEDEFINITIONFILE}",
            "message": "Creating service definition file: {Dir}/{SERVICEDEFINITIONFILE}",
            "translation": "Creating service definition file: {Dir}/{SERVICEDEFINITIONFILE}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "SERVICEDEFINITIONFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_DEFINITION_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating pattern definition file: {Dir}/{PATTERNDEFINITIONFILE}",
            "message": "Creating pattern definition file: {Dir}/{PATTERNDEFINITIONFILE}",
            "translation": "Creating pattern definition file: {Dir}/{PATTERNDEFINITIONFILE}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "PATTERNDEFINITIONFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "PATTERN_DEFINITION_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating service policy file: {Dir}/{SERVICEPOLICYFILE}",
            "message": "Creating service policy file: {Dir}/{SERVICEPOLICYFILE}",
            "translation": "Creating service policy file: {Dir}/{SERVICEPOLICYFILE}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "SERVICEPOLICYFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_POLICY_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating .gitignore files for source code management.",
            "message": "Creating .gitignore files for source code management.",
            "translation": "Creating .gitignore files for source code management.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Creating image generation files under {Currentdir} directory.",
            "message": "Creating image generation files under {Currentdir} directory.",
            "translation": "Creating image generation files under {Currentdir} directory.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Currentdir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "current_dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created image generation files in {Currentdir} and horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
            "message": "Created image generation files in {Currentdir} and horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
            "translation": "Created image generation files in {Currentdir} and horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Currentdir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "current_dir"
                },
                {
                    "id": "Dir",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dir"
                },
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "SERVICE_COMMAND"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
            "message": "Created horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
            "translation": "Created horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_COMMAND"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "must specify either --org or set the {DEVTOOLHZNORG} environment variable.",
            "message": "must specify either --org or set the {DEVTOOLHZNORG} environment variable.",
            "translation": "must specify either --org or set the {DEVTOOLHZNORG} environment variable.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEVTOOLHZNORG",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEVTOOL_HZN_ORG"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "invalid version string: {Version}",
            "message": "invalid version string: {Version}",
            "translation": "invalid version string: {Version}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "only support one image for a service unless --noImageGen flag is specified.",
            "message": "only support one image for a service unless --noImageGen flag is specified.",
            "translation": "only support one image for a service unless --noImageGen flag is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "image {Image} has invalid format.",
            "message": "image {Image} has invalid format.",
            "translation": "image {Image} has invalid format.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Image",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "image"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "please specify the image name with -i flag.",
            "message": "please specify the image name with -i flag.",
            "translation": "please specify the image name with -i flag.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unsupported deployment config type: {Dconfig}",
            "message": "unsupported deployment config type: {Dconfig}",
            "translation": "unsupported deployment config type: {Dconfig}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dconfig",
                    "string": "%[1]v",
                    "type": "[]string",
                    "underlyingType": "[]string",
                    "argNum": 1,
                    "expr": "dconfig"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error verifying filepath {SecPath}: {Err}",
            "message": "Error verifying filepath {SecPath}: {Err}",
            "translation": "Error verifying filepath {SecPath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secPath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to find the service {ServiceName} in the current project. If this is a new dependent service, please update the dependency list with the 'hzn dev dependency fetch' command.",
            "message": "failed to find the service {ServiceName} in the current project. If this is a new dependent service, please update the dependency list with the 'hzn dev dependency fetch' command.",
            "translation": "failed to find the service {ServiceName} in the current project. If this is a new dependent service, please update the dependency list with the 'hzn dev dependency fetch' command.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}' More than one container has been found for deployment: {JoincontainerNames__}. Please specify the service name by -c flag",
            "message": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}' More than one container has been found for deployment: {JoincontainerNames__}. Please specify the service name by -c flag",
            "translation": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}' More than one container has been found for deployment: {JoincontainerNames__}. Please specify the service name by -c flag",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "SERVICE_COMMAND"
                },
                {
                    "id": "SERVICELOGCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_LOG_COMMAND"
                },
                {
                    "id": "JoincontainerNames__",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "strings.Join(containerNames, \", \")"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}': container {ContainerName} not found in service {ServiceName}",
            "message": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}': container {ContainerName} not found in service {ServiceName}",
            "translation": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}': container {ContainerName} not found in service {ServiceName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "SERVICE_COMMAND"
                },
                {
                    "id": "SERVICELOGCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_LOG_COMMAND"
                },
                {
                    "id": "ContainerName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "containerName"
                },
                {
                    "id": "ServiceName",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "serviceName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}' Unable to list containers: {Arg_3}",
            "message": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}' Unable to list containers: {Arg_3}",
            "translation": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}' Unable to list containers: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "SERVICE_COMMAND"
                },
                {
                    "id": "SERVICELOGCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_LOG_COMMAND"
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Found containers {Containers}",
            "message": "Found containers {Containers}",
            "translation": "Found containers {Containers}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Containers",
                    "string": "%[1]v",
                    "type": "[]github.com/fsouza/go-dockerclient.APIContainers",
                    "underlyingType": "[]github.com/fsouza/go-dockerclient.APIContainers",
                    "argNum": 1,
                    "expr": "containers"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to display log messages: {Err}",
            "message": "Unable to display log messages: {Err}",
            "translation": "Unable to display log messages: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Displaying log messages for dev service {ServiceName} with instance id prefix {MsId}.",
            "message": "Displaying log messages for dev service {ServiceName} with instance id prefix {MsId}.",
            "translation": "Displaying log messages for dev service {ServiceName} with instance id prefix {MsId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceName"
                },
                {
                    "id": "MsId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "msId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Use ctrl-C to terminate this command.",
            "message": "Use ctrl-C to terminate this command.",
            "translation": "Use ctrl-C to terminate this command.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}' Cannot find any running container for dev service {ServiceName}",
            "message": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}' Cannot find any running container for dev service {ServiceName}",
            "translation": "'{SERVICECOMMAND} {SERVICELOGCOMMAND}' Cannot find any running container for dev service {ServiceName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "SERVICE_COMMAND"
                },
                {
                    "id": "SERVICELOGCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_LOG_COMMAND"
                },
                {
                    "id": "ServiceName",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "$SERVICE_NAME for $ARCH",
            "message": "$SERVICE_NAME for $ARCH",
            "translation": "$SERVICE_NAME for $ARCH",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Who to say hello to",
            "message": "Who to say hello to",
            "translation": "Who to say hello to",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unknown deployment type: {Dc}",
            "message": "unknown deployment type: {Dc}",
            "translation": "unknown deployment type: {Dc}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dc",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{FilePath}: URL must be set.",
            "message": "{FilePath}: URL must be set.",
            "translation": "{FilePath}: URL must be set.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{FilePath}: version must be set to a specific version, e.g. 1.0.0.",
            "message": "{FilePath}: version must be set to a specific version, e.g. 1.0.0.",
            "translation": "{FilePath}: version must be set to a specific version, e.g. 1.0.0.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{FilePath}: org must be set.",
            "message": "{FilePath}: org must be set.",
            "translation": "{FilePath}: org must be set.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{FilePath}: deployment configuration, {Err}",
            "message": "{FilePath}: deployment configuration, {Err}",
            "translation": "{FilePath}: deployment configuration, {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{FilePath}: userInput array index {Ix} does not have name and type specified.",
            "message": "{FilePath}: userInput array index {Ix} does not have name and type specified.",
            "translation": "{FilePath}: userInput array index {Ix} does not have name and type specified.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Ix",
                    "string": "%[2]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "ix"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updated {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
            "message": "Updated {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
            "translation": "Updated {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "SERVICEDEFINITIONFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_DEFINITION_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No need to update {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
            "message": "No need to update {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
            "translation": "No need to update {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "SERVICEDEFINITIONFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_DEFINITION_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error creating {HORIZONGITIGNOREFILE} for source code management. {Err}",
            "message": "error creating {HORIZONGITIGNOREFILE} for source code management. {Err}",
            "translation": "error creating {HORIZONGITIGNOREFILE} for source code management. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HORIZONGITIGNOREFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "HORIZON_GITIGNORE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Converted userinput attribute: {GlobalSet} to API attribute: {Attr}",
            "message": "Converted userinput attribute: {GlobalSet} to API attribute: {Attr}",
            "translation": "Converted userinput attribute: {GlobalSet} to API attribute: {Attr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "GlobalSet",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/common.GlobalSet",
                    "underlyingType": "struct{Type string \"json:\\\"type\\\"\"; ServiceSpecs github.com/open-horizon/anax/persistence.ServiceSpecs \"json:\\\"service_specs,omitempty\\\"\"; Variables map[string]interface{} \"json:\\\"variables\\\"\"}",
                    "argNum": 1,
                    "expr": "gs"
                },
                {
                    "id": "Attr",
                    "string": "%[2]v",
                    "type": "*github.com/open-horizon/anax/api.Attribute",
                    "underlyingType": "*github.com/open-horizon/anax/api.Attribute",
                    "argNum": 2,
                    "expr": "attr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{GlobalSet} encountered error: {Error}",
            "message": "{GlobalSet} encountered error: {Error}",
            "translation": "{GlobalSet} encountered error: {Error}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "GlobalSet",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/common.GlobalSet",
                    "underlyingType": "struct{Type string \"json:\\\"type\\\"\"; ServiceSpecs github.com/open-horizon/anax/persistence.ServiceSpecs \"json:\\\"service_specs,omitempty\\\"\"; Variables map[string]interface{} \"json:\\\"variables\\\"\"}",
                    "argNum": 1,
                    "expr": "gs"
                },
                {
                    "id": "Error",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "passthruError.Error()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Converted API Attributes: {Global} to persistent attributes: {Attributes}",
            "message": "Converted API Attributes: {Global} to persistent attributes: {Attributes}",
            "translation": "Converted API Attributes: {Global} to persistent attributes: {Attributes}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Global",
                    "string": "%[1]v",
                    "type": "[]github.com/open-horizon/anax/common.GlobalSet",
                    "underlyingType": "[]github.com/open-horizon/anax/common.GlobalSet",
                    "argNum": 1,
                    "expr": "global"
                },
                {
                    "id": "Attributes",
                    "string": "%[2]v",
                    "type": "[]github.com/open-horizon/anax/persistence.Attribute",
                    "underlyingType": "[]github.com/open-horizon/anax/persistence.Attribute",
                    "argNum": 2,
                    "expr": "attributes"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{OriginalUserInputFilePath}: global array element ({GlobalSet}) has an empty type, must be one of the supported attribute types. See the Horizon agent /attribute API.",
            "message": "{OriginalUserInputFilePath}: global array element ({GlobalSet}) has an empty type, must be one of the supported attribute types. See the Horizon agent /attribute API.",
            "translation": "{OriginalUserInputFilePath}: global array element ({GlobalSet}) has an empty type, must be one of the supported attribute types. See the Horizon agent /attribute API.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OriginalUserInputFilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "originalUserInputFilePath"
                },
                {
                    "id": "GlobalSet",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/common.GlobalSet",
                    "underlyingType": "struct{Type string \"json:\\\"type\\\"\"; ServiceSpecs github.com/open-horizon/anax/persistence.ServiceSpecs \"json:\\\"service_specs,omitempty\\\"\"; Variables map[string]interface{} \"json:\\\"variables\\\"\"}",
                    "argNum": 2,
                    "expr": "gs"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{USERINPUTFILE} has error: {Err}",
            "message": "{USERINPUTFILE} has error: {Err}",
            "translation": "{USERINPUTFILE} has error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "USERINPUTFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "USERINPUT_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{OriginalUserInputFilePath}: services array element at index {Ix} is {AbstractUserInput} {Err}",
            "message": "{OriginalUserInputFilePath}: services array element at index {Ix} is {AbstractUserInput} {Err}",
            "translation": "{OriginalUserInputFilePath}: services array element at index {Ix} is {AbstractUserInput} {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OriginalUserInputFilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "originalUserInputFilePath"
                },
                {
                    "id": "Ix",
                    "string": "%[2]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "ix"
                },
                {
                    "id": "AbstractUserInput",
                    "string": "%[3]v",
                    "type": "github.com/open-horizon/anax/policy.AbstractUserInput",
                    "underlyingType": "interface{GetInputLength() int; GetInputMap() map[string]interface{}; GetInputNames() []string; GetInputValue(string) (interface{}, error); GetServiceArch() string; GetServiceOrgid() string; GetServiceUrl() string; GetServiceVersionRange() string}",
                    "argNum": 3,
                    "expr": "ms"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{OriginalUserInputFilePath}: services array does not contain an element for {URL}. Error: {Err}",
            "message": "{OriginalUserInputFilePath}: services array does not contain an element for {URL}. Error: {Err}",
            "translation": "{OriginalUserInputFilePath}: services array does not contain an element for {URL}. Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OriginalUserInputFilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "originalUserInputFilePath"
                },
                {
                    "id": "URL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sDef.URL"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "please provide a user input file for service {URL}. Error: {Err}",
            "message": "please provide a user input file for service {URL}. Error: {Err}",
            "translation": "please provide a user input file for service {URL}. Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sDef.URL"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "has empty org, must be set to the name of the organization that owns the service.",
            "message": "has empty org, must be set to the name of the organization that owns the service.",
            "translation": "has empty org, must be set to the name of the organization that owns the service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "has empty url. Must be set to this service's url or a dependency's url.",
            "message": "has empty url. Must be set to this service's url or a dependency's url.",
            "translation": "has empty url. Must be set to this service's url or a dependency's url.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "sets variable {VarName} using a value of {Err}.",
            "message": "sets variable {VarName} using a value of {Err}.",
            "translation": "sets variable {VarName} using a value of {Err}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VarName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "varName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "sets variable {VarName} of type {VarValue} that is not defined.",
            "message": "sets variable {VarName} of type {VarValue} that is not defined.",
            "translation": "sets variable {VarName} of type {VarValue} that is not defined.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VarName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "varName"
                },
                {
                    "id": "VarValue",
                    "string": "%[2]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "varValue"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updated {HomeDirectory}/{USERINPUTFILE}.",
            "message": "Updated {HomeDirectory}/{USERINPUTFILE}.",
            "translation": "Updated {HomeDirectory}/{USERINPUTFILE}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "USERINPUTFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "USERINPUT_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No need to update {HomeDirectory}/{USERINPUTFILE}.",
            "message": "No need to update {HomeDirectory}/{USERINPUTFILE}.",
            "translation": "No need to update {HomeDirectory}/{USERINPUTFILE}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "USERINPUTFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "USERINPUT_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not create directory {NewDepDir}, error: {Err}",
            "message": "could not create directory {NewDepDir}, error: {Err}",
            "translation": "could not create directory {NewDepDir}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NewDepDir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "newDepDir"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not get status of directory {NewDepDir}, error: {Err}",
            "message": "could not get status of directory {NewDepDir}, error: {Err}",
            "translation": "could not get status of directory {NewDepDir}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NewDepDir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "newDepDir"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Using working directory: {Dir}",
            "message": "Using working directory: {Dir}",
            "translation": "Using working directory: {Dir}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "horizon project in {Dir} already contains {FileName}.",
            "message": "horizon project in {Dir} already contains {FileName}.",
            "translation": "horizon project in {Dir} already contains {FileName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "FileName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error checking for {FileName}: {Err}",
            "message": "error checking for {FileName}: {Err}",
            "translation": "error checking for {FileName}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal {FilePath}, error: {Err}",
            "message": "failed to unmarshal {FilePath}, error: {Err}",
            "translation": "failed to unmarshal {FilePath}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to create json object for {FileName}, error: {Err}",
            "message": "failed to create json object for {FileName}, error: {Err}",
            "translation": "failed to create json object for {FileName}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write json object for {FileName} to file {FilePath}, error: {Err}",
            "message": "unable to write json object for {FileName} to file {FilePath}, error: {Err}",
            "translation": "unable to write json object for {FileName} to file {FilePath}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "FilePath",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write json object for userinput to file {FilePath}, error: {Err}",
            "message": "unable to write json object for userinput to file {FilePath}, error: {Err}",
            "translation": "unable to write json object for userinput to file {FilePath}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Must set environment variable {DEVTOOLHZNORG} or specify the user as 'org/user' on the --user-pw flag",
            "message": "Must set environment variable {DEVTOOLHZNORG} or specify the user as 'org/user' on the --user-pw flag",
            "translation": "Must set environment variable {DEVTOOLHZNORG} or specify the user as 'org/user' on the --user-pw flag",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEVTOOLHZNORG",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEVTOOL_HZN_ORG"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Must set environment variable {DEVTOOLHZNUSER} or specify user exchange credentials with --user-pw",
            "message": "Must set environment variable {DEVTOOLHZNUSER} or specify user exchange credentials with --user-pw",
            "translation": "Must set environment variable {DEVTOOLHZNUSER} or specify user exchange credentials with --user-pw",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEVTOOLHZNUSER",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEVTOOL_HZN_USER"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to set env var {DEVTOOLHZNEXCHANGEURL} to {ExchangeUrl}, error {Err}",
            "message": "Unable to set env var {DEVTOOLHZNEXCHANGEURL} to {ExchangeUrl}, error {Err}",
            "translation": "Unable to set env var {DEVTOOLHZNEXCHANGEURL} to {ExchangeUrl}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEVTOOLHZNEXCHANGEURL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEVTOOL_HZN_EXCHANGE_URL"
                },
                {
                    "id": "ExchangeUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "exchangeUrl"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Environment variable {DEVTOOLHZNEXCHANGEURL} must be set.",
            "message": "Environment variable {DEVTOOLHZNEXCHANGEURL} must be set.",
            "translation": "Environment variable {DEVTOOLHZNEXCHANGEURL} must be set.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEVTOOLHZNEXCHANGEURL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEVTOOL_HZN_EXCHANGE_URL"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "project has no horizon metadata directory. Use hzn dev to create a new project. Error: {Err}",
            "message": "project has no horizon metadata directory. Use hzn dev to create a new project. Error: {Err}",
            "translation": "project has no horizon metadata directory. Use hzn dev to create a new project. Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{ProjectType} {Cmd}' project does not validate. {Derr}",
            "message": "'{ProjectType} {Cmd}' project does not validate. {Derr}",
            "translation": "'{ProjectType} {Cmd}' project does not validate. {Derr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ProjectType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "projectType"
                },
                {
                    "id": "Cmd",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cmd"
                },
                {
                    "id": "Derr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "derr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{ProjectType} {Cmd}' project does not validate. {Verr}",
            "message": "'{ProjectType} {Cmd}' project does not validate. {Verr}",
            "translation": "'{ProjectType} {Cmd}' project does not validate. {Verr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ProjectType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "projectType"
                },
                {
                    "id": "Cmd",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cmd"
                },
                {
                    "id": "Verr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "verr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{ProjectType} {Cmd}' Must specify configuration file type (-t) when a configuration file is specified (-m).",
            "message": "'{ProjectType} {Cmd}' Must specify configuration file type (-t) when a configuration file is specified (-m).",
            "translation": "'{ProjectType} {Cmd}' Must specify configuration file type (-t) when a configuration file is specified (-m).",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ProjectType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "projectType"
                },
                {
                    "id": "Cmd",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cmd"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{ProjectType} {Cmd}' configuration file {FileRef} error {Err}",
            "message": "'{ProjectType} {Cmd}' configuration file {FileRef} error {Err}",
            "translation": "'{ProjectType} {Cmd}' configuration file {FileRef} error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ProjectType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "projectType"
                },
                {
                    "id": "Cmd",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cmd"
                },
                {
                    "id": "FileRef",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "fileRef"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "project does not validate. {Verr}",
            "message": "project does not validate. {Verr}",
            "translation": "project does not validate. {Verr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verr",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "verr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "project in {Dir} is not a horizon project.",
            "message": "project in {Dir} is not a horizon project.",
            "translation": "project in {Dir} is not a horizon project.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Final Attributes: {Attrs}",
            "message": "Final Attributes: {Attrs}",
            "translation": "Final Attributes: {Attrs}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attrs",
                    "string": "%[1]v",
                    "type": "[]github.com/open-horizon/anax/persistence.Attribute",
                    "underlyingType": "[]github.com/open-horizon/anax/persistence.Attribute",
                    "argNum": 1,
                    "expr": "attrs"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "global attribute conversion error: {Cerr}",
            "message": "global attribute conversion error: {Cerr}",
            "translation": "global attribute conversion error: {Cerr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Cerr",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "cerr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{ProjectType} {Cmd}' unable to create Container Worker, {Cerr}",
            "message": "'{ProjectType} {Cmd}' unable to create Container Worker, {Cerr}",
            "translation": "'{ProjectType} {Cmd}' unable to create Container Worker, {Cerr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ProjectType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "projectType"
                },
                {
                    "id": "Cmd",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cmd"
                },
                {
                    "id": "Cerr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "cerr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to remove the UDS socket file: {Err}",
            "message": "Failed to remove the UDS socket file: {Err}",
            "translation": "Failed to remove the UDS socket file: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to remove FSS Authentication credential folder, error: {Err}",
            "message": "Failed to remove FSS Authentication credential folder, error: {Err}",
            "translation": "Failed to remove FSS Authentication credential folder, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to list containers, {Err}",
            "message": "unable to list containers, {Err}",
            "translation": "unable to list containers, {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to list existing containers: {Err}",
            "message": "unable to list existing containers: {Err}",
            "translation": "unable to list existing containers: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Found main network for service {AgreementId}, {ContainerNetwork}",
            "message": "Found main network for service {AgreementId}, {ContainerNetwork}",
            "translation": "Found main network for service {AgreementId}, {ContainerNetwork}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AgreementId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "agreementId"
                },
                {
                    "id": "ContainerNetwork",
                    "string": "%[2]v",
                    "type": "github.com/fsouza/go-dockerclient.ContainerNetwork",
                    "underlyingType": "struct{Aliases []string \"json:\\\"Aliases,omitempty\\\" yaml:\\\"Aliases,omitempty\\\" toml:\\\"Aliases,omitempty\\\"\"; MacAddress string \"json:\\\"MacAddress,omitempty\\\" yaml:\\\"MacAddress,omitempty\\\" toml:\\\"MacAddress,omitempty\\\"\"; GlobalIPv6PrefixLen int \"json:\\\"GlobalIPv6PrefixLen,omitempty\\\" yaml:\\\"GlobalIPv6PrefixLen,omitempty\\\" toml:\\\"GlobalIPv6PrefixLen,omitempty\\\"\"; GlobalIPv6Address string \"json:\\\"GlobalIPv6Address,omitempty\\\" yaml:\\\"GlobalIPv6Address,omitempty\\\" toml:\\\"GlobalIPv6Address,omitempty\\\"\"; IPv6Gateway string \"json:\\\"IPv6Gateway,omitempty\\\" yaml:\\\"IPv6Gateway,omitempty\\\" toml:\\\"IPv6Gateway,omitempty\\\"\"; IPPrefixLen int \"json:\\\"IPPrefixLen,omitempty\\\" yaml:\\\"IPPrefixLen,omitempty\\\" toml:\\\"IPPrefixLen,omitempty\\\"\"; IPAddress string \"json:\\\"IPAddress,omitempty\\\" yaml:\\\"IPAddress,omitempty\\\" toml:\\\"IPAddress,omitempty\\\"\"; Gateway string \"json:\\\"Gateway,omitempty\\\" yaml:\\\"Gateway,omitempty\\\" toml:\\\"Gateway,omitempty\\\"\"; EndpointID string \"json:\\\"EndpointID,omitempty\\\" yaml:\\\"EndpointID,omitempty\\\" toml:\\\"EndpointID,omitempty\\\"\"; NetworkID string \"json:\\\"NetworkID,omitempty\\\" yaml:\\\"NetworkID,omitempty\\\" toml:\\\"NetworkID,omitempty\\\"\"}",
                    "argNum": 2,
                    "expr": "nw"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' {StartErr} for dependency {URL}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' {StartErr} for dependency {URL}",
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' {StartErr} for dependency {URL}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_START_COMMAND"
                },
                {
                    "id": "StartErr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "startErr"
                },
                {
                    "id": "URL",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "depDef.URL"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to get list of containers in network {NwName}, error {Err}",
            "message": "unable to get list of containers in network {NwName}, error {Err}",
            "translation": "unable to get list of containers in network {NwName}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NwName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nwName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to list existing containers: {Err}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to list existing containers: {Err}",
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to list existing containers: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_START_COMMAND"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Containers for service {Org}/{URL} are in network {NetName}",
            "message": "Containers for service {Org}/{URL} are in network {NetName}",
            "translation": "Containers for service {Org}/{URL} are in network {NetName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "depDef.Org"
                },
                {
                    "id": "URL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "depDef.URL"
                },
                {
                    "id": "NetName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "netName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Skipping service because it has no deployment configuration: {DepConfig}",
            "message": "Skipping service because it has no deployment configuration: {DepConfig}",
            "translation": "Skipping service because it has no deployment configuration: {DepConfig}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DepConfig",
                    "string": "%[1]v",
                    "type": "*github.com/open-horizon/anax/common.DeploymentConfig",
                    "underlyingType": "*github.com/open-horizon/anax/common.DeploymentConfig",
                    "argNum": 1,
                    "expr": "depConfig"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Working on service {SId}",
            "message": "Working on service {SId}",
            "translation": "Working on service {SId}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to retrieve dependency metadata: {Err}",
            "message": "unable to retrieve dependency metadata: {Err}",
            "translation": "unable to retrieve dependency metadata: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start dependencies: {Err}",
            "message": "unable to start dependencies: {Err}",
            "translation": "unable to start dependencies: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create environment variables",
            "message": "unable to create environment variables",
            "translation": "unable to create environment variables",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Passing environment variables: {EnvironmentAdditions}",
            "message": "Passing environment variables: {EnvironmentAdditions}",
            "translation": "Passing environment variables: {EnvironmentAdditions}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "EnvironmentAdditions",
                    "string": "%[1]v",
                    "type": "map[string]string",
                    "underlyingType": "map[string]string",
                    "argNum": 1,
                    "expr": "environmentAdditions"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Start {LogName}: {CLIString} with instance id prefix {Id}",
            "message": "Start {LogName}: {CLIString} with instance id prefix {Id}",
            "translation": "Start {LogName}: {CLIString} with instance id prefix {Id}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "LogName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "logName"
                },
                {
                    "id": "CLIString",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dc.CLIString()"
                },
                {
                    "id": "Id",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "id"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start container using {CLIString}, error: {StartErr}",
            "message": "unable to start container using {CLIString}, error: {StartErr}",
            "translation": "unable to start container using {CLIString}, error: {StartErr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CLIString",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dc.CLIString()"
                },
                {
                    "id": "StartErr",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "startErr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Running {LogName}.",
            "message": "Running {LogName}.",
            "translation": "Running {LogName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "LogName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "logName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Stopping dependencies.",
            "message": "Stopping dependencies.",
            "translation": "Stopping dependencies.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to stop dependencies: {Err}",
            "message": "unable to stop dependencies: {Err}",
            "translation": "unable to stop dependencies: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Stop {LogName}: {CLIString} with instance id prefix {MsId}",
            "message": "Stop {LogName}: {CLIString} with instance id prefix {MsId}",
            "translation": "Stop {LogName}: {CLIString} with instance id prefix {MsId}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "LogName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "logName"
                },
                {
                    "id": "CLIString",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dc.CLIString()"
                },
                {
                    "id": "MsId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "msId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to create docker client, error: {Derr}",
            "message": "failed to create docker client, error: {Derr}",
            "translation": "failed to create docker client, error: {Derr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Derr",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "derr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to convert global attributes in {USERINPUTFILE}, error: {Err}",
            "message": "failed to convert global attributes in {USERINPUTFILE}, error: {Err}",
            "translation": "failed to convert global attributes in {USERINPUTFILE}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "USERINPUTFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "USERINPUT_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to extract authentication attribute from {USERINPUTFILE}, error: {Err}",
            "message": "failed to extract authentication attribute from {USERINPUTFILE}, error: {Err}",
            "translation": "failed to extract authentication attribute from {USERINPUTFILE}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "USERINPUTFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "USERINPUT_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "getting container images into docker.",
            "message": "getting container images into docker.",
            "translation": "getting container images into docker.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to get container images, error: {Err}",
            "message": "failed to get container images, error: {Err}",
            "translation": "failed to get container images, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created network {Name}",
            "message": "Created network {Name}",
            "translation": "Created network {Name}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to list docker networks, error {Err}",
            "message": "unable to list docker networks, error {Err}",
            "translation": "unable to list docker networks, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to remove docker network {Name}, error {Err}",
            "message": "unable to remove docker network {Name}, error {Err}",
            "translation": "unable to remove docker network {Name}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "invalid image format: {Image}",
            "message": "invalid image format: {Image}",
            "translation": "invalid image format: {Image}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Image",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "image"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "file {FilePath} exists already",
            "message": "file {FilePath} exists already",
            "translation": "file {FilePath} exists already",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write content to file {FilePath}, error: {Err}",
            "message": "unable to write content to file {FilePath}, error: {Err}",
            "translation": "unable to write content to file {FilePath}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The selection string {V} is not valid.",
            "message": "The selection string {V} is not valid.",
            "translation": "The selection string {V} is not valid.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "V",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "v"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn eventlog list' output: {Err}",
            "message": "failed to marshal 'hzn eventlog list' output: {Err}",
            "translation": "failed to marshal 'hzn eventlog list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error: event record could not be found",
            "message": "Error: event record could not be found",
            "translation": "Error: event record could not be found",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn eventlog surface' output: {Err}",
            "message": "failed to marshal 'hzn eventlog surface' output: {Err}",
            "translation": "failed to marshal 'hzn eventlog surface' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'exchange agbot list' output: {Err}",
            "message": "failed to marshal 'exchange agbot list' output: {Err}",
            "translation": "failed to marshal 'exchange agbot list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "agbot '{Agbot}' not found in org {AgbotOrg}",
            "message": "agbot '{Agbot}' not found in org {AgbotOrg}",
            "translation": "agbot '{Agbot}' not found in org {AgbotOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Agbot",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "agbot"
                },
                {
                    "id": "AgbotOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "agbotOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "both patternorg and pattern must be specified (or neither)",
            "message": "both patternorg and pattern must be specified (or neither)",
            "translation": "both patternorg and pattern must be specified (or neither)",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' not found in agbot '{Agbot}'",
            "message": "pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' not found in agbot '{Agbot}'",
            "translation": "pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' not found in agbot '{Agbot}'",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pattern"
                },
                {
                    "id": "PatternOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patternOrg"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeOrg"
                },
                {
                    "id": "Agbot",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' already exists in agbot '{Agbot}'",
            "message": "Pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' already exists in agbot '{Agbot}'",
            "translation": "Pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' already exists in agbot '{Agbot}'",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pattern"
                },
                {
                    "id": "PatternOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patternOrg"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeOrg"
                },
                {
                    "id": "Agbot",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Adding Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot will start looking for nodes that are compatible with this policy.",
            "message": "Adding Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot will start looking for nodes that are compatible with this policy.",
            "translation": "Adding Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot will start looking for nodes that are compatible with this policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "Agbot",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Business policy org {PolOrg}' already exists in agbot '{Agbot}'",
            "message": "Business policy org {PolOrg}' already exists in agbot '{Agbot}'",
            "translation": "Business policy org {PolOrg}' already exists in agbot '{Agbot}'",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "Agbot",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removing Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot is no longer looking for nodes that are compatible with this policy.",
            "message": "Removing Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot is no longer looking for nodes that are compatible with this policy.",
            "translation": "Removing Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot is no longer looking for nodes that are compatible with this policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "PolOrg"
                },
                {
                    "id": "Agbot",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Policy {Policy} not found in org {PolOrg}",
            "message": "Policy {Policy} not found in org {PolOrg}",
            "translation": "Policy {Policy} not found in org {PolOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Policy",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "policy"
                },
                {
                    "id": "PolOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "polOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange deployment listpolicy' output: {Err}",
            "message": "failed to marshal 'hzn exchange deployment listpolicy' output: {Err}",
            "translation": "failed to marshal 'hzn exchange deployment listpolicy' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Incorrect deployment policy format in file {JsonFilePath}: {Err}",
            "message": "Incorrect deployment policy format in file {JsonFilePath}: {Err}",
            "translation": "Incorrect deployment policy format in file {JsonFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JsonFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "jsonFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The deployment policy has no constraints which might result in the service being deployed to all nodes. Please specify --no-constraints to confirm that this is acceptable.",
            "message": "The deployment policy has no constraints which might result in the service being deployed to all nodes. Please specify --no-constraints to confirm that this is acceptable.",
            "translation": "The deployment policy has no constraints which might result in the service being deployed to all nodes. Please specify --no-constraints to confirm that this is acceptable.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Deployment policy: {PolOrg}/{Policy} updated in the Horizon Exchange",
            "message": "Deployment policy: {PolOrg}/{Policy} updated in the Horizon Exchange",
            "translation": "Deployment policy: {PolOrg}/{Policy} updated in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "Policy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot create deployment policy {PolOrg}/{Policy}: {Msg}",
            "message": "Cannot create deployment policy {PolOrg}/{Policy}: {Msg}",
            "translation": "Cannot create deployment policy {PolOrg}/{Policy}: {Msg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "Policy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policy"
                },
                {
                    "id": "Msg",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "resp.Msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deployment policy: {PolOrg}/{Policy} added in the Horizon Exchange",
            "message": "Deployment policy: {PolOrg}/{Policy} added in the Horizon Exchange",
            "translation": "Deployment policy: {PolOrg}/{Policy} added in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "Policy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid format for service: {Err1}",
            "message": "Invalid format for service: {Err1}",
            "translation": "Invalid format for service: {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err1",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid format for properties: {Err1}",
            "message": "Invalid format for properties: {Err1}",
            "translation": "Invalid format for properties: {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err1",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid format for constraints: {Err1}",
            "message": "Invalid format for constraints: {Err1}",
            "translation": "Invalid format for constraints: {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err1",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deployment policy attribute to be updated is not found in the input file. Supported attributes are: label, description, service, properties, constraints, userInput and secretBinding.",
            "message": "Deployment policy attribute to be updated is not found in the input file. Supported attributes are: label, description, service, properties, constraints, userInput and secretBinding.",
            "translation": "Deployment policy attribute to be updated is not found in the input file. Supported attributes are: label, description, service, properties, constraints, userInput and secretBinding.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal attribute input {Attribute}: {Err}",
            "message": "failed to unmarshal attribute input {Attribute}: {Err}",
            "translation": "failed to unmarshal attribute input {Attribute}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attribute",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "attribute"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating Policy {PolOrg}/{PolicyName} in the Horizon Exchange and re-evaluating all agreements based on this deployment policy. Existing agreements might be cancelled and re-negotiated.",
            "message": "Updating Policy {PolOrg}/{PolicyName} in the Horizon Exchange and re-evaluating all agreements based on this deployment policy. Existing agreements might be cancelled and re-negotiated.",
            "translation": "Updating Policy {PolOrg}/{PolicyName} in the Horizon Exchange and re-evaluating all agreements based on this deployment policy. Existing agreements might be cancelled and re-negotiated.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "PolicyName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Policy {PolOrg}/{PolicyName} updated in the Horizon Exchange",
            "message": "Policy {PolOrg}/{PolicyName} updated in the Horizon Exchange",
            "translation": "Policy {PolOrg}/{PolicyName} updated in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "PolicyName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove deployment policy {Policy} for org {PolOrg} from the Horizon Exchange?",
            "message": "Are you sure you want to remove deployment policy {Policy} for org {PolOrg} from the Horizon Exchange?",
            "translation": "Are you sure you want to remove deployment policy {Policy} for org {PolOrg} from the Horizon Exchange?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Policy",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "policy"
                },
                {
                    "id": "PolOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "polOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Policy {PolOrg}/{Policy} not found in the Horizon Exchange",
            "message": "Policy {PolOrg}/{Policy} not found in the Horizon Exchange",
            "translation": "Policy {PolOrg}/{Policy} not found in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "Policy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removing deployment policy {PolOrg}/{Policy} and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated",
            "message": "Removing deployment policy {PolOrg}/{Policy} and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated",
            "translation": "Removing deployment policy {PolOrg}/{Policy} and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "Policy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deployment policy {PolOrg}/{Policy} removed",
            "message": "Deployment policy {PolOrg}/{Policy} removed",
            "translation": "Deployment policy {PolOrg}/{Policy} removed",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "Policy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Err}",
            "message": "{Err}",
            "translation": "{Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Note: The following secret bindings are not required by any services for this deployment policy:",
            "message": "Note: The following secret bindings are not required by any services for this deployment policy:",
            "translation": "Note: The following secret bindings are not required by any services for this deployment policy:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to verify the binding secret in the secret manager. {Err}",
            "message": "Failed to verify the binding secret in the secret manager. {Err}",
            "translation": "Failed to verify the binding secret in the secret manager. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: The following binding secrets cannot be verified in the secret manager:",
            "message": "Warning: The following binding secrets cannot be verified in the secret manager:",
            "translation": "Warning: The following binding secrets cannot be verified in the secret manager:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to get services {ServiceOrg}/{ServiceName} version {ServiceVersion} from the exchange for all architectures. {Err}",
            "message": "Failed to get services {ServiceOrg}/{ServiceName} version {ServiceVersion} from the exchange for all architectures. {Err}",
            "translation": "Failed to get services {ServiceOrg}/{ServiceName} version {ServiceVersion} from the exchange for all architectures. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceOrg"
                },
                {
                    "id": "ServiceName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceName"
                },
                {
                    "id": "ServiceVersion",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceVersion"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error retrieving service {ServiceOrg}/{ServiceName} version {ServiceVersion} from the Exchange. {Err}",
            "message": "Error retrieving service {ServiceOrg}/{ServiceName} version {ServiceVersion} from the Exchange. {Err}",
            "translation": "Error retrieving service {ServiceOrg}/{ServiceName} version {ServiceVersion} from the Exchange. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceOrg"
                },
                {
                    "id": "ServiceName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceName"
                },
                {
                    "id": "ServiceVersion",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceVersion"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error validating secret bindings for service {SId}. {Err}",
            "message": "Error validating secret bindings for service {SId}. {Err}",
            "translation": "Error validating secret bindings for service {SId}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error validating secret bindings for dependent service {Id}. {Err}",
            "message": "Error validating secret bindings for dependent service {Id}. {Err}",
            "translation": "Error validating secret bindings for dependent service {Id}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Id",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "id"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: {Err}",
            "message": "Warning: {Err}",
            "translation": "Warning: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to validate cluster namespace for service, error was: {Err}",
            "message": "Failed to validate cluster namespace for service, error was: {Err}",
            "translation": "Failed to validate cluster namespace for service, error was: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "ClusterNamespace should not be set for device service: {Org}/{Name} with arch {Arch}",
            "message": "ClusterNamespace should not be set for device service: {Org}/{Name} with arch {Arch}",
            "translation": "ClusterNamespace should not be set for device service: {Org}/{Name} with arch {Arch}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceRef.Org"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceRef.Name"
                },
                {
                    "id": "Arch",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceRef.Arch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deployment policy label.",
            "message": "Deployment policy label.",
            "translation": "Deployment policy label.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Deployment policy description.",
            "message": "Deployment policy description.",
            "translation": "Deployment policy description.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the service.",
            "message": "The name of the service.",
            "translation": "The name of the service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The org of the service.",
            "message": "The org of the service.",
            "translation": "The org of the service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Set to '*' to use services of any hardware architecture.",
            "message": "Set to '*' to use services of any hardware architecture.",
            "translation": "Set to '*' to use services of any hardware architecture.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The cluster namespace of the service.",
            "message": "The cluster namespace of the service.",
            "translation": "The cluster namespace of the service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of service versions.",
            "message": "A list of service versions.",
            "translation": "A list of service versions.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of policy properties that describe the service being deployed.",
            "message": "A list of policy properties that describe the service being deployed.",
            "translation": "A list of policy properties that describe the service being deployed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e,",
            "message": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e,",
            "translation": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e,",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "separated by boolean operators AND (\u0026\u0026) or OR (||).",
            "message": "separated by boolean operators AND (\u0026\u0026) or OR (||).",
            "translation": "separated by boolean operators AND (\u0026\u0026) or OR (||).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of userInput variables to set when the service runs, listed by service.",
            "message": "A list of userInput variables to set when the service runs, listed by service.",
            "translation": "A list of userInput variables to set when the service runs, listed by service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service version range to which these variables should be applied.",
            "message": "The service version range to which these variables should be applied.",
            "translation": "The service version range to which these variables should be applied.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The input variables to be set.",
            "message": "The input variables to be set.",
            "translation": "The input variables to be set.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of secret bindings for the secret names defined in the services, listed by service.",
            "message": "A list of secret bindings for the secret names defined in the services, listed by service.",
            "translation": "A list of secret bindings for the secret names defined in the services, listed by service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service version range.",
            "message": "The service version range.",
            "translation": "The service version range.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The secret bindings.",
            "message": "The secret bindings.",
            "translation": "The secret bindings.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The valid formats for secret provider secret names are:",
            "message": "The valid formats for secret provider secret names are:",
            "translation": "The valid formats for secret provider secret names are:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'\u003csecretname\u003e' for organization level secret.",
            "message": "'\u003csecretname\u003e' for organization level secret.",
            "translation": "'\u003csecretname\u003e' for organization level secret.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'user/\u003cusername\u003e/\u003csecretname\u003e' for user level secret.",
            "message": "'user/\u003cusername\u003e/\u003csecretname\u003e' for user level secret.",
            "translation": "'user/\u003cusername\u003e/\u003csecretname\u003e' for user level secret.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Flags -s and -l are mutually exclusive.",
            "message": "Flags -s and -l are mutually exclusive.",
            "translation": "Flags -s and -l are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog servicelist -l' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog servicelist -l' output: {Err}",
            "translation": "failed to marshal 'hzn exchange catalog servicelist -l' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog servicelist -s' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog servicelist -s' output: {Err}",
            "translation": "failed to marshal 'hzn exchange catalog servicelist -s' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog servicelist' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog servicelist' output: {Err}",
            "translation": "failed to marshal 'hzn exchange catalog servicelist' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog patternlist -l' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog patternlist -l' output: {Err}",
            "translation": "failed to marshal 'hzn exchange catalog patternlist -l' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog patternlist -s' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog patternlist -s' output: {Err}",
            "translation": "failed to marshal 'hzn exchange catalog patternlist -s' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog patternlist' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog patternlist' output: {Err}",
            "translation": "failed to marshal 'hzn exchange catalog patternlist' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HA group {HaGroupName} not found in org {HaGroupOrg}",
            "message": "HA group {HaGroupName} not found in org {HaGroupOrg}",
            "translation": "HA group {HaGroupName} not found in org {HaGroupOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupName"
                },
                {
                    "id": "HaGroupOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange hagroup list' output: {Err}",
            "message": "failed to marshal 'hzn exchange hagroup list' output: {Err}",
            "translation": "failed to marshal 'hzn exchange hagroup list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Optional. The name of the HA group.",
            "message": "Optional. The name of the HA group.",
            "translation": "Optional. The name of the HA group.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A description of the HA group.",
            "message": "A description of the HA group.",
            "translation": "A description of the HA group.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of node names that are members of this group.",
            "message": "A list of node names that are members of this group.",
            "translation": "A list of node names that are members of this group.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "HA group name is not specified.",
            "message": "HA group name is not specified.",
            "translation": "HA group name is not specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "HA group description cannot be empty.",
            "message": "HA group description cannot be empty.",
            "translation": "HA group description cannot be empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cannot create HA group {HaGroupOrg}/{HaGroupName} because node {ClusterNode} is 'cluster' type. HA group does not support 'cluster' type members.",
            "message": "Cannot create HA group {HaGroupOrg}/{HaGroupName} because node {ClusterNode} is 'cluster' type. HA group does not support 'cluster' type members.",
            "translation": "Cannot create HA group {HaGroupOrg}/{HaGroupName} because node {ClusterNode} is 'cluster' type. HA group does not support 'cluster' type members.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupName"
                },
                {
                    "id": "ClusterNode",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "clusterNode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HA group {HaGroupOrg}/{HaGroupName} updated in the Horizon Exchange",
            "message": "HA group {HaGroupOrg}/{HaGroupName} updated in the Horizon Exchange",
            "translation": "HA group {HaGroupOrg}/{HaGroupName} updated in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot create HA group {HaGroupOrg}/{HaGroupName}: {Msg}",
            "message": "Cannot create HA group {HaGroupOrg}/{HaGroupName}: {Msg}",
            "translation": "Cannot create HA group {HaGroupOrg}/{HaGroupName}: {Msg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupName"
                },
                {
                    "id": "Msg",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "resp.Msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HA group {HaGroupOrg}/{HaGroupName} added in the Horizon Exchange",
            "message": "HA group {HaGroupOrg}/{HaGroupName} added in the Horizon Exchange",
            "translation": "HA group {HaGroupOrg}/{HaGroupName} added in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove HA group {HaGroupName} for org {HaGroupOrg} from the Horizon Exchange?",
            "message": "Are you sure you want to remove HA group {HaGroupName} for org {HaGroupOrg} from the Horizon Exchange?",
            "translation": "Are you sure you want to remove HA group {HaGroupName} for org {HaGroupOrg} from the Horizon Exchange?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupName"
                },
                {
                    "id": "HaGroupOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HA group {HaGroupName} is not found in org {HaGroupOrg}",
            "message": "HA group {HaGroupName} is not found in org {HaGroupOrg}",
            "translation": "HA group {HaGroupName} is not found in org {HaGroupOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupName"
                },
                {
                    "id": "HaGroupOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HA group {HaGroupOrg}/{HaGroupName} removed from the Horizon Exchange.",
            "message": "HA group {HaGroupOrg}/{HaGroupName} removed from the Horizon Exchange.",
            "translation": "HA group {HaGroupOrg}/{HaGroupName} removed from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot add node {ClusterNode} to HA group {HaGroupOrg}/{HaGroupName} because it has 'cluster' type. HA group does not support 'cluster' type members.",
            "message": "Cannot add node {ClusterNode} to HA group {HaGroupOrg}/{HaGroupName} because it has 'cluster' type. HA group does not support 'cluster' type members.",
            "translation": "Cannot add node {ClusterNode} to HA group {HaGroupOrg}/{HaGroupName} because it has 'cluster' type. HA group does not support 'cluster' type members.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ClusterNode",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "clusterNode"
                },
                {
                    "id": "HaGroupOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "node org is different from the group org {HaGroupOrg} for node '{NodeOrg}/{NodeName}'",
            "message": "node org is different from the group org {HaGroupOrg} for node '{NodeOrg}/{NodeName}'",
            "translation": "node org is different from the group org {HaGroupOrg} for node '{NodeOrg}/{NodeName}'",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeOrg"
                },
                {
                    "id": "NodeName",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "node '{NodeName}' not found in org {NodeOrg}",
            "message": "node '{NodeName}' not found in org {NodeOrg}",
            "translation": "node '{NodeName}' not found in org {NodeOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeName"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {NodeName} is already in HA group {HaGroupOrg}/{HaGroupName}. Skipping the node.",
            "message": "Node {NodeName} is already in HA group {HaGroupOrg}/{HaGroupName}. Skipping the node.",
            "translation": "Node {NodeName} is already in HA group {HaGroupOrg}/{HaGroupName}. Skipping the node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeName"
                },
                {
                    "id": "HaGroupOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The following nodes are added to HA group {HaGroupOrg}/{HaGroupName}: \"{JoinaddedNodes_}\"",
            "message": "The following nodes are added to HA group {HaGroupOrg}/{HaGroupName}: \"{JoinaddedNodes_}\"",
            "translation": "The following nodes are added to HA group {HaGroupOrg}/{HaGroupName}: \"{JoinaddedNodes_}\"",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupName"
                },
                {
                    "id": "JoinaddedNodes_",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "strings.Join(addedNodes, \",\")"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the following nodes cannot be added to the group because they are in different groups: \"{JoinfailedNodes_}\"",
            "message": "the following nodes cannot be added to the group because they are in different groups: \"{JoinfailedNodes_}\"",
            "translation": "the following nodes cannot be added to the group because they are in different groups: \"{JoinfailedNodes_}\"",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JoinfailedNodes_",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "strings.Join(failedNodes, \",\")"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove nodes {NodeNames} from HA group {HaGroupName} for org {HaGroupOrg} in the Horizon Exchange?",
            "message": "Are you sure you want to remove nodes {NodeNames} from HA group {HaGroupName} for org {HaGroupOrg} in the Horizon Exchange?",
            "translation": "Are you sure you want to remove nodes {NodeNames} from HA group {HaGroupName} for org {HaGroupOrg} in the Horizon Exchange?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeNames",
                    "string": "%[1]v",
                    "type": "[]string",
                    "underlyingType": "[]string",
                    "argNum": 1,
                    "expr": "nodeNames"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupName"
                },
                {
                    "id": "HaGroupOrg",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "haGroupOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {NodeName} is not in HA group {HaGroupOrg}/{HaGroupName}.",
            "message": "Node {NodeName} is not in HA group {HaGroupOrg}/{HaGroupName}.",
            "translation": "Node {NodeName} is not in HA group {HaGroupOrg}/{HaGroupName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeName"
                },
                {
                    "id": "HaGroupOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Nodes \"{JoinnodesToRemove_}\" are removed from HA group {HaGroupOrg}/{HaGroupName} in the Horizon Exchange",
            "message": "Nodes \"{JoinnodesToRemove_}\" are removed from HA group {HaGroupOrg}/{HaGroupName} in the Horizon Exchange",
            "translation": "Nodes \"{JoinnodesToRemove_}\" are removed from HA group {HaGroupOrg}/{HaGroupName} in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JoinnodesToRemove_",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "strings.Join(nodesToRemove, \",\")"
                },
                {
                    "id": "HaGroupOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node \"{JoinnodesToRemove_}\" is removed from HA group {HaGroupOrg}/{HaGroupName} in the Horizon Exchange",
            "message": "Node \"{JoinnodesToRemove_}\" is removed from HA group {HaGroupOrg}/{HaGroupName} in the Horizon Exchange",
            "translation": "Node \"{JoinnodesToRemove_}\" is removed from HA group {HaGroupOrg}/{HaGroupName} in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JoinnodesToRemove_",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "strings.Join(nodesToRemove, \",\")"
                },
                {
                    "id": "HaGroupOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "NMP {NmpName} not found in org {NmpOrg}",
            "message": "NMP {NmpName} not found in org {NmpOrg}",
            "translation": "NMP {NmpName} not found in org {NmpOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpName"
                },
                {
                    "id": "NmpOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nmpOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange nmp list' output: {Err}",
            "message": "failed to marshal 'hzn exchange nmp list' output: {Err}",
            "translation": "failed to marshal 'hzn exchange nmp list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "A short description of the policy.",
            "message": "A short description of the policy.",
            "translation": "A short description of the policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A much longer description of the policy.",
            "message": "A much longer description of the policy.",
            "translation": "A much longer description of the policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of policy properties that describe this policy.",
            "message": "A list of policy properties that describe this policy.",
            "translation": "A list of policy properties that describe this policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "This policy applies to nodes using one of these patterns.",
            "message": "This policy applies to nodes using one of these patterns.",
            "translation": "This policy applies to nodes using one of these patterns.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Is this policy enabled or disabled.",
            "message": "Is this policy enabled or disabled.",
            "translation": "Is this policy enabled or disabled.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When to start an upgrade, default \"now\".",
            "message": "When to start an upgrade, default \"now\".",
            "translation": "When to start an upgrade, default \"now\".",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Enable agents to randomize upgrade start time within start + startWindow seconds, default 0.",
            "message": "Enable agents to randomize upgrade start time within start + startWindow seconds, default 0.",
            "translation": "Enable agents to randomize upgrade start time within start + startWindow seconds, default 0.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Assertions on how the agent should update itself.",
            "message": "Assertions on how the agent should update itself.",
            "translation": "Assertions on how the agent should update itself.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The manifest file containing the software, config and cert files to upgrade.",
            "message": "The manifest file containing the software, config and cert files to upgrade.",
            "translation": "The manifest file containing the software, config and cert files to upgrade.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Is this policy allowed to perform a downgrade to a previous version.",
            "message": "Is this policy allowed to perform a downgrade to a previous version.",
            "translation": "Is this policy allowed to perform a downgrade to a previous version.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Incorrect node management policy format in file {JsonFilePath}: {Err}",
            "message": "Incorrect node management policy format in file {JsonFilePath}: {Err}",
            "translation": "Incorrect node management policy format in file {JsonFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JsonFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "jsonFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The node management policy has no constraints which might result in the management policy being deployed to all nodes. Please specify --no-constraints to confirm that this is acceptable.",
            "message": "The node management policy has no constraints which might result in the management policy being deployed to all nodes. Please specify --no-constraints to confirm that this is acceptable.",
            "translation": "The node management policy has no constraints which might result in the management policy being deployed to all nodes. Please specify --no-constraints to confirm that this is acceptable.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "An AgentAutoUpgradePolicy was defined, but a manifest was not defined. Please specify a manifest that is stored in the CSS before attempting to add an NMP with an AgentAutoUpgradePolicy.",
            "message": "An AgentAutoUpgradePolicy was defined, but a manifest was not defined. Please specify a manifest that is stored in the CSS before attempting to add an NMP with an AgentAutoUpgradePolicy.",
            "translation": "An AgentAutoUpgradePolicy was defined, but a manifest was not defined. Please specify a manifest that is stored in the CSS before attempting to add an NMP with an AgentAutoUpgradePolicy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "An AgentAutoUpgradePolicy was defined with manifest '{FullManifest}' which does not exist in org {ManOrg}.",
            "message": "An AgentAutoUpgradePolicy was defined with manifest '{FullManifest}' which does not exist in org {ManOrg}.",
            "translation": "An AgentAutoUpgradePolicy was defined with manifest '{FullManifest}' which does not exist in org {ManOrg}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FullManifest",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fullManifest"
                },
                {
                    "id": "ManOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "manOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node management policy {NmpOrg}/{NmpName} updated in the Horizon Exchange",
            "message": "Node management policy {NmpOrg}/{NmpName} updated in the Horizon Exchange",
            "translation": "Node management policy {NmpOrg}/{NmpName} updated in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpOrg"
                },
                {
                    "id": "NmpName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nmpName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot create node management policy {NmpOrg}/{NmpName}: {Msg}",
            "message": "Cannot create node management policy {NmpOrg}/{NmpName}: {Msg}",
            "translation": "Cannot create node management policy {NmpOrg}/{NmpName}: {Msg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpOrg"
                },
                {
                    "id": "NmpName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nmpName"
                },
                {
                    "id": "Msg",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "resp.Msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node management policy {NmpOrg}/{NmpName} added in the Horizon Exchange",
            "message": "Node management policy {NmpOrg}/{NmpName} added in the Horizon Exchange",
            "translation": "Node management policy {NmpOrg}/{NmpName} added in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpOrg"
                },
                {
                    "id": "NmpName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nmpName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove node management policy {NmpName} for org {NmpOrg} from the Horizon Exchange?",
            "message": "Are you sure you want to remove node management policy {NmpName} for org {NmpOrg} from the Horizon Exchange?",
            "translation": "Are you sure you want to remove node management policy {NmpName} for org {NmpOrg} from the Horizon Exchange?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpName"
                },
                {
                    "id": "NmpOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nmpOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node management policy {NmpName} not found in org {NmpOrg}",
            "message": "Node management policy {NmpName} not found in org {NmpOrg}",
            "translation": "Node management policy {NmpName} not found in org {NmpOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpName"
                },
                {
                    "id": "NmpOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nmpOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node management policy {NmpOrg}/{NmpName} removed from the Horizon Exchange.",
            "message": "Node management policy {NmpOrg}/{NmpName} removed from the Horizon Exchange.",
            "translation": "Node management policy {NmpOrg}/{NmpName} removed from the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpOrg"
                },
                {
                    "id": "NmpName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nmpName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {NodeName} not found in org {NmpOrg}",
            "message": "Node {NodeName} not found in org {NmpOrg}",
            "translation": "Node {NodeName} not found in org {NmpOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeName"
                },
                {
                    "id": "NmpOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nmpOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Status for NMP {NmpName} not found in org {NmpOrg}",
            "message": "Status for NMP {NmpName} not found in org {NmpOrg}",
            "translation": "Status for NMP {NmpName} not found in org {NmpOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpName"
                },
                {
                    "id": "NmpOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nmpOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Status for NMP {NmpName} not found for node {NodeName} in org {NmpOrg}",
            "message": "Status for NMP {NmpName} not found for node {NodeName} in org {NmpOrg}",
            "translation": "Status for NMP {NmpName} not found for node {NodeName} in org {NmpOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpName"
                },
                {
                    "id": "NodeName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeName"
                },
                {
                    "id": "NmpOrg",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nmpOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to parse start time: {Err}. The start time must be in RFC3339 format or set to \"now\".",
            "message": "Failed to parse start time: {Err}. The start time must be in RFC3339 format or set to \"now\".",
            "translation": "Failed to parse start time: {Err}. The start time must be in RFC3339 format or set to \"now\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to parse start window: {Err}. The start window must be Integer.",
            "message": "Failed to parse start window: {Err}. The start window must be Integer.",
            "translation": "Failed to parse start window: {Err}. The start window must be Integer.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node management policy {NmpFullName} is already enabled in the Horizon Exchange",
            "message": "Node management policy {NmpFullName} is already enabled in the Horizon Exchange",
            "translation": "Node management policy {NmpFullName} is already enabled in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpFullName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpFullName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node management policy {NmpFullName} enabled in the Horizon Exchange",
            "message": "Node management policy {NmpFullName} enabled in the Horizon Exchange",
            "translation": "Node management policy {NmpFullName} enabled in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpFullName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpFullName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot enable node management policy {NmpFullName}: {Msg}",
            "message": "Cannot enable node management policy {NmpFullName}: {Msg}",
            "translation": "Cannot enable node management policy {NmpFullName}: {Msg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpFullName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpFullName"
                },
                {
                    "id": "Msg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "resp.Msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node management policy {NmpFullName} is already disabled in the Horizon Exchange",
            "message": "Node management policy {NmpFullName} is already disabled in the Horizon Exchange",
            "translation": "Node management policy {NmpFullName} is already disabled in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpFullName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpFullName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node management policy {NmpFullName} disabled in the Horizon Exchange",
            "message": "Node management policy {NmpFullName} disabled in the Horizon Exchange",
            "translation": "Node management policy {NmpFullName} disabled in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpFullName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpFullName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot disable node management policy {NmpFullName}: {Msg}",
            "message": "Cannot disable node management policy {NmpFullName}: {Msg}",
            "translation": "Cannot disable node management policy {NmpFullName}: {Msg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpFullName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpFullName"
                },
                {
                    "id": "Msg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "resp.Msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'exchange node list' output: {Err}",
            "message": "failed to marshal 'exchange node list' output: {Err}",
            "translation": "failed to marshal 'exchange node list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "if node or token are specified then they both must be specified",
            "message": "if node or token are specified then they both must be specified",
            "translation": "if node or token are specified then they both must be specified",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "do not specify both the -n flag and the node and token positional arguments. They mean the same thing.",
            "message": "do not specify both the -n flag and the node and token positional arguments. They mean the same thing.",
            "translation": "do not specify both the -n flag and the node and token positional arguments. They mean the same thing.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "either the node and token positional arguments, or the -n flag must be specified.",
            "message": "either the node and token positional arguments, or the -n flag must be specified.",
            "translation": "either the node and token positional arguments, or the -n flag must be specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "user '{User}' does not exist with the specified password.",
            "message": "user '{User}' does not exist with the specified password.",
            "translation": "user '{User}' does not exist with the specified password.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "User",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "user"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {NodeId} exists. Only the node token will be updated.",
            "message": "Node {NodeId} exists. Only the node token will be updated.",
            "translation": "Node {NodeId} exists. Only the node token will be updated.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The node arch and node type will be ignored if they are specified.",
            "message": "The node arch and node type will be ignored if they are specified.",
            "translation": "The node arch and node type will be ignored if they are specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "key '{OrgAndCredsorg_nodeId}' not found in exchange nodes output",
            "message": "key '{OrgAndCredsorg_nodeId}' not found in exchange nodes output",
            "translation": "key '{OrgAndCredsorg_nodeId}' not found in exchange nodes output",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OrgAndCredsorg_nodeId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cliutils.OrgAndCreds(org, nodeId)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "can not update existing node {NodeId} because it is owned by another user ({Owner})",
            "message": "can not update existing node {NodeId} because it is owned by another user ({Owner})",
            "translation": "can not update existing node {NodeId} because it is owned by another user ({Owner})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Owner",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "ourNode.Owner"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {NodeId} updated.",
            "message": "Node {NodeId} updated.",
            "translation": "Node {NodeId} updated.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {NodeId} created.",
            "message": "Node {NodeId} created.",
            "translation": "Node {NodeId} created.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {NodeOrg}/{Node} not found in the Horizon Exchange.",
            "message": "Node {NodeOrg}/{Node} not found in the Horizon Exchange.",
            "translation": "Node {NodeOrg}/{Node} not found in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeOrg"
                },
                {
                    "id": "Node",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal attribute: {Err}",
            "message": "failed to unmarshal attribute: {Err}",
            "translation": "failed to unmarshal attribute: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot update attribute {K}. Supported attributes are: userInput, pattern, heartbeatIntervals.",
            "message": "Cannot update attribute {K}. Supported attributes are: userInput, pattern, heartbeatIntervals.",
            "translation": "Cannot update attribute {K}. Supported attributes are: userInput, pattern, heartbeatIntervals.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "K",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "k"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal attribute input {V}: {Err}",
            "message": "failed to marshal attribute input {V}: {Err}",
            "translation": "failed to marshal attribute input {V}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "V",
                    "string": "%[1]s",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "v"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Expecting 1 exchange node, but get {Lennodes} nodes",
            "message": "Expecting 1 exchange node, but get {Lennodes} nodes",
            "translation": "Expecting 1 exchange node, but get {Lennodes} nodes",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Lennodes",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "len(nodes)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal pattern attribute input {V}: {Err}",
            "message": "failed to unmarshal pattern attribute input {V}: {Err}",
            "translation": "failed to unmarshal pattern attribute input {V}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "V",
                    "string": "%[1]s",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "v"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal heartbeat input {V}: {Err}",
            "message": "failed to unmarshal heartbeat input {V}: {Err}",
            "translation": "failed to unmarshal heartbeat input {V}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "V",
                    "string": "%[1]s",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "v"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating {K} for node {NodeOrg}/{Node} in the Horizon Exchange.",
            "message": "Updating {K} for node {NodeOrg}/{Node} in the Horizon Exchange.",
            "translation": "Updating {K} for node {NodeOrg}/{Node} in the Horizon Exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "K",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "k"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeOrg"
                },
                {
                    "id": "Node",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Attribute {K} updated.",
            "message": "Attribute {K} updated.",
            "translation": "Attribute {K} updated.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "K",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "k"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal exchange node {Device}: {Err}",
            "message": "failed to unmarshal exchange node {Device}: {Err}",
            "translation": "failed to unmarshal exchange node {Device}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Device",
                    "string": "%[1]s",
                    "type": "github.com/open-horizon/anax/exchange.Device",
                    "underlyingType": "struct{Token string \"json:\\\"token\\\"\"; Name string \"json:\\\"name\\\"\"; Owner string \"json:\\\"owner\\\"\"; NodeType string \"json:\\\"nodeType\\\"\"; ClusterNamespace string \"json:\\\"clusterNamespace,omitempty\\\"\"; IsNamespaceScoped bool \"json:\\\"isNamespaceScoped\\\"\"; Pattern string \"json:\\\"pattern\\\"\"; RegisteredServices []github.com/open-horizon/anax/exchange.Microservice \"json:\\\"registeredServices\\\"\"; MsgEndPoint string \"json:\\\"msgEndPoint\\\"\"; SoftwareVersions github.com/open-horizon/anax/exchange.SoftwareVersion \"json:\\\"softwareVersions\\\"\"; LastHeartbeat string \"json:\\\"lastHeartbeat\\\"\"; PublicKey string \"json:\\\"publicKey\\\"\"; Arch string \"json:\\\"arch\\\"\"; UserInput []github.com/open-horizon/anax/policy.UserInput \"json:\\\"userInput\\\"\"; HeartbeatIntv github.com/open-horizon/anax/exchange.HeartbeatIntervals \"json:\\\"heartbeatIntervals,omitempty\\\"\"; HAGroup string \"json:\\\"ha_group\\\"\"; LastUpdated string \"json:\\\"lastUpdated,omitempty\\\"\"}",
                    "argNum": 1,
                    "expr": "v"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Device will re-evaluate all agreements based on the update. Existing agreements might be cancelled and re-negotiated.",
            "message": "Device will re-evaluate all agreements based on the update. Existing agreements might be cancelled and re-negotiated.",
            "translation": "Device will re-evaluate all agreements based on the update. Existing agreements might be cancelled and re-negotiated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "-n is mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
            "message": "-n is mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
            "translation": "-n is mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Please specify both node and token.",
            "message": "Please specify both node and token.",
            "translation": "Please specify both node and token.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node id and token are valid.",
            "message": "Node id and token are valid.",
            "translation": "Node id and token are valid.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove node {NodeOrg}/{Node} from the Horizon Exchange?",
            "message": "Are you sure you want to remove node {NodeOrg}/{Node} from the Horizon Exchange?",
            "translation": "Are you sure you want to remove node {NodeOrg}/{Node} from the Horizon Exchange?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeOrg"
                },
                {
                    "id": "Node",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "node '{NodeOrg}/{Node}' not found.",
            "message": "node '{NodeOrg}/{Node}' not found.",
            "translation": "node '{NodeOrg}/{Node}' not found.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeOrg"
                },
                {
                    "id": "Node",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal node policy output: {Err}",
            "message": "failed to marshal node policy output: {Err}",
            "translation": "failed to marshal node policy output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Incorrect policy format in file {JsonFilePath}: {Err}",
            "message": "Incorrect policy format in file {JsonFilePath}: {Err}",
            "translation": "Incorrect policy format in file {JsonFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JsonFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "jsonFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Note: No properties and constraints are specified under 'deployment' attribute. The top level properties and constraints will be used.",
            "message": "Note: No properties and constraints are specified under 'deployment' attribute. The top level properties and constraints will be used.",
            "translation": "Note: No properties and constraints are specified under 'deployment' attribute. The top level properties and constraints will be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Updating Node policy and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
            "message": "Updating Node policy and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
            "translation": "Updating Node policy and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node policy updated.",
            "message": "Node policy updated.",
            "translation": "Node policy updated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Warning: This command is deprecated. It will continue to be supported until the next major release. Please use 'hzn exchange node addpolicy' to update the node policy.",
            "message": "Warning: This command is deprecated. It will continue to be supported until the next major release. Please use 'hzn exchange node addpolicy' to update the node policy.",
            "translation": "Warning: This command is deprecated. It will continue to be supported until the next major release. Please use 'hzn exchange node addpolicy' to update the node policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node policy not found for node {NodeOrg}/{Node}",
            "message": "Node policy not found for node {NodeOrg}/{Node}",
            "translation": "Node policy not found for node {NodeOrg}/{Node}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeOrg"
                },
                {
                    "id": "Node",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal attribute input {Attribute} for {AttribName}: {Err}",
            "message": "failed to unmarshal attribute input {Attribute} for {AttribName}: {Err}",
            "translation": "failed to unmarshal attribute input {Attribute} for {AttribName}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attribute",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "attribute"
                },
                {
                    "id": "AttribName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "attribName"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid property list {NewProp}: {Err}",
            "message": "Invalid property list {NewProp}: {Err}",
            "translation": "Invalid property list {NewProp}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NewProp",
                    "string": "%[1]s",
                    "type": "github.com/open-horizon/anax/externalpolicy.PropertyList",
                    "underlyingType": "[]github.com/open-horizon/anax/externalpolicy.Property",
                    "argNum": 1,
                    "expr": "newProp"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal attribute input {Attribute} for {AttribName}s: {Err}",
            "message": "failed to unmarshal attribute input {Attribute} for {AttribName}s: {Err}",
            "translation": "failed to unmarshal attribute input {Attribute} for {AttribName}s: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attribute",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "attribute"
                },
                {
                    "id": "AttribName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "attribName"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid constraint expression {NewConstr}: {Err}",
            "message": "Invalid constraint expression {NewConstr}: {Err}",
            "translation": "Invalid constraint expression {NewConstr}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NewConstr",
                    "string": "%[1]s",
                    "type": "github.com/open-horizon/anax/externalpolicy.ConstraintExpression",
                    "underlyingType": "[]string",
                    "argNum": 1,
                    "expr": "newConstr"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid deployment attribute {ExternPol}: {Err}",
            "message": "Invalid deployment attribute {ExternPol}: {Err}",
            "translation": "Invalid deployment attribute {ExternPol}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternPol",
                    "string": "%[1]s",
                    "type": "github.com/open-horizon/anax/externalpolicy.ExternalPolicy",
                    "underlyingType": "struct{Properties github.com/open-horizon/anax/externalpolicy.PropertyList \"json:\\\"properties\\\"\"; Constraints github.com/open-horizon/anax/externalpolicy.ConstraintExpression \"json:\\\"constraints\\\"\"}",
                    "argNum": 1,
                    "expr": "externPol"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid management attribute {ExternPol}: {Err}",
            "message": "Invalid management attribute {ExternPol}: {Err}",
            "translation": "Invalid management attribute {ExternPol}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternPol",
                    "string": "%[1]s",
                    "type": "github.com/open-horizon/anax/externalpolicy.ExternalPolicy",
                    "underlyingType": "struct{Properties github.com/open-horizon/anax/externalpolicy.PropertyList \"json:\\\"properties\\\"\"; Constraints github.com/open-horizon/anax/externalpolicy.ConstraintExpression \"json:\\\"constraints\\\"\"}",
                    "argNum": 1,
                    "expr": "externPol"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to find valid attribute to update in input {Attribute}. Valid attribute names are properties, constraints, deployment and management.",
            "message": "Failed to find valid attribute to update in input {Attribute}. Valid attribute names are properties, constraints, deployment and management.",
            "translation": "Failed to find valid attribute to update in input {Attribute}. Valid attribute names are properties, constraints, deployment and management.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attribute",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "attribute"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating Node policy {AttribName} attribute for node {Node} in the horizon exchange and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
            "message": "Updating Node policy {AttribName} attribute for node {Node} in the horizon exchange and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
            "translation": "Updating Node policy {AttribName} attribute for node {Node} in the horizon exchange and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AttribName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "attribName"
                },
                {
                    "id": "Node",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node policy {AttribName} attribute updated for node {Node} in the horizon exchange.",
            "message": "Node policy {AttribName} attribute updated for node {Node} in the horizon exchange.",
            "translation": "Node policy {AttribName} attribute updated for node {Node} in the horizon exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AttribName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "attribName"
                },
                {
                    "id": "Node",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove node policy for {NodeOrg}/{Node} from the Horizon Exchange?",
            "message": "Are you sure you want to remove node policy for {NodeOrg}/{Node} from the Horizon Exchange?",
            "translation": "Are you sure you want to remove node policy for {NodeOrg}/{Node} from the Horizon Exchange?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeOrg"
                },
                {
                    "id": "Node",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removing Node policy and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated.",
            "message": "Removing Node policy and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated.",
            "translation": "Removing Node policy and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node policy removed.",
            "message": "Node policy removed.",
            "translation": "Node policy removed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange node listerrors' output: {Err}",
            "message": "failed to marshal 'hzn exchange node listerrors' output: {Err}",
            "translation": "failed to marshal 'hzn exchange node listerrors' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "node status not found for node '{NodeOrg}/{Node}'.",
            "message": "node status not found for node '{NodeOrg}/{Node}'.",
            "translation": "node status not found for node '{NodeOrg}/{Node}'.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeOrg"
                },
                {
                    "id": "Node",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "node '{NodeName}' is not registered with the exchange in org {NodeOrg}",
            "message": "node '{NodeName}' is not registered with the exchange in org {NodeOrg}",
            "translation": "node '{NodeName}' is not registered with the exchange in org {NodeOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeName"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node policy for {NodeName} not found in org {NodeOrg}",
            "message": "Node policy for {NodeName} not found in org {NodeOrg}",
            "translation": "Node policy for {NodeName} not found in org {NodeOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeName"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Statuses for node {NodeName} not found in org {NodeOrg}",
            "message": "Statuses for node {NodeName} not found in org {NodeOrg}",
            "translation": "Statuses for node {NodeName} not found in org {NodeOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeName"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {NodeName} does not contain a status for {NmpName} in org {NodeOrg}",
            "message": "Node {NodeName} does not contain a status for {NmpName} in org {NodeOrg}",
            "translation": "Node {NodeName} does not contain a status for {NmpName} in org {NodeOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeName"
                },
                {
                    "id": "NmpName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nmpName"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No management status found for node {NodeName} in org {NodeOrg}",
            "message": "No management status found for node {NodeName} in org {NodeOrg}",
            "translation": "No management status found for node {NodeName} in org {NodeOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeName"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node management status for {NmpStatusNameNoOrg} is reset.",
            "message": "Node management status for {NmpStatusNameNoOrg} is reset.",
            "translation": "Node management status for {NmpStatusNameNoOrg} is reset.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpStatusNameNoOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpStatusNameNoOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The the Horizon agent for node {NodeOrg}/{NodeName} will re-evaluate the management policies.",
            "message": "The the Horizon agent for node {NodeOrg}/{NodeName} will re-evaluate the management policies.",
            "translation": "The the Horizon agent for node {NodeOrg}/{NodeName} will re-evaluate the management policies.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeOrg"
                },
                {
                    "id": "NodeName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Verifying userInputs with the node pattern {Pattern}.",
            "message": "Verifying userInputs with the node pattern {Pattern}.",
            "translation": "Verifying userInputs with the node pattern {Pattern}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "node.Pattern"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error varifying the given user input with the node pattern {Pattern}:",
            "message": "Error varifying the given user input with the node pattern {Pattern}:",
            "translation": "Error varifying the given user input with the node pattern {Pattern}:",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "node.Pattern"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatible",
            "message": "Compatible",
            "translation": "Compatible",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unable to update the node because of the above error.",
            "message": "Unable to update the node because of the above error.",
            "translation": "Unable to update the node because of the above error.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Verifying userInputs for node using policy.",
            "message": "Verifying userInputs for node using policy.",
            "translation": "Verifying userInputs for node using policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Start validating userinput {ServiceOrg}, {ServiceUrl}, {ServiceVersionRange}, {ServiceArch}",
            "message": "Start validating userinput {ServiceOrg}, {ServiceUrl}, {ServiceVersionRange}, {ServiceArch}",
            "translation": "Start validating userinput {ServiceOrg}, {ServiceUrl}, {ServiceVersionRange}, {ServiceArch}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceOrg"
                },
                {
                    "id": "ServiceUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceUrl"
                },
                {
                    "id": "ServiceVersionRange",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceVersionRange"
                },
                {
                    "id": "ServiceArch",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "serviceArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to validate exchange node userInput, error: {}",
            "message": "Unable to validate exchange node userInput, error: {}",
            "translation": "Unable to validate exchange node userInput, error: {}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "\"\""
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to validate exchange node userInput, message: {Message}, error: {Err}",
            "message": "Unable to validate exchange node userInput, message: {Message}, error: {Err}",
            "translation": "Unable to validate exchange node userInput, message: {Message}, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Message",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "message"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to validate exchange node userInput, message: {Message}",
            "message": "Unable to validate exchange node userInput, message: {Message}",
            "translation": "Unable to validate exchange node userInput, message: {Message}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Message",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "message"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to validate exchange node userInput: {Reasont}",
            "message": "Unable to validate exchange node userInput: {Reasont}",
            "translation": "Unable to validate exchange node userInput: {Reasont}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Reasont",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "reason_t"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "validate exchange node/userinput {Err}",
            "message": "validate exchange node/userinput {Err}",
            "translation": "validate exchange node/userinput {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "org '{TheOrg}' not found.",
            "message": "org '{TheOrg}' not found.",
            "translation": "org '{TheOrg}' not found.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TheOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "theOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'exchange org list' output: {Err}",
            "message": "failed to marshal 'exchange org list' output: {Err}",
            "translation": "failed to marshal 'exchange org list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid organization. Organization cannot contain: [ _ , \u003cspace\u003e ' ?]",
            "message": "Invalid organization. Organization cannot contain: [ _ , \u003cspace\u003e ' ?]",
            "translation": "Invalid organization. Organization cannot contain: [ _ , \u003cspace\u003e ' ?]",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid input for {Negatives}. Negative integer is not allowed.",
            "message": "Invalid input for {Negatives}. Negative integer is not allowed.",
            "translation": "Invalid input for {Negatives}. Negative integer is not allowed.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Negatives",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "negatives"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The value for --heartbeatmin must be less than or equal to the value for --heartbeatmax.",
            "message": "The value for --heartbeatmin must be less than or equal to the value for --heartbeatmax.",
            "translation": "The value for --heartbeatmin must be less than or equal to the value for --heartbeatmax.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid input for --max-nodes. Negative integer is not allowed.",
            "message": "Invalid input for --max-nodes. Negative integer is not allowed.",
            "translation": "Invalid input for --max-nodes. Negative integer is not allowed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization {TheOrg} is successfully added to the Exchange.",
            "message": "Organization {TheOrg} is successfully added to the Exchange.",
            "translation": "Organization {TheOrg} is successfully added to the Exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TheOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "theOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No agbot found in the Exchange.",
            "message": "No agbot found in the Exchange.",
            "translation": "No agbot found in the Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Agbot {Agbot} is responsible for deploying services in org {TheOrg}",
            "message": "Agbot {Agbot} is responsible for deploying services in org {TheOrg}",
            "translation": "Agbot {Agbot} is responsible for deploying services in org {TheOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Agbot",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "agbot"
                },
                {
                    "id": "TheOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "theOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Organization {TheOrg} is successfully added to MMS.",
            "message": "Organization {TheOrg} is successfully added to MMS.",
            "translation": "Organization {TheOrg} is successfully added to MMS.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TheOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "theOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid input for --max-nodes. Only -1, 0 and positive integers are allowed.",
            "message": "Invalid input for --max-nodes. Only -1, 0 and positive integers are allowed.",
            "translation": "Invalid input for --max-nodes. Only -1, 0 and positive integers are allowed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization {TheOrg} is successfully updated.",
            "message": "Organization {TheOrg} is successfully updated.",
            "translation": "Organization {TheOrg} is successfully updated.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TheOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "theOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: this will also delete all Exchange resources owned by this org (nodes, services, patterns, etc). Are you sure you want to remove org {TheOrg} from the Horizon Exchange and the MMS?",
            "message": "Warning: this will also delete all Exchange resources owned by this org (nodes, services, patterns, etc). Are you sure you want to remove org {TheOrg} from the Horizon Exchange and the MMS?",
            "translation": "Warning: this will also delete all Exchange resources owned by this org (nodes, services, patterns, etc). Are you sure you want to remove org {TheOrg} from the Horizon Exchange and the MMS?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TheOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "theOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Using agbot {Agbot}",
            "message": "Using agbot {Agbot}",
            "translation": "Using agbot {Agbot}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Agbot",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot unmarshal served pattern",
            "message": "Cannot unmarshal served pattern",
            "translation": "Cannot unmarshal served pattern",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Removing pattern {PatternId} from agbot {Agbot}",
            "message": "Removing pattern {PatternId} from agbot {Agbot}",
            "translation": "Removing pattern {PatternId} from agbot {Agbot}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatternId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patternId"
                },
                {
                    "id": "Agbot",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removing policy {PolId} from agbot {Agbot}",
            "message": "Removing policy {PolId} from agbot {Agbot}",
            "translation": "Removing policy {PolId} from agbot {Agbot}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polId"
                },
                {
                    "id": "Agbot",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deleting org {TheOrg} from the Horizon Exchange...",
            "message": "Deleting org {TheOrg} from the Horizon Exchange...",
            "translation": "Deleting org {TheOrg} from the Horizon Exchange...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TheOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "theOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Org {TheOrg} is deleted from the Horizon Exchange",
            "message": "Org {TheOrg} is deleted from the Horizon Exchange",
            "translation": "Org {TheOrg} is deleted from the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TheOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "theOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deleting org {TheOrg} from MMS...",
            "message": "Deleting org {TheOrg} from MMS...",
            "translation": "Deleting org {TheOrg} from MMS...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TheOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "theOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Org {TheOrg} is deleted from MMS",
            "message": "Org {TheOrg} is deleted from MMS",
            "translation": "Org {TheOrg} is deleted from MMS",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TheOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "theOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Organization {TheOrg} is successfully removed.",
            "message": "Organization {TheOrg} is successfully removed.",
            "translation": "Organization {TheOrg} is successfully removed.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TheOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "theOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid input for {JoinnegFlags_}. Only -1, 0 and positive integers are allowed.",
            "message": "Invalid input for {JoinnegFlags_}. Only -1, 0 and positive integers are allowed.",
            "translation": "Invalid input for {JoinnegFlags_}. Only -1, 0 and positive integers are allowed.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JoinnegFlags_",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "strings.Join(negFlags, \",\")"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The value for heartbeat minInterval ({Min}) must be less than or equal to the value for heartbeat maxInterval ({Max}).",
            "message": "The value for heartbeat minInterval ({Min}) must be less than or equal to the value for heartbeat maxInterval ({Max}).",
            "translation": "The value for heartbeat minInterval ({Min}) must be less than or equal to the value for heartbeat maxInterval ({Max}).",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Min",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "min"
                },
                {
                    "id": "Max",
                    "string": "%[2]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "max"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Empty string is specified with -t, all tags will be removed.",
            "message": "Empty string is specified with -t, all tags will be removed.",
            "translation": "Empty string is specified with -t, all tags will be removed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid input for -t or --tag flag: {Tag}. The valid format is '-t mytag=myvalue' or '--tag mytag=myvalue'.",
            "message": "Invalid input for -t or --tag flag: {Tag}. The valid format is '-t mytag=myvalue' or '--tag mytag=myvalue'.",
            "translation": "Invalid input for -t or --tag flag: {Tag}. The valid format is '-t mytag=myvalue' or '--tag mytag=myvalue'.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Tag",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "tag"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Agbot '{AgOrg}/{Ag1}' specified by -a cannot be not found in the Exchange",
            "message": "Agbot '{AgOrg}/{Ag1}' specified by -a cannot be not found in the Exchange",
            "translation": "Agbot '{AgOrg}/{Ag1}' specified by -a cannot be not found in the Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AgOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "agOrg"
                },
                {
                    "id": "Ag1",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "ag1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'exchange pattern list' output: {Err}",
            "message": "failed to marshal 'exchange pattern list' output: {Err}",
            "translation": "failed to marshal 'exchange pattern list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "pattern '{Pattern}' not found in org {PatOrg}",
            "message": "pattern '{Pattern}' not found in org {PatOrg}",
            "translation": "pattern '{Pattern}' not found in org {PatOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pattern"
                },
                {
                    "id": "PatOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange pattern list' output: {Err}",
            "message": "failed to marshal 'hzn exchange pattern list' output: {Err}",
            "translation": "failed to marshal 'hzn exchange pattern list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pattern {Pattern} not found in org {PatOrg}",
            "message": "Pattern {Pattern} not found in org {PatOrg}",
            "translation": "Pattern {Pattern} not found in org {PatOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pattern"
                },
                {
                    "id": "PatOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid format for services: {Err1}",
            "message": "Invalid format for services: {Err1}",
            "translation": "Invalid format for services: {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err1",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error checking service types for pattern {Pname}. {Err}",
            "message": "Error checking service types for pattern {Pname}. {Err}",
            "translation": "Error checking service types for pattern {Pname}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pname",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "p_name"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'clusterNamespace' is specified, but no service has cluster deployment for pattern {Pname}.",
            "message": "'clusterNamespace' is specified, but no service has cluster deployment for pattern {Pname}.",
            "translation": "'clusterNamespace' is specified, but no service has cluster deployment for pattern {Pname}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pname",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "p_name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pattern attribute to be updated is not found in the input file. Supported attributes are: label, description, clusterNamespace, services, userInput and secretBinding.",
            "message": "Pattern attribute to be updated is not found in the input file. Supported attributes are: label, description, clusterNamespace, services, userInput and secretBinding.",
            "translation": "Pattern attribute to be updated is not found in the input file. Supported attributes are: label, description, clusterNamespace, services, userInput and secretBinding.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pattern {PatOrg}/{Pattern} updated in the Horizon Exchange",
            "message": "Pattern {PatOrg}/{Pattern} updated in the Horizon Exchange",
            "translation": "Pattern {PatOrg}/{Pattern} updated in the Horizon Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patOrg"
                },
                {
                    "id": "Pattern",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pattern"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal body for {D}: {Err}",
            "message": "failed to marshal body for {D}: {Err}",
            "translation": "failed to marshal body for {D}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "D",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "d"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal json for deployment overrides field {StringjsonBytes}: {Err}",
            "message": "failed to unmarshal json for deployment overrides field {StringjsonBytes}: {Err}",
            "translation": "failed to unmarshal json for deployment overrides field {StringjsonBytes}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "StringjsonBytes",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(jsonBytes)"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the org specified in the input file ({Org}) must match the org specified on the command line ({Org_1})",
            "message": "the org specified in the input file ({Org}) must match the org specified on the command line ({Org_1})",
            "translation": "the org specified in the input file ({Org}) must match the org specified on the command line ({Org_1})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patFile.Org"
                },
                {
                    "id": "Org_1",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the pattern definition ({Services}) must contain services, unable to proceed",
            "message": "the pattern definition ({Services}) must contain services, unable to proceed",
            "translation": "the pattern definition ({Services}) must contain services, unable to proceed",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Services",
                    "string": "%[1]s",
                    "type": "[]github.com/open-horizon/anax/common.ServiceReferenceFile",
                    "underlyingType": "[]github.com/open-horizon/anax/common.ServiceReferenceFile",
                    "argNum": 1,
                    "expr": "patFile.Services"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error checking service types for pattern. {Err}",
            "message": "Error checking service types for pattern. {Err}",
            "translation": "Error checking service types for pattern. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'clusterNamespace' is specified, but no service has cluster deployment for pattern.",
            "message": "'clusterNamespace' is specified, but no service has cluster deployment for pattern.",
            "translation": "'clusterNamespace' is specified, but no service has cluster deployment for pattern.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid format in pattern file {JsonFilePath}: {Err}",
            "message": "Invalid format in pattern file {JsonFilePath}: {Err}",
            "translation": "Invalid format in pattern file {JsonFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JsonFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "jsonFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Signing deployment_overrides field in service {I__1}, serviceVersion number {J__1}",
            "message": "Signing deployment_overrides field in service {I__1}, serviceVersion number {J__1}",
            "translation": "Signing deployment_overrides field in service {I__1}, serviceVersion number {J__1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I__1",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i + 1"
                },
                {
                    "id": "J__1",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "j + 1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal deployment_overrides field in service {I__1}, serviceVersion number {J__1}: {Err}",
            "message": "failed to marshal deployment_overrides field in service {I__1}, serviceVersion number {J__1}: {Err}",
            "translation": "failed to marshal deployment_overrides field in service {I__1}, serviceVersion number {J__1}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I__1",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i + 1"
                },
                {
                    "id": "J__1",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "j + 1"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem signing the deployment_overrides string: {Err}",
            "message": "problem signing the deployment_overrides string: {Err}",
            "translation": "problem signing the deployment_overrides string: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating {ExchId} in the Exchange...",
            "message": "Updating {ExchId} in the Exchange...",
            "translation": "Updating {ExchId} in the Exchange...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating {ExchId} in the Exchange...",
            "message": "Creating {ExchId} in the Exchange...",
            "translation": "Creating {ExchId} in the Exchange...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Storing {NewPubKeyName} with the pattern in the Exchange...",
            "message": "Storing {NewPubKeyName} with the pattern in the Exchange...",
            "translation": "Storing {NewPubKeyName} with the pattern in the Exchange...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NewPubKeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "newPubKeyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "key '{Org____pattern}' not found in resources returned from exchange",
            "message": "key '{Org____pattern}' not found in resources returned from exchange",
            "translation": "key '{Org____pattern}' not found in resources returned from exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org____pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org + \"/\" + pattern"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1}",
            "message": "verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1}",
            "translation": "verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I__1",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i + 1"
                },
                {
                    "id": "J__1",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "j + 1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1} with {KeyFilePath}: {Err}",
            "message": "problem verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1} with {KeyFilePath}: {Err}",
            "translation": "problem verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1} with {KeyFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I__1",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i + 1"
                },
                {
                    "id": "J__1",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "j + 1"
                },
                {
                    "id": "KeyFilePath",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "keyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deployment_overrides string in service {I__1}, serviceVersion number {J__1} was not signed with the private key associated with this public key {KeyFilePath}.",
            "message": "Deployment_overrides string in service {I__1}, serviceVersion number {J__1} was not signed with the private key associated with this public key {KeyFilePath}.",
            "translation": "Deployment_overrides string in service {I__1}, serviceVersion number {J__1} was not signed with the private key associated with this public key {KeyFilePath}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I__1",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i + 1"
                },
                {
                    "id": "J__1",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "j + 1"
                },
                {
                    "id": "KeyFilePath",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "keyFilePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "All signatures verified",
            "message": "All signatures verified",
            "translation": "All signatures verified",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove pattern {Org}/{Pattern} from the Horizon Exchange?",
            "message": "Are you sure you want to remove pattern {Org}/{Pattern} from the Horizon Exchange?",
            "translation": "Are you sure you want to remove pattern {Org}/{Pattern} from the Horizon Exchange?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Pattern",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pattern"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "key '{KeyName}' not found",
            "message": "key '{KeyName}' not found",
            "translation": "key '{KeyName}' not found",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to validate the secret binding. {Err}",
            "message": "Failed to validate the secret binding. {Err}",
            "translation": "Failed to validate the secret binding. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Note: The following secret bindings are not required by any services for this pattern:",
            "message": "Note: The following secret bindings are not required by any services for this pattern:",
            "translation": "Note: The following secret bindings are not required by any services for this pattern:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Note: The fully qualified binding secret name is 'openhorizon/\u003cnode_org\u003e/\u003csecret_binding_name\u003e'. The binding secret cannot be verified in the secret manager for a public pattern because the node organization can be different from the pattern organization.",
            "message": "Note: The fully qualified binding secret name is 'openhorizon/\u003cnode_org\u003e/\u003csecret_binding_name\u003e'. The binding secret cannot be verified in the secret manager for a public pattern because the node organization can be different from the pattern organization.",
            "translation": "Note: The fully qualified binding secret name is 'openhorizon/\u003cnode_org\u003e/\u003csecret_binding_name\u003e'. The binding secret cannot be verified in the secret manager for a public pattern because the node organization can be different from the pattern organization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "No secret is defined for any of the services. The secret binding is not needed: {SecretBinding}.",
            "message": "No secret is defined for any of the services. The secret binding is not needed: {SecretBinding}.",
            "translation": "No secret is defined for any of the services. The secret binding is not needed: {SecretBinding}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecretBinding",
                    "string": "%[1]v",
                    "type": "[]github.com/open-horizon/anax/exchangecommon.SecretBinding",
                    "underlyingType": "[]github.com/open-horizon/anax/exchangecommon.SecretBinding",
                    "argNum": 1,
                    "expr": "secretBinding"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "-f can only be used when one service is specified.",
            "message": "-f can only be used when one service is specified.",
            "translation": "-f can only be used when one service is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "-F can only be used when -f is specified.",
            "message": "-F can only be used when -f is specified.",
            "translation": "-F can only be used when -f is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange service list' output: {Err}",
            "message": "failed to marshal 'hzn exchange service list' output: {Err}",
            "translation": "failed to marshal 'hzn exchange service list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "service '{Service}' not found in org {SvcOrg}",
            "message": "service '{Service}' not found in org {SvcOrg}",
            "translation": "service '{Service}' not found in org {SvcOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Service",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "service"
                },
                {
                    "id": "SvcOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svcOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal ClusterDeployment in 'hzn exchange service list' output: {Err}",
            "message": "failed to unmarshal ClusterDeployment in 'hzn exchange service list' output: {Err}",
            "translation": "failed to unmarshal ClusterDeployment in 'hzn exchange service list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal truncked ClusterDeployment in 'hzn exchange service list' output: {Err}",
            "message": "failed to marshal truncked ClusterDeployment in 'hzn exchange service list' output: {Err}",
            "translation": "failed to marshal truncked ClusterDeployment in 'hzn exchange service list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Ignoring -f because the clusterDeployment attribute is empty for this service.",
            "message": "Ignoring -f because the clusterDeployment attribute is empty for this service.",
            "translation": "Ignoring -f because the clusterDeployment attribute is empty for this service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Flag -K cannot be specified without -k flag.",
            "message": "Flag -K cannot be specified without -k flag.",
            "translation": "Flag -K cannot be specified without -k flag.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Flags -I and -P are mutually exclusive.",
            "message": "Flags -I and -P are mutually exclusive.",
            "translation": "Flags -I and -P are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Need to set 'true' or 'false' when specifying flag --public.",
            "message": "Need to set 'true' or 'false' when specifying flag --public.",
            "translation": "Need to set 'true' or 'false' when specifying flag --public.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to parse {Public}: {Err}",
            "message": "failed to parse {Public}: {Err}",
            "translation": "failed to parse {Public}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Public",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "public"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error validating the input service: {Err}",
            "message": "Error validating the input service: {Err}",
            "translation": "Error validating the input service: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Adding service policy for service: {ServiceAddPolicyService}",
            "message": "Adding service policy for service: {ServiceAddPolicyService}",
            "translation": "Adding service policy for service: {ServiceAddPolicyService}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceAddPolicyService",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceAddPolicyService"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service policy added for service: {ServiceAddPolicyService}",
            "message": "Service policy added for service: {ServiceAddPolicyService}",
            "translation": "Service policy added for service: {ServiceAddPolicyService}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceAddPolicyService",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceAddPolicyService"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service {Org}/{ExchId} exists in the Exchange, do you want to overwrite it?",
            "message": "Service {Org}/{ExchId} exists in the Exchange, do you want to overwrite it?",
            "translation": "Service {Org}/{ExchId} exists in the Exchange, do you want to overwrite it?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "ExchId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "exchId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Storing {PubKeyNameToStore} with the service in the Exchange...",
            "message": "Storing {PubKeyNameToStore} with the service in the Exchange...",
            "translation": "Storing {PubKeyNameToStore} with the service in the Exchange...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PubKeyNameToStore",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pubKeyNameToStore"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error: registry-token value of '{RegTok}' is not in the required format: registry:user:token. Not storing that in the Horizon exchange.",
            "message": "Error: registry-token value of '{RegTok}' is not in the required format: registry:user:token. Not storing that in the Horizon exchange.",
            "translation": "Error: registry-token value of '{RegTok}' is not in the required format: registry:user:token. Not storing that in the Horizon exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RegTok",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "regTok"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to get container images from deployment configuration: {Err}",
            "message": "unable to get container images from deployment configuration: {Err}",
            "translation": "unable to get container images from deployment configuration: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "If you haven't already, push your docker images to the registry:",
            "message": "If you haven't already, push your docker images to the registry:",
            "translation": "If you haven't already, push your docker images to the registry:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "the '{Tagdsig}' field is non-blank, but being ignored, because the '{Tagd}' field is null",
            "message": "the '{Tagdsig}' field is non-blank, but being ignored, because the '{Tagd}' field is null",
            "translation": "the '{Tagdsig}' field is non-blank, but being ignored, because the '{Tagd}' field is null",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Tagdsig",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "tag_dsig"
                },
                {
                    "id": "Tagd",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "tag_d"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Signing service...",
            "message": "Signing service...",
            "translation": "Signing service...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to sign deployment config: {Err}",
            "message": "unable to sign deployment config: {Err}",
            "translation": "unable to sign deployment config: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the '{Tagd}' field is a non-empty string, which implies this service is pre-signed, but the '{Tagdsig}' field is empty",
            "message": "the '{Tagd}' field is a non-empty string, which implies this service is pre-signed, but the '{Tagdsig}' field is empty",
            "translation": "the '{Tagd}' field is a non-empty string, which implies this service is pre-signed, but the '{Tagdsig}' field is empty",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Tagd",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "tag_d"
                },
                {
                    "id": "Tagdsig",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "tag_dsig"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{Tagd}' field is invalid type. It must be either a json object or a string (for pre-signed)",
            "message": "'{Tagd}' field is invalid type. It must be either a json object or a string (for pre-signed)",
            "translation": "'{Tagd}' field is invalid type. It must be either a json object or a string (for pre-signed)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Tagd",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "tag_d"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error verifying deployment string with {KeyFilePath}: {Err}",
            "message": "error verifying deployment string with {KeyFilePath}: {Err}",
            "translation": "error verifying deployment string with {KeyFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deployment string was not signed with the private key associated with this public key {KeyFilePath}.",
            "message": "Deployment string was not signed with the private key associated with this public key {KeyFilePath}.",
            "translation": "Deployment string was not signed with the private key associated with this public key {KeyFilePath}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFilePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error verifying cluster deployment string with {KeyFilePath}: {Err}",
            "message": "error verifying cluster deployment string with {KeyFilePath}: {Err}",
            "translation": "error verifying cluster deployment string with {KeyFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cluster deployment string was not signed with the private key associated with this public key {KeyFilePath}.",
            "message": "Cluster deployment string was not signed with the private key associated with this public key {KeyFilePath}.",
            "translation": "Cluster deployment string was not signed with the private key associated with this public key {KeyFilePath}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFilePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove service {Svcorg}/{Service} from the Horizon Exchange?",
            "message": "Are you sure you want to remove service {Svcorg}/{Service} from the Horizon Exchange?",
            "translation": "Are you sure you want to remove service {Svcorg}/{Service} from the Horizon Exchange?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Svcorg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcorg"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "keys not found",
            "message": "keys not found",
            "translation": "keys not found",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "docker auth {AuthId} not found",
            "message": "docker auth {AuthId} not found",
            "translation": "docker auth {AuthId} not found",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AuthId",
                    "string": "%[1]d",
                    "type": "uint",
                    "underlyingType": "uint",
                    "argNum": 1,
                    "expr": "authId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "docker auths not found",
            "message": "docker auths not found",
            "translation": "docker auths not found",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "service '{Svcorg}/{Service}' not found.",
            "message": "service '{Svcorg}/{Service}' not found.",
            "translation": "service '{Svcorg}/{Service}' not found.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Svcorg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcorg"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange service listpolicy' output: {Err}",
            "message": "failed to marshal 'hzn exchange service listpolicy' output: {Err}",
            "translation": "failed to marshal 'hzn exchange service listpolicy' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Adding built-in property values...",
            "message": "Adding built-in property values...",
            "translation": "Adding built-in property values...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The following property values will be overridden: service.url, service.name, service.org, service.version, service.arch",
            "message": "The following property values will be overridden: service.url, service.name, service.org, service.version, service.arch",
            "translation": "The following property values will be overridden: service.url, service.name, service.org, service.version, service.arch",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Updating Service policy and re-evaluating all agreements based on this Service policy. Existing agreements might be cancelled and re-negotiated.",
            "message": "Updating Service policy and re-evaluating all agreements based on this Service policy. Existing agreements might be cancelled and re-negotiated.",
            "translation": "Updating Service policy and re-evaluating all agreements based on this Service policy. Existing agreements might be cancelled and re-negotiated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Service policy updated.",
            "message": "Service policy updated.",
            "translation": "Service policy updated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove service policy for {Svcorg}/{Service} from the Horizon Exchange?",
            "message": "Are you sure you want to remove service policy for {Svcorg}/{Service} from the Horizon Exchange?",
            "translation": "Are you sure you want to remove service policy for {Svcorg}/{Service} from the Horizon Exchange?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Svcorg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcorg"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removing Service policy and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated.",
            "message": "Removing Service policy and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated.",
            "translation": "Removing Service policy and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Service policy removed.",
            "message": "Service policy removed.",
            "translation": "Service policy removed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "File {FileName} already exists, do you want to overwrite?",
            "message": "File {FileName} already exists, do you want to overwrite?",
            "translation": "File {FileName} already exists, do you want to overwrite?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to create file {FileName}. {Err}",
            "message": "Failed to create file {FileName}. {Err}",
            "translation": "Failed to create file {FileName}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to save the clusterDeployment operator yaml to file {FileName}. {Err}",
            "message": "Failed to save the clusterDeployment operator yaml to file {FileName}. {Err}",
            "translation": "Failed to save the clusterDeployment operator yaml to file {FileName}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The clusterDeployment operator yaml archive is saved to file {FileName}",
            "message": "The clusterDeployment operator yaml archive is saved to file {FileName}",
            "translation": "The clusterDeployment operator yaml archive is saved to file {FileName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error getting kube deployment configuration: {Err}",
            "message": "error getting kube deployment configuration: {Err}",
            "translation": "error getting kube deployment configuration: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error decoding the cluster deployment configuration: {Err}",
            "message": "error decoding the cluster deployment configuration: {Err}",
            "translation": "error decoding the cluster deployment configuration: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "service id does not exist in the Exchange: {SvcOrg}/{SvcId}",
            "message": "service id does not exist in the Exchange: {SvcOrg}/{SvcId}",
            "translation": "service id does not exist in the Exchange: {SvcOrg}/{SvcId}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcOrg"
                },
                {
                    "id": "SvcId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svcId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange service listnode' output: {Err}",
            "message": "failed to marshal 'hzn exchange service listnode' output: {Err}",
            "translation": "failed to marshal 'hzn exchange service listnode' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "user '{TrimPrefixtheUser_}' not found in org {Org}",
            "message": "user '{TrimPrefixtheUser_}' not found in org {Org}",
            "translation": "user '{TrimPrefixtheUser_}' not found in org {Org}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TrimPrefixtheUser_",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "strings.TrimPrefix(theUser, \"/\")"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'exchange user list' output: {Err}",
            "message": "failed to marshal 'exchange user list' output: {Err}",
            "translation": "failed to marshal 'exchange user list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to check exchange version, error: {Err}",
            "message": "failed to check exchange version, error: {Err}",
            "translation": "failed to check exchange version, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "an email must be specified because the Exchange API version is less than {USEREMAILOPTIONALEXCHANGEVERSION}.",
            "message": "an email must be specified because the Exchange API version is less than {USEREMAILOPTIONALEXCHANGEVERSION}.",
            "translation": "an email must be specified because the Exchange API version is less than {USEREMAILOPTIONALEXCHANGEVERSION}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "USEREMAILOPTIONALEXCHANGEVERSION",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "USER_EMAIL_OPTIONAL_EXCHANGE_VERSION"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Only users in the root org can be hubadmins.",
            "message": "Only users in the root org can be hubadmins.",
            "translation": "Only users in the root org can be hubadmins.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Users in the root org must be hubadmins. Omit the -H option.",
            "message": "Users in the root org must be hubadmins. Omit the -H option.",
            "translation": "Users in the root org must be hubadmins. Omit the -H option.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A user in the root org cannot be an org admin.",
            "message": "A user in the root org cannot be an org admin.",
            "translation": "A user in the root org cannot be an org admin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Warning: this will also delete all Exchange resources owned by this user (nodes, services, patterns, etc). Are you sure you want to remove user {Org}/{User} from the Horizon Exchange?",
            "message": "Warning: this will also delete all Exchange resources owned by this user (nodes, services, patterns, etc). Are you sure you want to remove user {Org}/{User} from the Horizon Exchange?",
            "translation": "Warning: this will also delete all Exchange resources owned by this user (nodes, services, patterns, etc). Are you sure you want to remove user {Org}/{User} from the Horizon Exchange?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "User",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "user"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The current exchange version {ExchangeVersion} is not a valid version string.",
            "message": "The current exchange version {ExchangeVersion} is not a valid version string.",
            "translation": "The current exchange version {ExchangeVersion} is not a valid version string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchangeVersion",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchangeVersion"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to compare the versions. {Err}",
            "message": "Failed to compare the versions. {Err}",
            "translation": "Failed to compare the versions. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Please sepcify the device alias received from the manufacturer. The supported device aliases are: {JoinsupportedAliases_} which are all cryptography standards.",
            "message": "Please sepcify the device alias received from the manufacturer. The supported device aliases are: {JoinsupportedAliases_} which are all cryptography standards.",
            "translation": "Please sepcify the device alias received from the manufacturer. The supported device aliases are: {JoinsupportedAliases_} which are all cryptography standards.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JoinsupportedAliases_",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "strings.Join(supportedAliases, \",\")"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid alias. The supported device aliases are: {JoinsupportedAliases_} which are all cryptography standards.",
            "message": "Invalid alias. The supported device aliases are: {JoinsupportedAliases_} which are all cryptography standards.",
            "translation": "Invalid alias. The supported device aliases are: {JoinsupportedAliases_} which are all cryptography standards.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JoinsupportedAliases_",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "strings.Join(supportedAliases, \",\")"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Listing FDO keys.",
            "message": "Listing FDO keys.",
            "translation": "Listing FDO keys.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid alias name. The key for device alias \"{KeyName}\" does not exist in organization \"{Org}\".",
            "message": "Invalid alias name. The key for device alias \"{KeyName}\" does not exist in organization \"{Org}\".",
            "translation": "Invalid alias name. The key for device alias \"{KeyName}\" does not exist in organization \"{Org}\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyName"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid credentials. The user cannot access the public key for device alias \"{KeyName}\" in organization \"{Org}\" with the given credentials.",
            "message": "Invalid credentials. The user cannot access the public key for device alias \"{KeyName}\" in organization \"{Org}\" with the given credentials.",
            "translation": "Invalid credentials. The user cannot access the public key for device alias \"{KeyName}\" in organization \"{Org}\" with the given credentials.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyName"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Listing imported FDO vouchers.",
            "message": "Listing imported FDO vouchers.",
            "translation": "Listing imported FDO vouchers.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "json unmarshalling HTTP response '{StringrespBodyBytes}' from {ApiMsg}: {Err}",
            "message": "json unmarshalling HTTP response '{StringrespBodyBytes}' from {ApiMsg}: {Err}",
            "translation": "json unmarshalling HTTP response '{StringrespBodyBytes}' from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "StringrespBodyBytes",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(respBodyBytes)"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn fdo voucher list' output: {Err}",
            "message": "failed to marshal 'hzn fdo voucher list' output: {Err}",
            "translation": "failed to marshal 'hzn fdo voucher list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Voucher \"{Device}\" successfully downloaded to {FileName} from the FDO owner services.",
            "message": "Voucher \"{Device}\" successfully downloaded to {FileName} from the FDO owner services.",
            "translation": "Voucher \"{Device}\" successfully downloaded to {FileName} from the FDO owner services.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Device",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "device"
                },
                {
                    "id": "FileName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Importing voucher file name: {Name}",
            "message": "Importing voucher file name: {Name}",
            "translation": "Importing voucher file name: {Name}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "voucherFile.Name()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "-e, --policy, and -p are all mutually exclusive (can specify one of them)",
            "message": "-e, --policy, and -p are all mutually exclusive (can specify one of them)",
            "translation": "-e, --policy, and -p are all mutually exclusive (can specify one of them)",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "accessing {PolicyFilePath}: {Err}",
            "message": "accessing {PolicyFilePath}: {Err}",
            "translation": "accessing {PolicyFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolicyFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "policyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the HA group organization ID '{HaGroupOrg}' is different from the node organization ID '{Org}'.",
            "message": "the HA group organization ID '{HaGroupOrg}' is different from the node organization ID '{Org}'.",
            "translation": "the HA group organization ID '{HaGroupOrg}' is different from the node organization ID '{Org}'.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupOrg"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "reading voucher file {Name}: {Err}",
            "message": "reading voucher file {Name}: {Err}",
            "translation": "reading voucher file {Name}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "voucherFile.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid voucher name. Voucher \"{Voucher}\" does not exist in org \"{Org}\".",
            "message": "Invalid voucher name. Voucher \"{Voucher}\" does not exist in org \"{Org}\".",
            "translation": "Invalid voucher name. Voucher \"{Voucher}\" does not exist in org \"{Org}\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Voucher",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "voucher"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid credentials. The user cannot access vouchers in org \"{Org}\" with given credentials.",
            "message": "Invalid credentials. The user cannot access vouchers in org \"{Org}\" with given credentials.",
            "translation": "Invalid credentials. The user cannot access vouchers in org \"{Org}\" with given credentials.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid credentials. The user cannot access voucher \"{Voucher}\" in org \"{Org}\" with given credentials.",
            "message": "Invalid credentials. The user cannot access voucher \"{Voucher}\" in org \"{Org}\" with given credentials.",
            "translation": "Invalid credentials. The user cannot access voucher \"{Voucher}\" in org \"{Org}\" with given credentials.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Voucher",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "voucher"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "reading the bytes from {VoucherFileName}: {Err}",
            "message": "reading the bytes from {VoucherFileName}: {Err}",
            "translation": "reading the bytes from {VoucherFileName}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VoucherFileName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "voucherFileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "creating zip reader for {Name}: {Err}",
            "message": "creating zip reader for {Name}: {Err}",
            "translation": "creating zip reader for {Name}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "voucherFile.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "opening file {Name} within zip for {Name_1}: {Err}",
            "message": "opening file {Name} within zip for {Name_1}: {Err}",
            "translation": "opening file {Name} within zip for {Name_1}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileInfo.Name"
                },
                {
                    "id": "Name_1",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "voucherFile.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Voucher imported. Node id: {NodeId}, token: {NodeToken}",
            "message": "Voucher imported. Node id: {NodeId}, token: {NodeToken}",
            "translation": "Voucher imported. Node id: {NodeId}, token: {NodeToken}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "importResponse.NodeId"
                },
                {
                    "id": "NodeToken",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "importResponse.NodeToken"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "reading the policy file {PolicyFilePath}: {Err}",
            "message": "reading the policy file {PolicyFilePath}: {Err}",
            "translation": "reading the policy file {PolicyFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolicyFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "policyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Using node policy: {PolicyStr}",
            "message": "Using node policy: {PolicyStr}",
            "translation": "Using node policy: {PolicyStr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolicyStr",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "policyStr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot proceed with node {NodeId} because the node is in a different HA group: {ExistingHagrName}.",
            "message": "Cannot proceed with node {NodeId} because the node is in a different HA group: {ExistingHagrName}.",
            "translation": "Cannot proceed with node {NodeId} because the node is in a different HA group: {ExistingHagrName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "importResponse.NodeId"
                },
                {
                    "id": "ExistingHagrName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "existingHagrName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The node is already in the HA group '{HaGroupName}'",
            "message": "The node is already in the HA group '{HaGroupName}'",
            "translation": "The node is already in the HA group '{HaGroupName}'",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid voucher file format: {StringrespBodyBytes}.",
            "message": "Invalid voucher file format: {StringrespBodyBytes}.",
            "translation": "Invalid voucher file format: {StringrespBodyBytes}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "StringrespBodyBytes",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(respBodyBytes)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid credentials. User \"{User}\" cannot access vouchers in org \"{Org}\" with given credentials.",
            "message": "Invalid credentials. User \"{User}\" cannot access vouchers in org \"{Org}\" with given credentials.",
            "translation": "Invalid credentials. User \"{User}\" cannot access vouchers in org \"{Org}\" with given credentials.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "User",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "user"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Adding/updating node...",
            "message": "Adding/updating node...",
            "translation": "Adding/updating node...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "reading the service cofiguration user input file {UserInputFileName}: {Err}",
            "message": "reading the service cofiguration user input file {UserInputFileName}: {Err}",
            "translation": "reading the service cofiguration user input file {UserInputFileName}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "UserInputFileName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "userInputFileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal json string '{PolicyStr}': {Err}",
            "message": "failed to unmarshal json string '{PolicyStr}': {Err}",
            "translation": "failed to unmarshal json string '{PolicyStr}': {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolicyStr",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "policyStr"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Incorrect policy format in '{PolicyStr}': {Err}",
            "message": "Incorrect policy format in '{PolicyStr}': {Err}",
            "translation": "Incorrect policy format in '{PolicyStr}': {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolicyStr",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "policyStr"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Adding/updating node policy...",
            "message": "Adding/updating node policy...",
            "translation": "Adding/updating node policy...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'key list' output: {Err}",
            "message": "failed to marshal 'key list' output: {Err}",
            "translation": "failed to marshal 'key list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "horizon api trust output did not include 'pem' key",
            "message": "horizon api trust output did not include 'pem' key",
            "translation": "horizon api trust output did not include 'pem' key",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Creating RSA PSS private and public keys, and an x509 certificate for distribution. This is a CPU-intensive operation and, depending on key length and platform, may take a while. Key generation on an amd64 or ppc64 system using the default key length will complete in less than 1 minute.",
            "message": "Creating RSA PSS private and public keys, and an x509 certificate for distribution. This is a CPU-intensive operation and, depending on key length and platform, may take a while. Key generation on an amd64 or ppc64 system using the default key length will complete in less than 1 minute.",
            "translation": "Creating RSA PSS private and public keys, and an x509 certificate for distribution. This is a CPU-intensive operation and, depending on key length and platform, may take a while. Key generation on an amd64 or ppc64 system using the default key length will complete in less than 1 minute.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to create a new key pair: {Err}",
            "message": "failed to create a new key pair: {Err}",
            "translation": "failed to create a new key pair: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Move private key file from {PrivKeyName} to {PrivKeyFile}",
            "message": "Move private key file from {PrivKeyName} to {PrivKeyFile}",
            "translation": "Move private key file from {PrivKeyName} to {PrivKeyFile}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyName"
                },
                {
                    "id": "PrivKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "privKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to move private key file from {PrivKeyName} to {PrivKeyFile}. {Err}",
            "message": "failed to move private key file from {PrivKeyName} to {PrivKeyFile}. {Err}",
            "translation": "failed to move private key file from {PrivKeyName} to {PrivKeyFile}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyName"
                },
                {
                    "id": "PrivKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "privKeyFile"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Move public key file from {PubKeyName} to {PubKeyFile}.",
            "message": "Move public key file from {PubKeyName} to {PubKeyFile}.",
            "translation": "Move public key file from {PubKeyName} to {PubKeyFile}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PubKeyName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pubKeyName"
                },
                {
                    "id": "PubKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pubKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to move public key file from {PubKeyName} to {PubKeyFile}. {Err}",
            "message": "failed to move public key file from {PubKeyName} to {PubKeyFile}. {Err}",
            "translation": "failed to move public key file from {PubKeyName} to {PubKeyFile}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PubKeyName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pubKeyName"
                },
                {
                    "id": "PubKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pubKeyFile"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created keys:\n \t{PrivKeyFile}\n\t{PubKeyFile}",
            "message": "Created keys:\n \t{PrivKeyFile}\n\t{PubKeyFile}",
            "translation": "Created keys:\n \t{PrivKeyFile}\n\t{PubKeyFile}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFile"
                },
                {
                    "id": "PubKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pubKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "asked to import the created public key, but can not determine the name.",
            "message": "asked to import the created public key, but can not determine the name.",
            "translation": "asked to import the created public key, but can not determine the name.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Importing public key file {PubKeyFile} to the Horizon agent.",
            "message": "Importing public key file {PubKeyFile} to the Horizon agent.",
            "translation": "Importing public key file {PubKeyFile} to the Horizon agent.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PubKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pubKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{PubKeyFile} imported to the Horizon agent",
            "message": "{PubKeyFile} imported to the Horizon agent",
            "translation": "{PubKeyFile} imported to the Horizon agent",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PubKeyFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pubKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Public key '{KeyName}' removed from the Horizon agent.",
            "message": "Public key '{KeyName}' removed from the Horizon agent.",
            "translation": "Public key '{KeyName}' removed from the Horizon agent.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "-d is mutually exclusive with -k and -K",
            "message": "-d is mutually exclusive with -k and -K",
            "translation": "-d is mutually exclusive with -k and -K",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Creating directory {OutputDirPub}.",
            "message": "Creating directory {OutputDirPub}.",
            "translation": "Creating directory {OutputDirPub}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OutputDirPub",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "outputDirPub"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{PrivKeyFile} is a directory. Please specify a file name.",
            "message": "{PrivKeyFile} is a directory. Please specify a file name.",
            "translation": "{PrivKeyFile} is a directory. Please specify a file name.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "File {PrivKeyFile} and {PubKeyFile} exist, do you want to overwrite?",
            "message": "File {PrivKeyFile} and {PubKeyFile} exist, do you want to overwrite?",
            "translation": "File {PrivKeyFile} and {PubKeyFile} exist, do you want to overwrite?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFile"
                },
                {
                    "id": "PubKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pubKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "File {PrivKeyFile} exists, do you want to overwrite?",
            "message": "File {PrivKeyFile} exists, do you want to overwrite?",
            "translation": "File {PrivKeyFile} exists, do you want to overwrite?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deleting file {PrivKeyFile}.",
            "message": "Deleting file {PrivKeyFile}.",
            "translation": "Deleting file {PrivKeyFile}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "cleaned {String} resulted in an empty string.",
            "message": "cleaned {String} resulted in an empty string.",
            "translation": "cleaned {String} resulted in an empty string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "String",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dep[\"operatorYamlArchive\"].(string)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "plugin context must include 'currentDir' as the current directory of the service definition file",
            "message": "plugin context must include 'currentDir' as the current directory of the service definition file",
            "translation": "plugin context must include 'currentDir' as the current directory of the service definition file",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to read kube operator {DepoperatorYamlArchive}, error {Err}",
            "message": "unable to read kube operator {DepoperatorYamlArchive}, error {Err}",
            "translation": "unable to read kube operator {DepoperatorYamlArchive}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DepoperatorYamlArchive",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "dep[\"operatorYamlArchive\"]"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'metadata' in 'clusterDeployment' should not be set. Remove 'metadata' inside 'clusterDeployment' before publishing service",
            "message": "'metadata' in 'clusterDeployment' should not be set. Remove 'metadata' inside 'clusterDeployment' before publishing service",
            "translation": "'metadata' in 'clusterDeployment' should not be set. Remove 'metadata' inside 'clusterDeployment' before publishing service",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to get namespace from kube operator {OperatorFilePath}, error {Err}",
            "message": "failed to get namespace from kube operator {OperatorFilePath}, error {Err}",
            "translation": "failed to get namespace from kube operator {OperatorFilePath}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OperatorFilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "operatorFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: Namespace is detected in operator file. Service namespace should be set in deployment policy or pattern",
            "message": "Warning: Namespace is detected in operator file. Service namespace should be set in deployment policy or pattern",
            "translation": "Warning: Namespace is detected in operator file. Service namespace should be set in deployment policy or pattern",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal {KUBEDEPLOYMENTCONFIGTYPE} deployment string {Dep}, error {Err}",
            "message": "failed to marshal {KUBEDEPLOYMENTCONFIGTYPE} deployment string {Dep}, error {Err}",
            "translation": "failed to marshal {KUBEDEPLOYMENTCONFIGTYPE} deployment string {Dep}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KUBEDEPLOYMENTCONFIGTYPE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "KUBE_DEPLOYMENT_CONFIG_TYPE"
                },
                {
                    "id": "Dep",
                    "string": "%[2]v",
                    "type": "map[string]interface{}",
                    "underlyingType": "map[string]interface{}",
                    "argNum": 2,
                    "expr": "dep"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem signing {KUBEDEPLOYMENTCONFIGTYPE} deployment string: {Err}",
            "message": "problem signing {KUBEDEPLOYMENTCONFIGTYPE} deployment string: {Err}",
            "translation": "problem signing {KUBEDEPLOYMENTCONFIGTYPE} deployment string: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KUBEDEPLOYMENTCONFIGTYPE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "KUBE_DEPLOYMENT_CONFIG_TYPE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "operatorYamlArchive must have a string type value, has {C}",
            "message": "operatorYamlArchive must have a string type value, has {C}",
            "translation": "operatorYamlArchive must have a string type value, has {C}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "C",
                    "string": "%[1]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "c"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "operatorYamlArchive must be non-empty strings",
            "message": "operatorYamlArchive must be non-empty strings",
            "translation": "operatorYamlArchive must be non-empty strings",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' not supported for services using a {KUBEDEPLOYMENTCONFIGTYPE} deployment configuration",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' not supported for services using a {KUBEDEPLOYMENTCONFIGTYPE} deployment configuration",
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' not supported for services using a {KUBEDEPLOYMENTCONFIGTYPE} deployment configuration",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                },
                {
                    "id": "KUBEDEPLOYMENTCONFIGTYPE",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "KUBE_DEPLOYMENT_CONFIG_TYPE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn metering list' output: {Err}",
            "message": "failed to marshal 'hzn metering list' output: {Err}",
            "translation": "failed to marshal 'hzn metering list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Using '{NewImage}' in 'deployment' field instead of '{Image}'",
            "message": "Using '{NewImage}' in 'deployment' field instead of '{Image}'",
            "translation": "Using '{NewImage}' in 'deployment' field instead of '{Image}'",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NewImage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "newImage"
                },
                {
                    "id": "Image",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "image"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal deployment string {Dep}, error {Err}",
            "message": "failed to marshal deployment string {Dep}, error {Err}",
            "translation": "failed to marshal deployment string {Dep}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dep",
                    "string": "%[1]v",
                    "type": "map[string]interface{}",
                    "underlyingType": "map[string]interface{}",
                    "argNum": 1,
                    "expr": "dep"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem signing deployment string: {Err}",
            "message": "problem signing deployment string: {Err}",
            "translation": "problem signing deployment string: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "each service defined under 'deployment.services' must be a json object (with strings as the keys)",
            "message": "each service defined under 'deployment.services' must be a json object (with strings as the keys)",
            "translation": "each service defined under 'deployment.services' must be a json object (with strings as the keys)",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "service '{SvcName}' defined under 'deployment.services' does not have mandatory 'image' field",
            "message": "service '{SvcName}' defined under 'deployment.services' does not have mandatory 'image' field",
            "translation": "service '{SvcName}' defined under 'deployment.services' does not have mandatory 'image' field",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "service '{SvcName}' defined under 'deployment.services' has unrecognized field '{K}'. See https://github.com/open-horizon/anax/blob/master/doc/deployment_string.md",
            "message": "service '{SvcName}' defined under 'deployment.services' has unrecognized field '{K}'. See https://github.com/open-horizon/anax/blob/master/doc/deployment_string.md",
            "translation": "service '{SvcName}' defined under 'deployment.services' has unrecognized field '{K}'. See https://github.com/open-horizon/anax/blob/master/doc/deployment_string.md",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcName"
                },
                {
                    "id": "K",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "k"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "service '{SvcName}' defined under 'deployment.services' has a malformed ports value {DepSvck}, error {Err}",
            "message": "service '{SvcName}' defined under 'deployment.services' has a malformed ports value {DepSvck}, error {Err}",
            "translation": "service '{SvcName}' defined under 'deployment.services' has a malformed ports value {DepSvck}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcName"
                },
                {
                    "id": "DepSvck",
                    "string": "%[2]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "depSvc[k]"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "service '{SvcName}' defined under 'deployment.services' is mapping a port {PortBinding} to the default Horizon API port {AnaxAPIPortDefault}. This service will fail when deployed on a node which has not changed the default Horizon API port.",
            "message": "service '{SvcName}' defined under 'deployment.services' is mapping a port {PortBinding} to the default Horizon API port {AnaxAPIPortDefault}. This service will fail when deployed on a node which has not changed the default Horizon API port.",
            "translation": "service '{SvcName}' defined under 'deployment.services' is mapping a port {PortBinding} to the default Horizon API port {AnaxAPIPortDefault}. This service will fail when deployed on a node which has not changed the default Horizon API port.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcName"
                },
                {
                    "id": "PortBinding",
                    "string": "%[2]v",
                    "type": "github.com/fsouza/go-dockerclient.PortBinding",
                    "underlyingType": "struct{HostIP string \"json:\\\"HostIp,omitempty\\\" yaml:\\\"HostIp,omitempty\\\" toml:\\\"HostIp,omitempty\\\"\"; HostPort string \"json:\\\"HostPort,omitempty\\\" yaml:\\\"HostPort,omitempty\\\" toml:\\\"HostPort,omitempty\\\"\"}",
                    "argNum": 2,
                    "expr": "pb"
                },
                {
                    "id": "AnaxAPIPortDefault",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "config.AnaxAPIPortDefault"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the 'deployment' field must contain the 'services' field, whose value must be a json object (with strings as the keys)",
            "message": "the 'deployment' field must contain the 'services' field, whose value must be a json object (with strings as the keys)",
            "translation": "the 'deployment' field must contain the 'services' field, whose value must be a json object (with strings as the keys)",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "the 'deployment' field must contain either the native Horizon deployment config or the Helm deployment config, whose value must be a json object (with strings as the keys)",
            "message": "the 'deployment' field must contain either the native Horizon deployment config or the Helm deployment config, whose value must be a json object (with strings as the keys)",
            "translation": "the 'deployment' field must contain either the native Horizon deployment config or the Helm deployment config, whose value must be a json object (with strings as the keys)",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start file sync service, {Sserr}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start file sync service, {Sserr}",
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start file sync service, {Sserr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                },
                {
                    "id": "Sserr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "sserr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to get service dependencies, {Derr}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to get service dependencies, {Derr}",
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to get service dependencies, {Derr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                },
                {
                    "id": "Derr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "derr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Starting dependencies.",
            "message": "Starting dependencies.",
            "translation": "Starting dependencies.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to generate test agreementId, {Aerr}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to generate test agreementId, {Aerr}",
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to generate test agreementId, {Aerr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                },
                {
                    "id": "Aerr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "aerr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start service dependencies, {Perr}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start service dependencies, {Perr}",
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start service dependencies, {Perr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                },
                {
                    "id": "Perr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "perr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTOPCOMMAND}' unable to stop service dependencies, {Err}",
            "message": "'{SERVICECOMMAND} {SERVICESTOPCOMMAND}' unable to stop service dependencies, {Err}",
            "translation": "'{SERVICECOMMAND} {SERVICESTOPCOMMAND}' unable to stop service dependencies, {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTOPCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_STOP_COMMAND"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to stop file sync service, {Sserr}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to stop file sync service, {Sserr}",
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to stop file sync service, {Sserr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                },
                {
                    "id": "Sserr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "sserr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Stopped service.",
            "message": "Stopped service.",
            "translation": "Stopped service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn nmp status' output: {Err}",
            "message": "failed to marshal 'hzn nmp status' output: {Err}",
            "translation": "failed to marshal 'hzn nmp status' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The following node management policy will be re-evaluated: {NmpName}.",
            "message": "The following node management policy will be re-evaluated: {NmpName}.",
            "translation": "The following node management policy will be re-evaluated: {NmpName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NmpName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nmpName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No node management policy for this node.",
            "message": "No node management policy for this node.",
            "translation": "No node management policy for this node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The following node management policies will be re-evaluated: {JoinallIDs_}.",
            "message": "The following node management policies will be re-evaluated: {JoinallIDs_}.",
            "translation": "The following node management policies will be re-evaluated: {JoinallIDs_}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JoinallIDs_",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "strings.Join(allIDs, \",\")"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get proper response from Horizon agent",
            "message": "Failed to get proper response from Horizon agent",
            "translation": "Failed to get proper response from Horizon agent",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon CLI version: {HORIZONVERSION}",
            "message": "Horizon CLI version: {HORIZONVERSION}",
            "translation": "Horizon CLI version: {HORIZONVERSION}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HORIZONVERSION",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "version.HORIZON_VERSION"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Horizon Agent version: {HorizonVersion}",
            "message": "Horizon Agent version: {HorizonVersion}",
            "translation": "Horizon Agent version: {HorizonVersion}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HorizonVersion",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "status.Configuration.HorizonVersion"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Horizon Agent version: failed to get.",
            "message": "Horizon Agent version: failed to get.",
            "translation": "Horizon Agent version: failed to get.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon Agent HZN Environment Variables are:",
            "message": "Horizon Agent HZN Environment Variables are:",
            "translation": "Horizon Agent HZN Environment Variables are:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "HZN_ORG_ID: {Org}",
            "message": "HZN_ORG_ID: {Org}",
            "translation": "HZN_ORG_ID: {Org}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_EXCHANGE_USER_AUTH: {UserPw}",
            "message": "HZN_EXCHANGE_USER_AUTH: {UserPw}",
            "translation": "HZN_EXCHANGE_USER_AUTH: {UserPw}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "UserPw",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "userPw"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_EXCHANGE_URL: {ExchUrl}",
            "message": "HZN_EXCHANGE_URL: {ExchUrl}",
            "translation": "HZN_EXCHANGE_URL: {ExchUrl}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchUrl",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_FSS_CSSURL: {CssUrl}",
            "message": "HZN_FSS_CSSURL: {CssUrl}",
            "translation": "HZN_FSS_CSSURL: {CssUrl}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CssUrl",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cssUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_AGBOT_URL: {AgbotUrl}",
            "message": "HZN_AGBOT_URL: {AgbotUrl}",
            "translation": "HZN_AGBOT_URL: {AgbotUrl}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AgbotUrl",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "agbotUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid agent file type specified. Valid types include: {String}",
            "message": "Invalid agent file type specified. Valid types include: {String}",
            "translation": "Invalid agent file type specified. Valid types include: {String}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "String",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchangecommon.ValidFileTypes.String()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "--version must specify a valid version range, a valid version string or \"latest\"",
            "message": "--version must specify a valid version range, a valid version string or \"latest\"",
            "translation": "--version must specify a valid version range, a valid version string or \"latest\"",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to check version range {FileVersion}: {Err}",
            "message": "failed to check version range {FileVersion}: {Err}",
            "translation": "failed to check version range {FileVersion}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileVersion",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileVersion"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error comparing agent file versions: {Err}",
            "message": "error comparing agent file versions: {Err}",
            "translation": "error comparing agent file versions: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "must specify --type with --version-only",
            "message": "must specify --type with --version-only",
            "translation": "must specify --type with --version-only",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid manifest type specified. Valid types include: {String}",
            "message": "Invalid manifest type specified. Valid types include: {String}",
            "translation": "Invalid manifest type specified. Valid types include: {String}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "String",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "validManTypes.string()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "must specify --type with --id",
            "message": "must specify --type with --id",
            "translation": "must specify --type with --id",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "must specify --type and --id with --long",
            "message": "must specify --type and --id with --long",
            "translation": "must specify --type and --id with --long",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cannot specify --skipDigitalSig with --hash",
            "message": "Cannot specify --skipDigitalSig with --hash",
            "translation": "Cannot specify --skipDigitalSig with --hash",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cannot specify --skipDigitalSig with --hashAlgo",
            "message": "Cannot specify --skipDigitalSig with --hashAlgo",
            "translation": "Cannot specify --skipDigitalSig with --hashAlgo",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid value for --hashAlgo, please use SHA1 or SHA256",
            "message": "Invalid value for --hashAlgo, please use SHA1 or SHA256",
            "translation": "Invalid value for --hashAlgo, please use SHA1 or SHA256",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Digital sign with {HashAlgorithm} will be performed for data integrity.",
            "message": "Digital sign with {HashAlgorithm} will be performed for data integrity.",
            "translation": "Digital sign with {HashAlgorithm} will be performed for data integrity.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HashAlgorithm",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "hashAlgorithm"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to digital sign the manifest {ManifestFile}, Error: {Err}",
            "message": "Failed to digital sign the manifest {ManifestFile}, Error: {Err}",
            "translation": "Failed to digital sign the manifest {ManifestFile}, Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ManifestFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manifestFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Digital sign finished.",
            "message": "Digital sign finished.",
            "translation": "Digital sign finished.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Manifest {ManOrg}/{ObjectID} updated in the Management Hub",
            "message": "Manifest {ManOrg}/{ObjectID} updated in the Management Hub",
            "translation": "Manifest {ManOrg}/{ObjectID} updated in the Management Hub",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ManOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manOrg"
                },
                {
                    "id": "ObjectID",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "manifestsMeta.ObjectID"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Manifest {ManOrg}/{ObjectID} added to the Management Hub",
            "message": "Manifest {ManOrg}/{ObjectID} added to the Management Hub",
            "translation": "Manifest {ManOrg}/{ObjectID} added to the Management Hub",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ManOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manOrg"
                },
                {
                    "id": "ObjectID",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "manifestsMeta.ObjectID"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The following files were specified in the manifest file but do not exist in the Management Hub:",
            "message": "The following files were specified in the manifest file but do not exist in the Management Hub:",
            "translation": "The following files were specified in the manifest file but do not exist in the Management Hub:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The version specified in SoftwareUpgrade is not a valid version string or \"latest\": {Version}",
            "message": "The version specified in SoftwareUpgrade is not a valid version string or \"latest\": {Version}",
            "translation": "The version specified in SoftwareUpgrade is not a valid version string or \"latest\": {Version}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manifestData.SoftwareUpgrade.Version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "File \"{ManFile}\" version \"{Version}\" of type \"agent_software_files\".",
            "message": "File \"{ManFile}\" version \"{Version}\" of type \"agent_software_files\".",
            "translation": "File \"{ManFile}\" version \"{Version}\" of type \"agent_software_files\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ManFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manFile"
                },
                {
                    "id": "Version",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "manifestData.SoftwareUpgrade.Version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The version specified in CertificateUpgrade is not a valid version string or \"latest\": {Version}",
            "message": "The version specified in CertificateUpgrade is not a valid version string or \"latest\": {Version}",
            "translation": "The version specified in CertificateUpgrade is not a valid version string or \"latest\": {Version}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manifestData.CertificateUpgrade.Version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "File \"{ManFile}\" version \"{Version}\" of type \"agent_cert_files\".",
            "message": "File \"{ManFile}\" version \"{Version}\" of type \"agent_cert_files\".",
            "translation": "File \"{ManFile}\" version \"{Version}\" of type \"agent_cert_files\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ManFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manFile"
                },
                {
                    "id": "Version",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "manifestData.CertificateUpgrade.Version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The version specified in ConfigurationUpgrade is not a valid version string or \"latest\": {Version}",
            "message": "The version specified in ConfigurationUpgrade is not a valid version string or \"latest\": {Version}",
            "translation": "The version specified in ConfigurationUpgrade is not a valid version string or \"latest\": {Version}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manifestData.ConfigurationUpgrade.Version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "File \"{ManFile}\" version \"{Version}\" of type \"agent_config_files\".",
            "message": "File \"{ManFile}\" version \"{Version}\" of type \"agent_config_files\".",
            "translation": "File \"{ManFile}\" version \"{Version}\" of type \"agent_config_files\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ManFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manFile"
                },
                {
                    "id": "Version",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "manifestData.ConfigurationUpgrade.Version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Run 'hzn nodemanagement agentfiles list' to get a list of valid files.",
            "message": "Run 'hzn nodemanagement agentfiles list' to get a list of valid files.",
            "translation": "Run 'hzn nodemanagement agentfiles list' to get a list of valid files.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove manifest {ManOrg}/{ManifestId} from the Management Hub?",
            "message": "Are you sure you want to remove manifest {ManOrg}/{ManifestId} from the Management Hub?",
            "translation": "Are you sure you want to remove manifest {ManOrg}/{ManifestId} from the Management Hub?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ManOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manOrg"
                },
                {
                    "id": "ManifestId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "manifestId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Manifest '{ManOrg}/{ManifestId}' of type '{ManifestType}' not found in the Management Hub",
            "message": "Manifest '{ManOrg}/{ManifestId}' of type '{ManifestType}' not found in the Management Hub",
            "translation": "Manifest '{ManOrg}/{ManifestId}' of type '{ManifestType}' not found in the Management Hub",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ManOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manOrg"
                },
                {
                    "id": "ManifestId",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "manifestId"
                },
                {
                    "id": "ManifestType",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "manifestType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Manifest {ManOrg}/{ManifestId} deleted from the Management Hub",
            "message": "Manifest {ManOrg}/{ManifestId} deleted from the Management Hub",
            "translation": "Manifest {ManOrg}/{ManifestId} deleted from the Management Hub",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ManOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "manOrg"
                },
                {
                    "id": "ManifestId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "manifestId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Fill in this section to perform a software upgrade of the agent. Remove this section to prevent software upgrade.",
            "message": "Fill in this section to perform a software upgrade of the agent. Remove this section to prevent software upgrade.",
            "translation": "Fill in this section to perform a software upgrade of the agent. Remove this section to prevent software upgrade.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of agent software files stored in the Management Hub.",
            "message": "A list of agent software files stored in the Management Hub.",
            "translation": "A list of agent software files stored in the Management Hub.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Run 'hzn nm agentfiles list -t agent_software_files' to get a list of available files.",
            "message": "Run 'hzn nm agentfiles list -t agent_software_files' to get a list of available files.",
            "translation": "Run 'hzn nm agentfiles list -t agent_software_files' to get a list of available files.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agent software version this manifest applies to. Specify \"latest\" to get the most recent version.",
            "message": "The agent software version this manifest applies to. Specify \"latest\" to get the most recent version.",
            "translation": "The agent software version this manifest applies to. Specify \"latest\" to get the most recent version.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Fill in this section to upgrade the agent certificate. Remove this section to prevent certificate upgrade.",
            "message": "Fill in this section to upgrade the agent certificate. Remove this section to prevent certificate upgrade.",
            "translation": "Fill in this section to upgrade the agent certificate. Remove this section to prevent certificate upgrade.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of a certificate file stored in the Management Hub. Default is \"agent-install.crt\".",
            "message": "The name of a certificate file stored in the Management Hub. Default is \"agent-install.crt\".",
            "translation": "The name of a certificate file stored in the Management Hub. Default is \"agent-install.crt\".",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Run 'hzn nm agentfiles list -t agent_cert_files' to get a list of available files.",
            "message": "Run 'hzn nm agentfiles list -t agent_cert_files' to get a list of available files.",
            "translation": "Run 'hzn nm agentfiles list -t agent_cert_files' to get a list of available files.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agent certificate version this manifest applies to. Specify \"latest\" to get the most recent version.",
            "message": "The agent certificate version this manifest applies to. Specify \"latest\" to get the most recent version.",
            "translation": "The agent certificate version this manifest applies to. Specify \"latest\" to get the most recent version.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Fill in this section to upgrade the agent config. Remove this section to prevent config upgrade.",
            "message": "Fill in this section to upgrade the agent config. Remove this section to prevent config upgrade.",
            "translation": "Fill in this section to upgrade the agent config. Remove this section to prevent config upgrade.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of a config file stored in the Management Hub. Default is \"agent-install.crt\".",
            "message": "The name of a config file stored in the Management Hub. Default is \"agent-install.crt\".",
            "translation": "The name of a config file stored in the Management Hub. Default is \"agent-install.crt\".",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Run 'hzn nm agentfiles list -t agent_config_files' to get a list of available files.",
            "message": "Run 'hzn nm agentfiles list -t agent_config_files' to get a list of available files.",
            "translation": "Run 'hzn nm agentfiles list -t agent_config_files' to get a list of available files.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agent config version this manifest applies to. Specify \"latest\" to get the most recent version.",
            "message": "The agent config version this manifest applies to. Specify \"latest\" to get the most recent version.",
            "translation": "The agent config version this manifest applies to. Specify \"latest\" to get the most recent version.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "deployment config {Dep} is not supported",
            "message": "deployment config {Dep} is not supported",
            "translation": "deployment config {Dep} is not supported",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dep",
                    "string": "%[1]v",
                    "type": "map[string]interface{}",
                    "underlyingType": "map[string]interface{}",
                    "argNum": 1,
                    "expr": "dep"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "starting test mode is not supported for this project",
            "message": "starting test mode is not supported for this project",
            "translation": "starting test mode is not supported for this project",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "stopping test mode is not supported for this project",
            "message": "stopping test mode is not supported for this project",
            "translation": "stopping test mode is not supported for this project",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn policy list' output: {Err}",
            "message": "failed to marshal 'hzn policy list' output: {Err}",
            "translation": "failed to marshal 'hzn policy list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: built-in properties {IncludedBuiltIns} are read-only. The given value will be ignored.",
            "message": "Warning: built-in properties {IncludedBuiltIns} are read-only. The given value will be ignored.",
            "translation": "Warning: built-in properties {IncludedBuiltIns} are read-only. The given value will be ignored.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "IncludedBuiltIns",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "includedBuiltIns"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating Horizon node policy and re-evaluating all agreements based on this node policy. Existing agreements might be cancelled and re-negotiated.",
            "message": "Updating Horizon node policy and re-evaluating all agreements based on this node policy. Existing agreements might be cancelled and re-negotiated.",
            "translation": "Updating Horizon node policy and re-evaluating all agreements based on this node policy. Existing agreements might be cancelled and re-negotiated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Warning: This command is deprecated. It will continue to be supported until the next major release. Please use 'hzn policy update' to update the node policy.",
            "message": "Warning: This command is deprecated. It will continue to be supported until the next major release. Please use 'hzn policy update' to update the node policy.",
            "translation": "Warning: This command is deprecated. It will continue to be supported until the next major release. Please use 'hzn policy update' to update the node policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon node policy updated.",
            "message": "Horizon node policy updated.",
            "translation": "Horizon node policy updated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove the node policy?",
            "message": "Are you sure you want to remove the node policy?",
            "translation": "Are you sure you want to remove the node policy?",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Removing Horizon node policy and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated.",
            "message": "Removing Horizon node policy and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated.",
            "translation": "Removing Horizon node policy and re-evaluating all agreements. Existing agreements might be cancelled and re-negotiated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of policy properties that describe the object.",
            "message": "A list of policy properties that describe the object.",
            "translation": "A list of policy properties that describe the object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "It applies to both deployment and node management.",
            "message": "It applies to both deployment and node management.",
            "translation": "It applies to both deployment and node management.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "It usually containts the built-in node properties.",
            "message": "It usually containts the built-in node properties.",
            "translation": "It usually containts the built-in node properties.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "It should be empty unless deployment and managment have the same constraint expressions.",
            "message": "It should be empty unless deployment and managment have the same constraint expressions.",
            "translation": "It should be empty unless deployment and managment have the same constraint expressions.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Policies that are used for deployment only.",
            "message": "Policies that are used for deployment only.",
            "translation": "Policies that are used for deployment only.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of policy properties for deployment.",
            "message": "A list of policy properties for deployment.",
            "translation": "A list of policy properties for deployment.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "It overwrites the properties with the same name on the top level.",
            "message": "It overwrites the properties with the same name on the top level.",
            "translation": "It overwrites the properties with the same name on the top level.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of constraints for deployment.",
            "message": "A list of constraints for deployment.",
            "translation": "A list of constraints for deployment.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "It overwrites all the constraints on the top level if not empty.",
            "message": "It overwrites all the constraints on the top level if not empty.",
            "translation": "It overwrites all the constraints on the top level if not empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Policies that are used for node management only.",
            "message": "Policies that are used for node management only.",
            "translation": "Policies that are used for node management only.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of policy properties for node management.",
            "message": "A list of policy properties for node management.",
            "translation": "A list of policy properties for node management.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of constraints for node management.",
            "message": "A list of constraints for node management.",
            "translation": "A list of constraints for node management.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unable to create UserInputFile object from file {FilePath}. {Err}",
            "message": "Unable to create UserInputFile object from file {FilePath}. {Err}",
            "translation": "Unable to create UserInputFile object from file {FilePath}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Incorrect node policy format in file {JsonFilePath}: {Err}",
            "message": "Incorrect node policy format in file {JsonFilePath}: {Err}",
            "translation": "Incorrect node policy format in file {JsonFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JsonFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "jsonFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Reading input file {InputFile}...",
            "message": "Reading input file {InputFile}...",
            "translation": "Reading input file {InputFile}...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "InputFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "inputFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Retrieved user input object from file {InputFile}: {UserInputFileObj}",
            "message": "Retrieved user input object from file {InputFile}: {UserInputFileObj}",
            "translation": "Retrieved user input object from file {InputFile}: {UserInputFileObj}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "InputFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "inputFile"
                },
                {
                    "id": "UserInputFileObj",
                    "string": "%[2]v",
                    "type": "*github.com/open-horizon/anax/common.UserInputFile",
                    "underlyingType": "*github.com/open-horizon/anax/common.UserInputFile",
                    "argNum": 2,
                    "expr": "userInputFileObj"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Note: No properties and constraints are specified under 'deployment' attribute in the node policy file {NodepolicyFlag}. The top level properties and constraints will be used.",
            "message": "Note: No properties and constraints are specified under 'deployment' attribute in the node policy file {NodepolicyFlag}. The top level properties and constraints will be used.",
            "translation": "Note: No properties and constraints are specified under 'deployment' attribute in the node policy file {NodepolicyFlag}. The top level properties and constraints will be used.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodepolicyFlag",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodepolicyFlag"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "hzn cli is configured with exchange url {ExchUrlBase} from {ExchangeUrlLocation} and the horizon agent is configured with exchange url {AnaxExchUrlBase} from {ExchangeUrlLocationFromAnax}. hzn register will not work with mismatched exchange urls.",
            "message": "hzn cli is configured with exchange url {ExchUrlBase} from {ExchangeUrlLocation} and the horizon agent is configured with exchange url {AnaxExchUrlBase} from {ExchangeUrlLocationFromAnax}. hzn register will not work with mismatched exchange urls.",
            "translation": "hzn cli is configured with exchange url {ExchUrlBase} from {ExchangeUrlLocation} and the horizon agent is configured with exchange url {AnaxExchUrlBase} from {ExchangeUrlLocationFromAnax}. hzn register will not work with mismatched exchange urls.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchUrlBase",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchUrlBase"
                },
                {
                    "id": "ExchangeUrlLocation",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cliutils.GetExchangeUrlLocation()"
                },
                {
                    "id": "AnaxExchUrlBase",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "anaxExchUrlBase"
                },
                {
                    "id": "ExchangeUrlLocationFromAnax",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "cliutils.GetExchangeUrlLocationFromAnax()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Horizon Exchange base URL: {ExchUrlBase}",
            "message": "Horizon Exchange base URL: {ExchUrlBase}",
            "translation": "Horizon Exchange base URL: {ExchUrlBase}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchUrlBase",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchUrlBase"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to read value for HZN_REGISTER_HTTP_TIMEOUT from config file. Continuing with default value.",
            "message": "Failed to read value for HZN_REGISTER_HTTP_TIMEOUT from config file. Continuing with default value.",
            "translation": "Failed to read value for HZN_REGISTER_HTTP_TIMEOUT from config file. Continuing with default value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "this Horizon node is already registered or in the process of being registered. If you want to register it differently, run 'hzn unregister' first.",
            "message": "this Horizon node is already registered or in the process of being registered. If you want to register it differently, run 'hzn unregister' first.",
            "translation": "this Horizon node is already registered or in the process of being registered. If you want to register it differently, run 'hzn unregister' first.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to get proper response from the Horizon agent",
            "message": "Failed to get proper response from the Horizon agent",
            "translation": "Failed to get proper response from the Horizon agent",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unable to read machine serial number, error: {MsErr}. Continuing device registration.",
            "message": "Unable to read machine serial number, error: {MsErr}. Continuing device registration.",
            "translation": "Unable to read machine serial number, error: {MsErr}. Continuing device registration.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MsErr",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "msErr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node ID not specified, using machine serial number {NodeId} as node ID.",
            "message": "Node ID not specified, using machine serial number {NodeId} as node ID.",
            "translation": "Node ID not specified, using machine serial number {NodeId} as node ID.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node ID not specified, and machine serial number not found, generating random node ID.",
            "message": "Node ID not specified, and machine serial number not found, generating random node ID.",
            "translation": "Node ID not specified, and machine serial number not found, generating random node ID.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unable to generate random node id, error: {Err}",
            "message": "Unable to generate random node id, error: {Err}",
            "translation": "Unable to generate random node id, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Generated random node ID: {NodeId}.",
            "message": "Generated random node ID: {NodeId}.",
            "translation": "Generated random node ID: {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Using node ID '{NodeId}' from the Horizon agent",
            "message": "Using node ID '{NodeId}' from the Horizon agent",
            "translation": "Using node ID '{NodeId}' from the Horizon agent",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not create a random token",
            "message": "could not create a random token",
            "translation": "could not create a random token",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Generated random node token",
            "message": "Generated random node token",
            "translation": "Generated random node token",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "--ha-group flag does not support 'cluster' type agent or node.",
            "message": "--ha-group flag does not support 'cluster' type agent or node.",
            "translation": "--ha-group flag does not support 'cluster' type agent or node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "node '{Org}/{NodeId}' does not exist in the Exchange with the specified token, and the -u flag was not specified to provide exchange user credentials to create/update it.",
            "message": "node '{Org}/{NodeId}' does not exist in the Exchange with the specified token, and the -u flag was not specified to provide exchange user credentials to create/update it.",
            "translation": "node '{Org}/{NodeId}' does not exist in the Exchange with the specified token, and the -u flag was not specified to provide exchange user credentials to create/update it.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "NodeId",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {Org}/{NodeId} does not exist in the Exchange with the specified token, creating/updating it...",
            "message": "Node {Org}/{NodeId} does not exist in the Exchange with the specified token, creating/updating it...",
            "translation": "Node {Org}/{NodeId} does not exist in the Exchange with the specified token, creating/updating it...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "NodeId",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating node token...",
            "message": "Updating node token...",
            "translation": "Updating node token...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node type mismatch. The node type '{NodeType}' does not match the node type '{NodeType_1}' of the Exchange node {NId}.",
            "message": "Node type mismatch. The node type '{NodeType}' does not match the node type '{NodeType_1}' of the Exchange node {NId}.",
            "translation": "Node type mismatch. The node type '{NodeType}' does not match the node type '{NodeType_1}' of the Exchange node {NId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeType"
                },
                {
                    "id": "NodeType_1",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "n.GetNodeType()"
                },
                {
                    "id": "NId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The node {NId} is in the HA group {HAGroup} but the agent is 'cluster' type. HA group does not support 'cluster' type members. Please remove the node from the HA group or choose a different node id with -n flag.",
            "message": "The node {NId} is in the HA group {HAGroup} but the agent is 'cluster' type. HA group does not support 'cluster' type members. Please remove the node from the HA group or choose a different node id with -n flag.",
            "translation": "The node {NId} is in the HA group {HAGroup} but the agent is 'cluster' type. HA group does not support 'cluster' type members. Please remove the node from the HA group or choose a different node id with -n flag.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nId"
                },
                {
                    "id": "HAGroup",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "n.HAGroup"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {Org}/{NodeId} exists in the Exchange",
            "message": "Node {Org}/{NodeId} exists in the Exchange",
            "translation": "Node {Org}/{NodeId} exists in the Exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "NodeId",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating node name...",
            "message": "Updating node name...",
            "translation": "Updating node name...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "No pattern or node policy is specified. Will proceed with the existing node policy.",
            "message": "No pattern or node policy is specified. Will proceed with the existing node policy.",
            "translation": "No pattern or node policy is specified. Will proceed with the existing node policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Will proceed with the given node policy.",
            "message": "Will proceed with the given node policy.",
            "translation": "Will proceed with the given node policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pattern {ExchangePattern} defined for the node on the Exchange.",
            "message": "Pattern {ExchangePattern} defined for the node on the Exchange.",
            "translation": "Pattern {ExchangePattern} defined for the node on the Exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchangePattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchangePattern"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot proceed with the given pattern {Pattern} because it is different from the pattern {ExchangePattern} defined for the node in the Exchange.\nTo correct the problem, please do one of the following: \n\t- Remove the node from the Exchange \n\t- Remove the pattern from the node in the Exchange \n\t- Register without a pattern (the pattern defined on the node in the Exchange will be used)",
            "message": "Cannot proceed with the given pattern {Pattern} because it is different from the pattern {ExchangePattern} defined for the node in the Exchange.\nTo correct the problem, please do one of the following: \n\t- Remove the node from the Exchange \n\t- Remove the pattern from the node in the Exchange \n\t- Register without a pattern (the pattern defined on the node in the Exchange will be used)",
            "translation": "Cannot proceed with the given pattern {Pattern} because it is different from the pattern {ExchangePattern} defined for the node in the Exchange.\nTo correct the problem, please do one of the following: \n\t- Remove the node from the Exchange \n\t- Remove the pattern from the node in the Exchange \n\t- Register without a pattern (the pattern defined on the node in the Exchange will be used)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pattern"
                },
                {
                    "id": "ExchangePattern",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "exchangePattern"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "pattern '{Patorg}/{Patname}' not found from the Exchange.",
            "message": "pattern '{Patorg}/{Patname}' not found from the Exchange.",
            "translation": "pattern '{Patorg}/{Patname}' not found from the Exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Patorg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patorg"
                },
                {
                    "id": "Patname",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patname"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot proceed with the given pattern {Pattern} because it does not include any services.",
            "message": "Cannot proceed with the given pattern {Pattern} because it does not include any services.",
            "translation": "Cannot proceed with the given pattern {Pattern} because it does not include any services.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pattern"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Will proceed with the given pattern {Pattern}.",
            "message": "Will proceed with the given pattern {Pattern}.",
            "translation": "Will proceed with the given pattern {Pattern}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pattern"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Cannot proceed with the given HA group {HaGroupName} because the node is in a different HA group {ExistingHagrName}.",
            "message": "Cannot proceed with the given HA group {HaGroupName} because the node is in a different HA group {ExistingHagrName}.",
            "translation": "Cannot proceed with the given HA group {HaGroupName} because the node is in a different HA group {ExistingHagrName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupName"
                },
                {
                    "id": "ExistingHagrName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "existingHagrName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The node is already in the HA group '{HaGroupName}'.",
            "message": "The node is already in the HA group '{HaGroupName}'.",
            "translation": "The node is already in the HA group '{HaGroupName}'.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HaGroupName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {Org}/{NodeId} is in HA group {ExistingHagrName}.",
            "message": "Node {Org}/{NodeId} is in HA group {ExistingHagrName}.",
            "translation": "Node {Org}/{NodeId} is in HA group {ExistingHagrName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "NodeId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeId"
                },
                {
                    "id": "ExistingHagrName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "existingHagrName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating the node policy...",
            "message": "Updating the node policy...",
            "translation": "Updating the node policy...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Initializing the Horizon node with node type '{NodeType}'...",
            "message": "Initializing the Horizon node with node type '{NodeType}'...",
            "translation": "Initializing the Horizon node with node type '{NodeType}'...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error initializing the node: {Err}",
            "message": "Error initializing the node: {Err}",
            "translation": "Error initializing the node: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Setting global variables...",
            "message": "Setting global variables...",
            "translation": "Setting global variables...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error setting user input variables: {Err}",
            "message": "Error setting user input variables: {Err}",
            "translation": "Error setting user input variables: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Note: no input file was specified. This is only valid if none of the services need variables set.",
            "message": "Note: no input file was specified. This is only valid if none of the services need variables set.",
            "translation": "Note: no input file was specified. This is only valid if none of the services need variables set.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "However, if there is 'userInput' specified in the node already in the Exchange, the userInput will be used.",
            "message": "However, if there is 'userInput' specified in the node already in the Exchange, the userInput will be used.",
            "translation": "However, if there is 'userInput' specified in the node already in the Exchange, the userInput will be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Changing Horizon state to configured to register this node with Horizon...",
            "message": "Changing Horizon state to configured to register this node with Horizon...",
            "translation": "Changing Horizon state to configured to register this node with Horizon...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error setting node state to configured: {Err}",
            "message": "Error setting node state to configured: {Err}",
            "translation": "Error setting node state to configured: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "NOTE: The -s flag is currently not supported for nodeType: {NodeType}. Node registration will complete without waiting for the service to start.",
            "message": "NOTE: The -s flag is currently not supported for nodeType: {NodeType}. Node registration will complete without waiting for the service to start.",
            "translation": "NOTE: The -s flag is currently not supported for nodeType: {NodeType}. Node registration will complete without waiting for the service to start.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeType",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Horizon node is registered. Workload agreement negotiation should begin shortly. Run 'hzn agreement list' to view.",
            "message": "Horizon node is registered. Workload agreement negotiation should begin shortly. Run 'hzn agreement list' to view.",
            "translation": "Horizon node is registered. Workload agreement negotiation should begin shortly. Run 'hzn agreement list' to view.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon node is registered. Workload services should begin executing shortly.",
            "message": "Horizon node is registered. Workload services should begin executing shortly.",
            "translation": "Horizon node is registered. Workload services should begin executing shortly.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Please specify the user credentials with -u flag in order to create or update the HA group {Org}/{HaGroupName}.",
            "message": "Please specify the user credentials with -u flag in order to create or update the HA group {Org}/{HaGroupName}.",
            "translation": "Please specify the user credentials with -u flag in order to create or update the HA group {Org}/{HaGroupName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating HA group {Org}/{HaGroupName} ...",
            "message": "Creating HA group {Org}/{HaGroupName} ...",
            "translation": "Creating HA group {Org}/{HaGroupName} ...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HA group {Org}/{HaGroupName} created with node {NodeId} as the member.",
            "message": "HA group {Org}/{HaGroupName} created with node {NodeId} as the member.",
            "translation": "HA group {Org}/{HaGroupName} created with node {NodeId} as the member.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupName"
                },
                {
                    "id": "NodeId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Adding node {NodeId} to HA group {Org}/{HaGroupName} ...",
            "message": "Adding node {NodeId} to HA group {Org}/{HaGroupName} ...",
            "translation": "Adding node {NodeId} to HA group {Org}/{HaGroupName} ...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {NodeId} is added to HA group {HaGroupName}.",
            "message": "Node {NodeId} is added to HA group {HaGroupName}.",
            "translation": "Node {NodeId} is added to HA group {HaGroupName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "HaGroupName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "haGroupName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Critical error encountered in registration. Attempting to undo registration steps to leave node in the unregistered state.",
            "message": "Critical error encountered in registration. Attempting to undo registration steps to leave node in the unregistered state.",
            "translation": "Critical error encountered in registration. Attempting to undo registration steps to leave node in the unregistered state.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error unregistering node. Retrying.",
            "message": "Error unregistering node. Retrying.",
            "translation": "Error unregistering node. Retrying.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to unregister node. Attempting a deep clean of the node.",
            "message": "Failed to unregister node. Attempting a deep clean of the node.",
            "translation": "Failed to unregister node. Attempting a deep clean of the node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to deep clean the node. {Err}",
            "message": "Failed to deep clean the node. {Err}",
            "translation": "Failed to deep clean the node. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Registration failed. Node successfully returned to unregistered state.",
            "message": "Registration failed. Node successfully returned to unregistered state.",
            "translation": "Registration failed. Node successfully returned to unregistered state.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Bad HTTP code {HttpCode} returned from node.",
            "message": "Bad HTTP code {HttpCode} returned from node.",
            "translation": "Bad HTTP code {HttpCode} returned from node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Call to anax to create node timed out.",
            "message": "Call to anax to create node timed out.",
            "translation": "Call to anax to create node timed out.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Call to {Resource} timed out.",
            "message": "Call to {Resource} timed out.",
            "translation": "Call to {Resource} timed out.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Resource",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "resource"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Registration failed because {Matches0}",
            "message": "Registration failed because {Matches0}",
            "translation": "Registration failed because {Matches0}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Matches0",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "matches[0]"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Errstring}. Please define variables for service {Matches2} in the input file {InputFile}. Run 'hzn unregister' and then 'hzn register...' again",
            "message": "{Errstring}. Please define variables for service {Matches2} in the input file {InputFile}. Run 'hzn unregister' and then 'hzn register...' again",
            "translation": "{Errstring}. Please define variables for service {Matches2} in the input file {InputFile}. Run 'hzn unregister' and then 'hzn register...' again",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Errstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "err_string"
                },
                {
                    "id": "Matches2",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "matches[2]"
                },
                {
                    "id": "InputFile",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "inputFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Errstring}. Please create an input file, define variables for service {Matches2}. Run 'hzn unregister' and then 'hzn register...' again with the -f flag to specify the input file.",
            "message": "{Errstring}. Please create an input file, define variables for service {Matches2}. Run 'hzn unregister' and then 'hzn register...' again with the -f flag to specify the input file.",
            "translation": "{Errstring}. Please create an input file, define variables for service {Matches2}. Run 'hzn unregister' and then 'hzn register...' again with the -f flag to specify the input file.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Errstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "err_string"
                },
                {
                    "id": "Matches2",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "matches[2]"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Call to node to change state to configured executed successfully.",
            "message": "Call to node to change state to configured executed successfully.",
            "translation": "Call to node to change state to configured executed successfully.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Timeout on the call to update node config state. Checking if it is updated.",
            "message": "Timeout on the call to update node config state. Checking if it is updated.",
            "translation": "Timeout on the call to update node config state. Checking if it is updated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node state is unconfigured.",
            "message": "Node state is unconfigured.",
            "translation": "Node state is unconfigured.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Timeout waiting for node config state call to return.",
            "message": "Timeout waiting for node config state call to return.",
            "translation": "Timeout waiting for node config state call to return.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Waiting for node config state update call to return. {TotalWait} seconds until timeout.",
            "message": "Waiting for node config state update call to return. {TotalWait} seconds until timeout.",
            "translation": "Waiting for node config state update call to return. {TotalWait} seconds until timeout.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TotalWait",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "totalWait"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "-o and -p are mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
            "message": "-o and -p are mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
            "translation": "-o and -p are mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Please specify the node organization id.",
            "message": "Please specify the node organization id.",
            "translation": "Please specify the node organization id.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "-s must be specified if --serviceorg is specified",
            "message": "-s must be specified if --serviceorg is specified",
            "translation": "-s must be specified if --serviceorg is specified",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When registering with a node policy, '*' is not a valid value for -s.",
            "message": "When registering with a node policy, '*' is not a valid value for -s.",
            "translation": "When registering with a node policy, '*' is not a valid value for -s.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When registering with a pattern, if -s is '*' (i.e. all the top-level services in the pattern will be monitored), --serviceorg must be omitted.",
            "message": "When registering with a pattern, if -s is '*' (i.e. all the top-level services in the pattern will be monitored), --serviceorg must be omitted.",
            "translation": "When registering with a pattern, if -s is '*' (i.e. all the top-level services in the pattern will be monitored), --serviceorg must be omitted.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "invalid node ID: {Err}",
            "message": "invalid node ID: {Err}",
            "translation": "invalid node ID: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "invalid HA group ID: {Err}",
            "message": "invalid HA group ID: {Err}",
            "translation": "invalid HA group ID: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Could not validate. {Err}",
            "message": "Could not validate. {Err}",
            "translation": "Could not validate. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "A-Za-z0-9, unicode characters and special symbols !-*+()?.,:\u0026@ are only allowed.",
            "message": "A-Za-z0-9, unicode characters and special symbols !-*+()?.,:\u0026@ are only allowed.",
            "translation": "A-Za-z0-9, unicode characters and special symbols !-*+()?.,:\u0026@ are only allowed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Whitespace is not permitted.",
            "message": "Whitespace is not permitted.",
            "translation": "Whitespace is not permitted.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "invalid version range '{Vr}': {Err}",
            "message": "invalid version range '{Vr}': {Err}",
            "translation": "invalid version range '{Vr}': {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Vr",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "vr"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to verify that {Version} is within {VRange}, error {Err}",
            "message": "unable to verify that {Version} is within {VRange}, error {Err}",
            "translation": "unable to verify that {Version} is within {VRange}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "version"
                },
                {
                    "id": "VRange",
                    "string": "%[2]v",
                    "type": "*github.com/open-horizon/anax/semanticversion.Version_Expression",
                    "underlyingType": "*github.com/open-horizon/anax/semanticversion.Version_Expression",
                    "argNum": 2,
                    "expr": "vRange"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "found no services in the Exchange matching: org={Org}, url={Url}, arch={Arch}",
            "message": "found no services in the Exchange matching: org={Org}, url={Url}, arch={Arch}",
            "translation": "found no services in the Exchange matching: org={Org}, url={Url}, arch={Arch}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Url",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "url"
                },
                {
                    "id": "Arch",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "arch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error comparing version {ServiceshighestKey} with version {Version}. {Err}",
            "message": "error comparing version {ServiceshighestKey} with version {Version}. {Err}",
            "translation": "error comparing version {ServiceshighestKey} with version {Version}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceshighestKey",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/exchange.ServiceDefinition",
                    "underlyingType": "struct{Owner string \"json:\\\"owner,omitempty\\\"\"; Label string \"json:\\\"label\\\"\"; Description string \"json:\\\"description\\\"\"; Documentation string \"json:\\\"documentation\\\"\"; Public bool \"json:\\\"public\\\"\"; URL string \"json:\\\"url\\\"\"; Version string \"json:\\\"version\\\"\"; Arch string \"json:\\\"arch\\\"\"; Sharable string \"json:\\\"sharable\\\"\"; MatchHardware github.com/open-horizon/anax/exchange.HardwareRequirement \"json:\\\"matchHardware\\\"\"; RequiredServices []github.com/open-horizon/anax/exchangecommon.ServiceDependency \"json:\\\"requiredServices\\\"\"; UserInputs []github.com/open-horizon/anax/exchangecommon.UserInput \"json:\\\"userInput\\\"\"; Deployment string \"json:\\\"deployment\\\"\"; DeploymentSignature string \"json:\\\"deploymentSignature\\\"\"; ClusterDeployment string \"json:\\\"clusterDeployment\\\"\"; ClusterDeploymentSignature string \"json:\\\"clusterDeploymentSignature\\\"\"; LastUpdated string \"json:\\\"lastUpdated,omitempty\\\"\"}",
                    "argNum": 1,
                    "expr": "svcOutput.Services[highestKey]"
                },
                {
                    "id": "Version",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svc.Version"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "found no services in the Exchange matched: org={Org}, specRef={Url}, version range={VersionRanges}, arch={Arch}",
            "message": "found no services in the Exchange matched: org={Org}, specRef={Url}, version range={VersionRanges}, arch={Arch}",
            "translation": "found no services in the Exchange matched: org={Org}, specRef={Url}, version range={VersionRanges}, arch={Arch}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Url",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "url"
                },
                {
                    "id": "VersionRanges",
                    "string": "%[3]s",
                    "type": "[]string",
                    "underlyingType": "[]string",
                    "argNum": 3,
                    "expr": "versionRanges"
                },
                {
                    "id": "Arch",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "arch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Ignoring version {VersionRange} of service {Org}/{Url} with node type mismatch: the service type '{ServiceType}' does not match the node type '{NodeType}' of the Exchange node {NId}.",
            "message": "Ignoring version {VersionRange} of service {Org}/{Url} with node type mismatch: the service type '{ServiceType}' does not match the node type '{NodeType}' of the Exchange node {NId}.",
            "translation": "Ignoring version {VersionRange} of service {Org}/{Url} with node type mismatch: the service type '{ServiceType}' does not match the node type '{NodeType}' of the Exchange node {NId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VersionRange",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "versionRange"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                },
                {
                    "id": "Url",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "url"
                },
                {
                    "id": "ServiceType",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "serviceType"
                },
                {
                    "id": "NodeType",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "n.GetNodeType()"
                },
                {
                    "id": "NId",
                    "string": "%[6]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 6,
                    "expr": "nId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "found: {Org}, {Url}, {Arch}, {VersionRange}",
            "message": "found: {Org}, {Url}, {Arch}, {VersionRange}",
            "translation": "found: {Org}, {Url}, {Arch}, {VersionRange}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Url",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "url"
                },
                {
                    "id": "Arch",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "arch"
                },
                {
                    "id": "VersionRange",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "versionRange"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to check if deployment requires privileged: {Err}",
            "message": "Failed to check if deployment requires privileged: {Err}",
            "translation": "Failed to check if deployment requires privileged: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "did not find pattern '{PatKey}' as expected",
            "message": "did not find pattern '{PatKey}' as expected",
            "translation": "did not find pattern '{PatKey}' as expected",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatKey",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patKey"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Ignoring service that is a different architecture: {ServiceOrg}, {ServiceURL}, {ServiceArch}",
            "message": "Ignoring service that is a different architecture: {ServiceOrg}, {ServiceURL}, {ServiceArch}",
            "translation": "Ignoring service that is a different architecture: {ServiceOrg}, {ServiceURL}, {ServiceArch}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svc.ServiceOrg"
                },
                {
                    "id": "ServiceURL",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svc.ServiceURL"
                },
                {
                    "id": "ServiceArch",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "svc.ServiceArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal the user input template file: {Err}",
            "message": "failed to marshal the user input template file: {Err}",
            "translation": "failed to marshal the user input template file: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem writing the user input template file: {Err}",
            "message": "problem writing the user input template file: {Err}",
            "translation": "problem writing the user input template file: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Wrote {InputFile}",
            "message": "Wrote {InputFile}",
            "translation": "Wrote {InputFile}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "InputFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "inputFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal the example node policy file: {Err}",
            "message": "failed to marshal the example node policy file: {Err}",
            "translation": "failed to marshal the example node policy file: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem writing the example node policy file: {Err}",
            "message": "problem writing the example node policy file: {Err}",
            "translation": "problem writing the example node policy file: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "One or more of services contain privileged in the deployment string. Make sure your node policy file allows privileged. A sample node policy file has been created: {NodePolicySampleFile}",
            "message": "One or more of services contain privileged in the deployment string. Make sure your node policy file allows privileged. A sample node policy file has been created: {NodePolicySampleFile}",
            "translation": "One or more of services contain privileged in the deployment string. Make sure your node policy file allows privileged. A sample node policy file has been created: {NodePolicySampleFile}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodePolicySampleFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodePolicySampleFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed",
            "message": "Failed",
            "translation": "Failed",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Progress so far: no agreements formed yet",
            "message": "Progress so far: no agreements formed yet",
            "translation": "Progress so far: no agreements formed yet",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Progress so far: agreement proposal has been received",
            "message": "Progress so far: agreement proposal has been received",
            "translation": "Progress so far: agreement proposal has been received",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Progress so far: agreement is accepted",
            "message": "Progress so far: agreement is accepted",
            "translation": "Progress so far: agreement is accepted",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Progress so far: agreement is finalized",
            "message": "Progress so far: agreement is finalized",
            "translation": "Progress so far: agreement is finalized",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Progress so far: service is created",
            "message": "Progress so far: service is created",
            "translation": "Progress so far: service is created",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Progress so far: execution is started",
            "message": "Progress so far: execution is started",
            "translation": "Progress so far: execution is started",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Success",
            "message": "Success",
            "translation": "Success",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Status of the services you are watching:",
            "message": "Status of the services you are watching:",
            "translation": "Status of the services you are watching:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "{Org}/{Name} \t{Status1}",
            "message": "{Org}/{Name} \t{Status1}",
            "translation": "{Org}/{Name} \t{Status1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ss.org"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "ss.name"
                },
                {
                    "id": "Status1",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "statusDetails[ss.status+1]"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "--timeout must be a positive integer.",
            "message": "--timeout must be a positive integer.",
            "translation": "--timeout must be a positive integer.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Waiting for up to {WaitTimeout} seconds for following services to start:",
            "message": "Waiting for up to {WaitTimeout} seconds for following services to start:",
            "translation": "Waiting for up to {WaitTimeout} seconds for following services to start:",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "WaitTimeout",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "waitTimeout"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Org}/{Name}",
            "message": "{Org}/{Name}",
            "translation": "{Org}/{Name}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ss.org"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "ss.name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Timeout waiting for some services to successfully start. Analyzing possible reasons for the timeout...",
            "message": "Timeout waiting for some services to successfully start. Analyzing possible reasons for the timeout...",
            "translation": "Timeout waiting for some services to successfully start. Analyzing possible reasons for the timeout...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The following services failed during execution:",
            "message": "The following services failed during execution:",
            "translation": "The following services failed during execution:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "{Org}/{Name}: {FailedDescArri}",
            "message": "{Org}/{Name}: {FailedDescArri}",
            "translation": "{Org}/{Name}: {FailedDescArri}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ss.org"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "ss.name"
                },
                {
                    "id": "FailedDescArri",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "failedDescArr[i]"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The following services might need more time to start executing, continuing analysis:",
            "message": "The following services might need more time to start executing, continuing analysis:",
            "translation": "The following services might need more time to start executing, continuing analysis:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The following services are not deployed to the node, continuing analysis:",
            "message": "The following services are not deployed to the node, continuing analysis:",
            "translation": "The following services are not deployed to the node, continuing analysis:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Currently, there are {Lenags} active agreements on this node. Use `hzn agreement list' to see the agreements that have been formed so far.",
            "message": "Currently, there are {Lenags} active agreements on this node. Use `hzn agreement list' to see the agreements that have been formed so far.",
            "translation": "Currently, there are {Lenags} active agreements on this node. Use `hzn agreement list' to see the agreements that have been formed so far.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Lenags",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "len(ags)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Currently, there are no active agreements on this node.",
            "message": "Currently, there are no active agreements on this node.",
            "translation": "Currently, there are no active agreements on this node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Currently, there are no errors recorded in the node's event log.",
            "message": "Currently, there are no errors recorded in the node's event log.",
            "translation": "Currently, there are no errors recorded in the node's event log.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Use the 'hzn deploycheck all -b' or 'hzn deploycheck all -B' command to verify that node, service configuration and deployment policy are compatible.",
            "message": "Use the 'hzn deploycheck all -b' or 'hzn deploycheck all -B' command to verify that node, service configuration and deployment policy are compatible.",
            "translation": "Use the 'hzn deploycheck all -b' or 'hzn deploycheck all -B' command to verify that node, service configuration and deployment policy are compatible.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Using the 'hzn deploycheck all -p' command to verify that node, service configuration and pattern are compatible.",
            "message": "Using the 'hzn deploycheck all -p' command to verify that node, service configuration and pattern are compatible.",
            "translation": "Using the 'hzn deploycheck all -p' command to verify that node, service configuration and pattern are compatible.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Command output:",
            "message": "Command output:",
            "translation": "Command output:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Using the 'hzn deploycheck userinput -p' command to verify that node, service configuration and pattern are compatible.",
            "message": "Using the 'hzn deploycheck userinput -p' command to verify that node, service configuration and pattern are compatible.",
            "translation": "Using the 'hzn deploycheck userinput -p' command to verify that node, service configuration and pattern are compatible.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The secret binding compatibility cannot be verified because the user credential is not provided. Please use the 'hzn deploycheck secretbinding -p' command to verify.",
            "message": "The secret binding compatibility cannot be verified because the user credential is not provided. Please use the 'hzn deploycheck secretbinding -p' command to verify.",
            "translation": "The secret binding compatibility cannot be verified because the user credential is not provided. Please use the 'hzn deploycheck secretbinding -p' command to verify.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to convert eventlog source, error: {Err}",
            "message": "unable to convert eventlog source, error: {Err}",
            "translation": "unable to convert eventlog source, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Format2006_01_02_150405}: {Message}",
            "message": "{Format2006_01_02_150405}: {Message}",
            "translation": "{Format2006_01_02_150405}: {Message}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Format2006_01_02_150405",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "t.Format(\"2006-01-02 15:04:05\")"
                },
                {
                    "id": "Message",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "el.Message"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The following errors were found in the node's event log and are related to {Org}/{Name}. Use 'hzn eventlog list -s severity=error -l' to see the full detail of the errors.",
            "message": "The following errors were found in the node's event log and are related to {Org}/{Name}. Use 'hzn eventlog list -s severity=error -l' to see the full detail of the errors.",
            "translation": "The following errors were found in the node's event log and are related to {Org}/{Name}. Use 'hzn eventlog list -s severity=error -l' to see the full detail of the errors.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ss.org"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "ss.name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Analysis complete.",
            "message": "Analysis complete.",
            "translation": "Analysis complete.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Importing key file name: {Name}",
            "message": "Importing key file name: {Name}",
            "translation": "Importing key file name: {Name}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFile.Name()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unsupported key file type extension: {Name}",
            "message": "unsupported key file type extension: {Name}",
            "translation": "unsupported key file type extension: {Name}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFile.Name()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Key \"{Name}\" successfully added to the SDO owner services.",
            "message": "Key \"{Name}\" successfully added to the SDO owner services.",
            "translation": "Key \"{Name}\" successfully added to the SDO owner services.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFile.Name()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Key \"{Name}\" successfully downloaded to {FileName} from the SDO owner services.",
            "message": "Key \"{Name}\" successfully downloaded to {FileName} from the SDO owner services.",
            "translation": "Key \"{Name}\" successfully downloaded to {FileName} from the SDO owner services.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFile.Name()"
                },
                {
                    "id": "FileName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Listing SDO keys.",
            "message": "Listing SDO keys.",
            "translation": "Listing SDO keys.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "SDO key name {KeyName} not found",
            "message": "SDO key name {KeyName} not found",
            "translation": "SDO key name {KeyName} not found",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn sdo keys list' output: {Err}",
            "message": "failed to marshal 'hzn sdo keys list' output: {Err}",
            "translation": "failed to marshal 'hzn sdo keys list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Downloading SDO key \"{KeyName}\".",
            "message": "Downloading SDO key \"{KeyName}\".",
            "translation": "Downloading SDO key \"{KeyName}\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removing SDO key \"{KeyName}\".",
            "message": "Removing SDO key \"{KeyName}\".",
            "translation": "Removing SDO key \"{KeyName}\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Key \"{KeyName}\" successfully deleted from the SDO owner services.",
            "message": "Key \"{KeyName}\" successfully deleted from the SDO owner services.",
            "translation": "Key \"{KeyName}\" successfully deleted from the SDO owner services.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating SDO key template at \"{OutputFile}\".",
            "message": "Creating SDO key template at \"{OutputFile}\".",
            "translation": "Creating SDO key template at \"{OutputFile}\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OutputFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "outputFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "parsing the json: {Err}",
            "message": "parsing the json: {Err}",
            "translation": "parsing the json: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Key template successfully written to {FileName}.",
            "message": "Key template successfully written to {FileName}.",
            "translation": "Key template successfully written to {FileName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid key name. Key \"{KeyName}\" does not exist in org \"{Org}\".",
            "message": "Invalid key name. Key \"{KeyName}\" does not exist in org \"{Org}\".",
            "translation": "Invalid key name. Key \"{KeyName}\" does not exist in org \"{Org}\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyName"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid metadata file. Key \"{Name}\" already exists in SDO owner services for org \"{Org}\".",
            "message": "Invalid metadata file. Key \"{Name}\" already exists in SDO owner services for org \"{Org}\".",
            "translation": "Invalid metadata file. Key \"{Name}\" already exists in SDO owner services for org \"{Org}\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "key.Name"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid metadata file. Key already exists in SDO owner services for org \"{Org}\".",
            "message": "Invalid metadata file. Key already exists in SDO owner services for org \"{Org}\".",
            "translation": "Invalid metadata file. Key already exists in SDO owner services for org \"{Org}\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid credentials. User \"{User}\" cannot access keys in org \"{Org}\" with given credentials.",
            "message": "Invalid credentials. User \"{User}\" cannot access keys in org \"{Org}\" with given credentials.",
            "translation": "Invalid credentials. User \"{User}\" cannot access keys in org \"{Org}\" with given credentials.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "User",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "user"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid credentials. User \"{User}\" cannot access key \"{KeyName}\" in org \"{Org}\" with given credentials.",
            "message": "Invalid credentials. User \"{User}\" cannot access key \"{KeyName}\" in org \"{Org}\" with given credentials.",
            "translation": "Invalid credentials. User \"{User}\" cannot access key \"{KeyName}\" in org \"{Org}\" with given credentials.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "User",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "user"
                },
                {
                    "id": "KeyName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "keyName"
                },
                {
                    "id": "Org",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "parsing the json from {KeyFileName}: {Err}",
            "message": "parsing the json from {KeyFileName}: {Err}",
            "translation": "parsing the json from {KeyFileName}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFileName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "given metadata file {KeyFileName} has missing fields:\n{Err}",
            "message": "given metadata file {KeyFileName} has missing fields:\n{Err}",
            "translation": "given metadata file {KeyFileName} has missing fields:\n{Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFileName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]s",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "given metadata file {KeyFileName} has unsupported key name.\n{Err}",
            "message": "given metadata file {KeyFileName} has unsupported key name.\n{Err}",
            "translation": "given metadata file {KeyFileName} has unsupported key name.\n{Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFileName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]s",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "given metadata file {KeyFileName} has unsupported country name.\n{Err}",
            "message": "given metadata file {KeyFileName} has unsupported country name.\n{Err}",
            "translation": "given metadata file {KeyFileName} has unsupported country name.\n{Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFileName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]s",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "JSON Body:{StringkeyBytes}",
            "message": "JSON Body:{StringkeyBytes}",
            "translation": "JSON Body:{StringkeyBytes}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "StringkeyBytes",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(keyBytes)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "field \"key_name\" is missing",
            "message": "field \"key_name\" is missing",
            "translation": "field \"key_name\" is missing",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "field \"{Field}\" is missing",
            "message": "field \"{Field}\" is missing",
            "translation": "field \"{Field}\" is missing",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Field",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "field"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Please fill these and try again.",
            "message": "Please fill these and try again.",
            "translation": "Please fill these and try again.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Key name can only contain lowercase characters, numbers, and hyphens",
            "message": "Key name can only contain lowercase characters, numbers, and hyphens",
            "translation": "Key name can only contain lowercase characters, numbers, and hyphens",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Country name must be a 2 Letter Country Code",
            "message": "Country name must be a 2 Letter Country Code",
            "translation": "Country name must be a 2 Letter Country Code",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Inspecting voucher file name: {Name}",
            "message": "Inspecting voucher file name: {Name}",
            "translation": "Inspecting voucher file name: {Name}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "voucherFile.Name()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "WARNING: \"hzn voucher inspect\" is deprecated and will be removed in a future release. Please use \"hzn sdo voucher inspect\" instead.",
            "message": "WARNING: \"hzn voucher inspect\" is deprecated and will be removed in a future release. Please use \"hzn sdo voucher inspect\" instead.",
            "translation": "WARNING: \"hzn voucher inspect\" is deprecated and will be removed in a future release. Please use \"hzn sdo voucher inspect\" instead.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "parsing json: {Error}",
            "message": "parsing json: {Error}",
            "translation": "parsing json: {Error}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Error",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "err.Error()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "base64 decoding {T4}: {Err}",
            "message": "base64 decoding {T4}: {Err}",
            "translation": "base64 decoding {T4}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "T4",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "t4"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "decoding {T4} yielded {N} bytes",
            "message": "decoding {T4} yielded {N} bytes",
            "translation": "decoding {T4} yielded {N} bytes",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "T4",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "t4"
                },
                {
                    "id": "N",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "n"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "did not find any rendezvous server URLs in the voucher",
            "message": "did not find any rendezvous server URLs in the voucher",
            "translation": "did not find any rendezvous server URLs in the voucher",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "decoding UUID: {Error}",
            "message": "decoding UUID: {Error}",
            "translation": "decoding UUID: {Error}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Error",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "err.Error()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Listing imported SDO vouchers.",
            "message": "Listing imported SDO vouchers.",
            "translation": "Listing imported SDO vouchers.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid credentials. User \"{User}\" cannot access voucher \"{Voucher}\" in org \"{Org}\" with given credentials.",
            "message": "Invalid credentials. User \"{User}\" cannot access voucher \"{Voucher}\" in org \"{Org}\" with given credentials.",
            "translation": "Invalid credentials. User \"{User}\" cannot access voucher \"{Voucher}\" in org \"{Org}\" with given credentials.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "User",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "user"
                },
                {
                    "id": "Voucher",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "voucher"
                },
                {
                    "id": "Org",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn sdo voucher list' output: {Err}",
            "message": "failed to marshal 'hzn sdo voucher list' output: {Err}",
            "translation": "failed to marshal 'hzn sdo voucher list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "WARNING: \"hzn voucher list\" is deprecated and will be removed in a future release. Please use \"hzn sdo voucher list\" instead.",
            "message": "WARNING: \"hzn voucher list\" is deprecated and will be removed in a future release. Please use \"hzn sdo voucher list\" instead.",
            "translation": "WARNING: \"hzn voucher list\" is deprecated and will be removed in a future release. Please use \"hzn sdo voucher list\" instead.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Voucher \"{Device}\" successfully downloaded to {FileName} from the SDO owner services.",
            "message": "Voucher \"{Device}\" successfully downloaded to {FileName} from the SDO owner services.",
            "translation": "Voucher \"{Device}\" successfully downloaded to {FileName} from the SDO owner services.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Device",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "device"
                },
                {
                    "id": "FileName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unsupported voucher file type extension: {Name}",
            "message": "unsupported voucher file type extension: {Name}",
            "translation": "unsupported voucher file type extension: {Name}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "voucherFile.Name()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "WARNING: \"hzn voucher import\" is deprecated and will be removed in a future release. Please use \"hzn sdo voucher import\" instead.",
            "message": "WARNING: \"hzn voucher import\" is deprecated and will be removed in a future release. Please use \"hzn sdo voucher import\" instead.",
            "translation": "WARNING: \"hzn voucher import\" is deprecated and will be removed in a future release. Please use \"hzn sdo voucher import\" instead.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Importing {VoucherFileName} for device {Uuid}, using rendezvous servers {RendezvousUrls__} ...",
            "message": "Importing {VoucherFileName} for device {Uuid}, using rendezvous servers {RendezvousUrls__} ...",
            "translation": "Importing {VoucherFileName} for device {Uuid}, using rendezvous servers {RendezvousUrls__} ...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VoucherFileName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "voucherFileName"
                },
                {
                    "id": "Uuid",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "outStruct.Device.Uuid"
                },
                {
                    "id": "RendezvousUrls__",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "strings.Join(outStruct.Voucher.RendezvousUrls, \", \")"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal REST API response: {Perr}",
            "message": "failed to unmarshal REST API response: {Perr}",
            "translation": "failed to unmarshal REST API response: {Perr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Perr",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "perr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'agbot API' output: {Jerr}",
            "message": "failed to marshal 'agbot API' output: {Jerr}",
            "translation": "failed to marshal 'agbot API' output: {Jerr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Jerr",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "jerr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Vault component not found in the management hub. Retrying...",
            "message": "Vault component not found in the management hub. Retrying...",
            "translation": "Vault component not found in the management hub. Retrying...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "-f is mutually exclusive with --secretDetail.",
            "message": "-f is mutually exclusive with --secretDetail.",
            "translation": "-f is mutually exclusive with --secretDetail.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Must specify either -f or --secretDetail.",
            "message": "Must specify either -f or --secretDetail.",
            "translation": "Must specify either -f or --secretDetail.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Incorrect secret name given: {SecretName}",
            "message": "Incorrect secret name given: {SecretName}",
            "translation": "Incorrect secret name given: {SecretName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecretName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Secret \"{SecretName}\" already exists in the secrets manager. Do you want to overwrite?",
            "message": "Secret \"{SecretName}\" already exists in the secrets manager. Do you want to overwrite?",
            "translation": "Secret \"{SecretName}\" already exists in the secrets manager. Do you want to overwrite?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecretName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Secret \"{SecretName}\" successfully added to the secrets manager.",
            "message": "Secret \"{SecretName}\" successfully added to the secrets manager.",
            "translation": "Secret \"{SecretName}\" successfully added to the secrets manager.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecretName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove secret {SecretName} from the secrets manager?",
            "message": "Are you sure you want to remove secret {SecretName} from the secrets manager?",
            "translation": "Are you sure you want to remove secret {SecretName} from the secrets manager?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecretName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Secret \"{SecretName}\" successfully deleted from the secrets manager.",
            "message": "Secret \"{SecretName}\" successfully deleted from the secrets manager.",
            "translation": "Secret \"{SecretName}\" successfully deleted from the secrets manager.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecretName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Bad request, secret name \"{SecretName}\" invalid.",
            "message": "Bad request, secret name \"{SecretName}\" invalid.",
            "translation": "Bad request, secret name \"{SecretName}\" invalid.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecretName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Permission denied, user \"{User}\" cannot access \"{SecretName}\".",
            "message": "Permission denied, user \"{User}\" cannot access \"{SecretName}\".",
            "translation": "Permission denied, user \"{User}\" cannot access \"{SecretName}\".",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "User",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "user"
                },
                {
                    "id": "SecretName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "secretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Secret \"{SecretName}\" not found in the secrets manager, nothing to remove.",
            "message": "Secret \"{SecretName}\" not found in the secrets manager, nothing to remove.",
            "translation": "Secret \"{SecretName}\" not found in the secrets manager, nothing to remove.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecretName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Vault component not found in the management hub.",
            "message": "Vault component not found in the management hub.",
            "translation": "Vault component not found in the management hub.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn service list' output: {Err}",
            "message": "failed to marshal 'hzn service list' output: {Err}",
            "translation": "failed to marshal 'hzn service list' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The node is not registered.",
            "message": "The node is not registered.",
            "translation": "The node is not registered.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Found service {SpecRef} with service id {InstanceId}.",
            "message": "Found service {SpecRef} with service id {InstanceId}.",
            "translation": "Found service {SpecRef} with service id {InstanceId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SpecRef",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceInstanceFound.SpecRef"
                },
                {
                    "id": "InstanceId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "instanceId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service {RefUrl} is not running on the node.",
            "message": "Service {RefUrl} is not running on the node.",
            "translation": "Service {RefUrl} is not running on the node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RefUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "refUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service {RefUrl} version {ServiceVersion} is not running on the node.",
            "message": "Service {RefUrl} version {ServiceVersion} is not running on the node.",
            "translation": "Service {RefUrl} version {ServiceVersion} is not running on the node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RefUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "refUrl"
                },
                {
                    "id": "ServiceVersion",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceVersion"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deployment unmarshalling error: {Err}",
            "message": "Deployment unmarshalling error: {Err}",
            "translation": "Deployment unmarshalling error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service definition {ServiceName} consists of more than one container: {JoincNames__}. Please specify the service name by -c flag",
            "message": "Service definition {ServiceName} consists of more than one container: {JoincNames__}. Please specify the service name by -c flag",
            "translation": "Service definition {ServiceName} consists of more than one container: {JoincNames__}. Please specify the service name by -c flag",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceName"
                },
                {
                    "id": "JoincNames__",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "strings.Join(cNames, \", \")"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service logs are unavailable: {Err}",
            "message": "Service logs are unavailable: {Err}",
            "translation": "Service logs are unavailable: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Container {ContainerName} is not running as part of service {ServiceName}.",
            "message": "Container {ContainerName} is not running as part of service {ServiceName}.",
            "translation": "Container {ContainerName} is not running as part of service {ServiceName}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ContainerName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "containerName"
                },
                {
                    "id": "ServiceName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Container {ContainerName} is not running as part of service {ServiceName} version.",
            "message": "Container {ContainerName} is not running as part of service {ServiceName} version.",
            "translation": "Container {ContainerName} is not running as part of service {ServiceName} version.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ContainerName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "containerName"
                },
                {
                    "id": "ServiceName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceName"
                },
                {
                    "id": "ServiceVersion",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceVersion"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Could not find service {ServiceName} running on the node.",
            "message": "Could not find service {ServiceName} running on the node.",
            "translation": "Could not find service {ServiceName} running on the node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Could not find service {ServiceName} version {ServiceVersion} running on the node.",
            "message": "Could not find service {ServiceName} version {ServiceVersion} running on the node.",
            "translation": "Could not find service {ServiceName} version {ServiceVersion} running on the node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceName"
                },
                {
                    "id": "ServiceVersion",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceVersion"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Displaying log messages of container {ContainerName} for service {Name} with service id {InstanceId}.",
            "message": "Displaying log messages of container {ContainerName} for service {Name} with service id {InstanceId}.",
            "translation": "Displaying log messages of container {ContainerName} for service {Name} with service id {InstanceId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ContainerName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "containerName"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "name"
                },
                {
                    "id": "InstanceId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "instanceId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn service registered' output: {Err}",
            "message": "failed to marshal 'hzn service registered' output: {Err}",
            "translation": "failed to marshal 'hzn service registered' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn service configstate' output: {Err}",
            "message": "failed to marshal 'hzn service configstate' output: {Err}",
            "translation": "failed to marshal 'hzn service configstate' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "all the registered services",
            "message": "all the registered services",
            "translation": "all the registered services",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "service {ServiceOrg}/{ServiceUrl} version {ServiceVer}",
            "message": "service {ServiceOrg}/{ServiceUrl} version {ServiceVer}",
            "translation": "service {ServiceOrg}/{ServiceUrl} version {ServiceVer}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceOrg"
                },
                {
                    "id": "ServiceUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceUrl"
                },
                {
                    "id": "ServiceVer",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceVer"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "all the versions for service {ServiceOrg}/{ServiceUrl}",
            "message": "all the versions for service {ServiceOrg}/{ServiceUrl}",
            "translation": "all the versions for service {ServiceOrg}/{ServiceUrl}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceOrg"
                },
                {
                    "id": "ServiceUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "all the registered services from organization {ServiceOrg}",
            "message": "all the registered services from organization {ServiceOrg}",
            "translation": "all the registered services from organization {ServiceOrg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Please specify the service name for version {ServiceVer}.",
            "message": "Please specify the service name for version {ServiceVer}.",
            "translation": "Please specify the service name for version {ServiceVer}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceVer",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceVer"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Please specify the organization for service {ServiceUrl}.",
            "message": "Please specify the organization for service {ServiceUrl}.",
            "translation": "Please specify the organization for service {ServiceUrl}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to suspend {Msgpart} for this Horizon node?",
            "message": "Are you sure you want to suspend {Msgpart} for this Horizon node?",
            "translation": "Are you sure you want to suspend {Msgpart} for this Horizon node?",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msgpart",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg_part"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Suspending {Msgpart}, cancelling related agreements, stopping related service containers...",
            "message": "Suspending {Msgpart}, cancelling related agreements, stopping related service containers...",
            "translation": "Suspending {Msgpart}, cancelling related agreements, stopping related service containers...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msgpart",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg_part"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service suspending request successfully sent, please use 'hzn agreement' and 'docker ps' to make sure the related agreements and service containers are removed. It may take a couple of minutes.",
            "message": "Service suspending request successfully sent, please use 'hzn agreement' and 'docker ps' to make sure the related agreements and service containers are removed. It may take a couple of minutes.",
            "translation": "Service suspending request successfully sent, please use 'hzn agreement' and 'docker ps' to make sure the related agreements and service containers are removed. It may take a couple of minutes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error returned suspending the service: {RespBody}",
            "message": "Error returned suspending the service: {RespBody}",
            "translation": "Error returned suspending the service: {RespBody}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RespBody",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "respBody"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error: {Err}",
            "message": "Error: {Err}",
            "translation": "Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Resuming {Msgpart} ...",
            "message": "Resuming {Msgpart} ...",
            "translation": "Resuming {Msgpart} ...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msgpart",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg_part"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service resuming request successfully sent, please use 'hzn agreement' and 'docker ps' to make sure the related agreements and service containers are started. It may take a couple of minutes.",
            "message": "Service resuming request successfully sent, please use 'hzn agreement' and 'docker ps' to make sure the related agreements and service containers are started. It may take a couple of minutes.",
            "translation": "Service resuming request successfully sent, please use 'hzn agreement' and 'docker ps' to make sure the related agreements and service containers are started. It may take a couple of minutes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error returned resuming the service: {RespBody}",
            "message": "Error returned resuming the service: {RespBody}",
            "translation": "Error returned resuming the service: {RespBody}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RespBody",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "respBody"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn status -l' output: {Err}",
            "message": "failed to marshal 'hzn status -l' output: {Err}",
            "translation": "failed to marshal 'hzn status -l' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn status' output: {Err}",
            "message": "failed to marshal 'hzn status' output: {Err}",
            "translation": "failed to marshal 'hzn status' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "must specify exchange credentials to access the model management service",
            "message": "must specify exchange credentials to access the model management service",
            "translation": "must specify exchange credentials to access the model management service",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "object '{ObjId}' of type '{ObjType}' not found in org {Org}",
            "message": "object '{ObjId}' of type '{ObjType}' not found in org {Org}",
            "translation": "object '{ObjId}' of type '{ObjType}' not found in org {Org}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objId"
                },
                {
                    "id": "ObjType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "objType"
                },
                {
                    "id": "Org",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Verifying data with digital signature....",
            "message": "Verifying data with digital signature....",
            "translation": "Verifying data with digital signature....",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to verify data: {Error}",
            "message": "Failed to verify data: {Error}",
            "translation": "Failed to verify data: {Error}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Error",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "err.Error()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Verifying digital signature is done.",
            "message": "Verifying digital signature is done.",
            "translation": "Verifying digital signature is done.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to save data for object '{ObjId}' of type '{ObjType}' to file {FileName}, err: {Err}",
            "message": "Failed to save data for object '{ObjId}' of type '{ObjType}' to file {FileName}, err: {Err}",
            "translation": "Failed to save data for object '{ObjId}' of type '{ObjType}' to file {FileName}, err: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objId"
                },
                {
                    "id": "ObjType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "objType"
                },
                {
                    "id": "FileName",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Data of object {ObjId} saved to file {FileName}",
            "message": "Data of object {ObjId} saved to file {FileName}",
            "translation": "Data of object {ObjId} saved to file {FileName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objId"
                },
                {
                    "id": "FileName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "must specify exchange credentials to access the model management service.",
            "message": "must specify exchange credentials to access the model management service.",
            "translation": "must specify exchange credentials to access the model management service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid --policy/-p value: {DestPolicy}, --policy/-p should be true or false",
            "message": "Invalid --policy/-p value: {DestPolicy}, --policy/-p should be true or false",
            "translation": "Invalid --policy/-p value: {DestPolicy}, --policy/-p should be true or false",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DestPolicy",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "destPolicy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid --data value: {WithData}, --data should be true or false",
            "message": "Invalid --data value: {WithData}, --data should be true or false",
            "translation": "Invalid --data value: {WithData}, --data should be true or false",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "WithData",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "withData"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "must omit --policy or set it to true when filtering by --service, --property, or --updateTime",
            "message": "must omit --policy or set it to true when filtering by --service, --property, or --updateTime",
            "translation": "must omit --policy or set it to true when filtering by --service, --property, or --updateTime",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "service should be in format service-org/service-name",
            "message": "service should be in format service-org/service-name",
            "translation": "service should be in format service-org/service-name",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "updateTime should be in RC3339 format: yyyy-MM-ddTHH:mm:ssZ, or yyyy-MM-dd",
            "message": "updateTime should be in RC3339 format: yyyy-MM-ddTHH:mm:ssZ, or yyyy-MM-dd",
            "translation": "updateTime should be in RC3339 format: yyyy-MM-ddTHH:mm:ssZ, or yyyy-MM-dd",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "must specify destinationType if set destinationId",
            "message": "must specify destinationType if set destinationId",
            "translation": "must specify destinationType if set destinationId",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "expirationTimeBefore should be specified 'now' or timestamp in RC3339 format: yyyy-MM-ddTHH:mm:ssZ",
            "message": "expirationTimeBefore should be specified 'now' or timestamp in RC3339 format: yyyy-MM-ddTHH:mm:ssZ",
            "translation": "expirationTimeBefore should be specified 'now' or timestamp in RC3339 format: yyyy-MM-ddTHH:mm:ssZ",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid --deleted value: {WithData}, --data should be true or false",
            "message": "Invalid --deleted value: {WithData}, --data should be true or false",
            "translation": "Invalid --deleted value: {WithData}, --data should be true or false",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "WithData",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "withData"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "destination detail for object '{ObjectID}' of type '{ObjectType}' not found in org {Org}",
            "message": "destination detail for object '{ObjectID}' of type '{ObjectType}' not found in org {Org}",
            "translation": "destination detail for object '{ObjectID}' of type '{ObjectType}' not found in org {Org}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjectID",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "obj.ObjectID"
                },
                {
                    "id": "ObjectType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "obj.ObjectType"
                },
                {
                    "id": "Org",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn mms object list' output: {Err1}",
            "message": "failed to marshal 'hzn mms object list' output: {Err1}",
            "translation": "failed to marshal 'hzn mms object list' output: {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err1",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Listing objects in org {Org}:",
            "message": "Listing objects in org {Org}:",
            "translation": "Listing objects in org {Org}:",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Required: A unique identifier of the object.",
            "message": "Required: A unique identifier of the object.",
            "translation": "Required: A unique identifier of the object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Required: The type of the object.",
            "message": "Required: The type of the object.",
            "translation": "Required: The type of the object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Required: The organization ID of the object (an object belongs to exactly one organization).",
            "message": "Required: The organization ID of the object (an object belongs to exactly one organization).",
            "translation": "Required: The organization ID of the object (an object belongs to exactly one organization).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node id (without org prefix) where the object should be placed.",
            "message": "The node id (without org prefix) where the object should be placed.",
            "translation": "The node id (without org prefix) where the object should be placed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "If omitted the object is sent to all nodes with the same destinationType.",
            "message": "If omitted the object is sent to all nodes with the same destinationType.",
            "translation": "If omitted the object is sent to all nodes with the same destinationType.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Delete this field when you are using destinationPolicy.",
            "message": "Delete this field when you are using destinationPolicy.",
            "translation": "Delete this field when you are using destinationPolicy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The pattern in use by nodes that should receive this object.",
            "message": "The pattern in use by nodes that should receive this object.",
            "translation": "The pattern in use by nodes that should receive this object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "If omitted (and if destinationsList is omitted too) the object is broadcast to all known nodes.",
            "message": "If omitted (and if destinationsList is omitted too) the object is broadcast to all known nodes.",
            "translation": "If omitted (and if destinationsList is omitted too) the object is broadcast to all known nodes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Delete this field when you are using policy.",
            "message": "Delete this field when you are using policy.",
            "translation": "Delete this field when you are using policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The list of destinations as an array of pattern:nodeId pairs that should receive this object.",
            "message": "The list of destinations as an array of pattern:nodeId pairs that should receive this object.",
            "translation": "The list of destinations as an array of pattern:nodeId pairs that should receive this object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "If provided, destinationType and destinationID must be omitted.",
            "message": "If provided, destinationType and destinationID must be omitted.",
            "translation": "If provided, destinationType and destinationID must be omitted.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The policy specification that should be used to distribute this object.",
            "message": "The policy specification that should be used to distribute this object.",
            "translation": "The policy specification that should be used to distribute this object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Delete these fields if the target node is using a pattern.",
            "message": "Delete these fields if the target node is using a pattern.",
            "translation": "Delete these fields if the target node is using a pattern.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Valid types are string, bool, int, float, list of strings (comma separated), version.",
            "message": "Valid types are string, bool, int, float, list of strings (comma separated), version.",
            "translation": "Valid types are string, bool, int, float, list of strings (comma separated), version.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Type can be omitted if the type is discernable from the value, e.g. unquoted true is boolean.",
            "message": "Type can be omitted if the type is discernable from the value, e.g. unquoted true is boolean.",
            "translation": "Type can be omitted if the type is discernable from the value, e.g. unquoted true is boolean.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e, separated by boolean operators AND (\u0026\u0026) or OR (||).",
            "message": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e, separated by boolean operators AND (\u0026\u0026) or OR (||).",
            "translation": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e, separated by boolean operators AND (\u0026\u0026) or OR (||).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service(s) that will use this object.",
            "message": "The service(s) that will use this object.",
            "translation": "The service(s) that will use this object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Set to '*' to indicate services of any hardware architecture.",
            "message": "Set to '*' to indicate services of any hardware architecture.",
            "translation": "Set to '*' to indicate services of any hardware architecture.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A version range.",
            "message": "A version range.",
            "translation": "A version range.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A timestamp/date indicating when the object expires (it is automatically deleted). The timestamp should be provided in RFC3339 format.",
            "message": "A timestamp/date indicating when the object expires (it is automatically deleted). The timestamp should be provided in RFC3339 format.",
            "translation": "A timestamp/date indicating when the object expires (it is automatically deleted). The timestamp should be provided in RFC3339 format.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Arbitrary string value. The value is not semantically interpreted. The Model Management System does not keep multiple version of an object.",
            "message": "Arbitrary string value. The value is not semantically interpreted. The Model Management System does not keep multiple version of an object.",
            "translation": "Arbitrary string value. The value is not semantically interpreted. The Model Management System does not keep multiple version of an object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "An arbitrary description.",
            "message": "An arbitrary description.",
            "translation": "An arbitrary description.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A timestamp/date as to when this object should automatically be activated. The timestamp should be provided in RFC3339 format.",
            "message": "A timestamp/date as to when this object should automatically be activated. The timestamp should be provided in RFC3339 format.",
            "translation": "A timestamp/date as to when this object should automatically be activated. The timestamp should be provided in RFC3339 format.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "must specify --id with --type",
            "message": "must specify --id with --type",
            "translation": "must specify --id with --type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "cannot specify --id and --type with --def",
            "message": "cannot specify --id and --type with --def",
            "translation": "cannot specify --id and --type with --def",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "must specify either --type and --id or --def",
            "message": "must specify either --type and --id or --def",
            "translation": "must specify either --type and --id or --def",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "cannot specify --pattern with --def",
            "message": "cannot specify --pattern with --def",
            "translation": "cannot specify --pattern with --def",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "cannot specify --skipDigitalSig with --hash",
            "message": "cannot specify --skipDigitalSig with --hash",
            "translation": "cannot specify --skipDigitalSig with --hash",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "cannot specify --skipDigitalSig with --hashAlgo",
            "message": "cannot specify --skipDigitalSig with --hashAlgo",
            "translation": "cannot specify --skipDigitalSig with --hashAlgo",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "invalid value for --hashAlgo, please use SHA1 or SHA256",
            "message": "invalid value for --hashAlgo, please use SHA1 or SHA256",
            "translation": "invalid value for --hashAlgo, please use SHA1 or SHA256",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal definition file {ObjMetadataFile}: {Err}",
            "message": "failed to unmarshal definition file {ObjMetadataFile}: {Err}",
            "translation": "failed to unmarshal definition file {ObjMetadataFile}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjMetadataFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objMetadataFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Digital sign with {HashAlgorithm} will be performed for data integrity. It will delay the MMS object publish.",
            "message": "Digital sign with {HashAlgorithm} will be performed for data integrity. It will delay the MMS object publish.",
            "translation": "Digital sign with {HashAlgorithm} will be performed for data integrity. It will delay the MMS object publish.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HashAlgorithm",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "hashAlgorithm"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to digital sign the file {ObjFile}, Error: {Err}",
            "message": "failed to digital sign the file {ObjFile}, Error: {Err}",
            "translation": "failed to digital sign the file {ObjFile}, Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Upload object in chunk, chunk size is: {ChunkSize}",
            "message": "Upload object in chunk, chunk size is: {ChunkSize}",
            "translation": "Upload object in chunk, chunk size is: {ChunkSize}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ChunkSize",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "chunkSize"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Object {ObjFile} uploaded to org {Org} in the Model Management Service",
            "message": "Object {ObjFile} uploaded to org {Org} in the Model Management Service",
            "translation": "Object {ObjFile} uploaded to org {Org} in the Model Management Service",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objFile"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Object status: {Stringresp}",
            "message": "Object status: {Stringresp}",
            "translation": "Object status: {Stringresp}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Stringresp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(resp)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Object status is still {Stringresp} after {Count} try",
            "message": "Object status is still {Stringresp} after {Count} try",
            "translation": "Object status is still {Stringresp} after {Count} try",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Stringresp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(resp)"
                },
                {
                    "id": "Count",
                    "string": "%[2]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "count"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Object {ObjectID} added to org {Org} in the Model Management Service",
            "message": "Object {ObjectID} added to org {Org} in the Model Management Service",
            "translation": "Object {ObjectID} added to org {Org} in the Model Management Service",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjectID",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objectMeta.ObjectID"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Object {ObjId} deleted from org {Org} in the Model Management Service",
            "message": "Object {ObjId} deleted from org {Org} in the Model Management Service",
            "translation": "Object {ObjId} deleted from org {Org} in the Model Management Service",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objId"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn mms object types' output: {Err}",
            "message": "failed to marshal 'hzn mms object types' output: {Err}",
            "translation": "failed to marshal 'hzn mms object types' output: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Hash value is loaded.",
            "message": "Hash value is loaded.",
            "translation": "Hash value is loaded.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Start hashing the file...",
            "message": "Start hashing the file...",
            "translation": "Start hashing the file...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Data hash is generated. Start digital signing with the data hash...",
            "message": "Data hash is generated. Start digital signing with the data hash...",
            "translation": "Data hash is generated. Start digital signing with the data hash...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Hash algorithm {HashAlgo} is not supported",
            "message": "Hash algorithm {HashAlgo} is not supported",
            "translation": "Hash algorithm {HashAlgo} is not supported",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HashAlgo",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "hashAlgo"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to get file info of object file {Name}: {Err}",
            "message": "unable to get file info of object file {Name}: {Err}",
            "translation": "unable to get file info of object file {Name}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileInfo.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error to read object file {Name} from offset {StartOffset}: {Err}",
            "message": "error to read object file {Name} from offset {StartOffset}: {Err}",
            "translation": "error to read object file {Name} from offset {StartOffset}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileInfo.Name()"
                },
                {
                    "id": "StartOffset",
                    "string": "%[2]d",
                    "type": "int64",
                    "underlyingType": "int64",
                    "argNum": 2,
                    "expr": "startOffset"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "read unexpected length of data (read data length: {N}, expected data length: {DataLength}) from object file {Name} from offset {StartOffset}: {Err}",
            "message": "read unexpected length of data (read data length: {N}, expected data length: {DataLength}) from object file {Name} from offset {StartOffset}: {Err}",
            "translation": "read unexpected length of data (read data length: {N}, expected data length: {DataLength}) from object file {Name} from offset {StartOffset}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "N",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "n"
                },
                {
                    "id": "DataLength",
                    "string": "%[2]d",
                    "type": "int64",
                    "underlyingType": "int64",
                    "argNum": 2,
                    "expr": "dataLength"
                },
                {
                    "id": "Name",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "fileInfo.Name()"
                },
                {
                    "id": "StartOffset",
                    "string": "%[4]d",
                    "type": "int64",
                    "underlyingType": "int64",
                    "argNum": 4,
                    "expr": "startOffset"
                },
                {
                    "id": "Err",
                    "string": "%[5]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 5,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Uploading: {Size__100} {}",
            "message": "Uploading: {Size__100} {}",
            "translation": "Uploading: {Size__100} {}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Size__100",
                    "string": "%.2[1]f",
                    "type": "float32",
                    "underlyingType": "float32",
                    "argNum": 1,
                    "expr": "float32(totalSent+dataLength) / float32(fileInfo.Size()) * 100"
                },
                {
                    "id": "",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "\"%\""
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Encountered HTTP error: {Err} calling MMS REST API {ApiMsg}. HTTP status: {Httpstatus}. Will retry.",
            "message": "Encountered HTTP error: {Err} calling MMS REST API {ApiMsg}. HTTP status: {Httpstatus}. Will retry.",
            "translation": "Encountered HTTP error: {Err} calling MMS REST API {ApiMsg}. HTTP status: {Httpstatus}. Will retry.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "Httpstatus",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "http_status"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Encountered HTTP error: {Err} calling MMS REST API {ApiMsg}. HTTP status: {Httpstatus}.",
            "message": "Encountered HTTP error: {Err} calling MMS REST API {ApiMsg}. HTTP status: {Httpstatus}.",
            "translation": "Encountered HTTP error: {Err} calling MMS REST API {ApiMsg}. HTTP status: {Httpstatus}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "Httpstatus",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "http_status"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error during calling MMS REST API {ApiMsg}: {Error}",
            "message": "Error during calling MMS REST API {ApiMsg}: {Error}",
            "translation": "Error during calling MMS REST API {ApiMsg}: {Error}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Error",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "err.Error()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "health status API returned HTTP code {HttpCode}",
            "message": "health status API returned HTTP code {HttpCode}",
            "translation": "health status API returned HTTP code {HttpCode}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create network {NETWORKNAME} for file sync service, error {Err}",
            "message": "unable to create network {NETWORKNAME} for file sync service, error {Err}",
            "translation": "unable to create network {NETWORKNAME} for file sync service, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NETWORKNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "NETWORK_NAME"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start CSS, error {Err}",
            "message": "unable to start CSS, error {Err}",
            "translation": "unable to start CSS, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error checking CSS status: {Err}",
            "message": "Error checking CSS status: {Err}",
            "translation": "Error checking CSS status: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to stop {MakeLabelNameCSSNAME}, error {Err}, please stop manually, Remove the css image and try 'hzn dev service start' again",
            "message": "Unable to stop {MakeLabelNameCSSNAME}, error {Err}, please stop manually, Remove the css image and try 'hzn dev service start' again",
            "translation": "Unable to stop {MakeLabelNameCSSNAME}, error {Err}, please stop manually, Remove the css image and try 'hzn dev service start' again",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MakeLabelNameCSSNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "makeLabelName(CSS_NAME)"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to remove CSS image, err: {Err}",
            "message": "Unable to remove CSS image, err: {Err}",
            "translation": "Unable to remove CSS image, err: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to start CSS with new pulled image, error {Err}",
            "message": "Unable to start CSS with new pulled image, error {Err}",
            "translation": "Unable to start CSS with new pulled image, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "CSS is not running correctly with new pulled image, exit.",
            "message": "CSS is not running correctly with new pulled image, exit.",
            "translation": "CSS is not running correctly with new pulled image, exit.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to load file objects into CSS, error {Err}",
            "message": "unable to load file objects into CSS, error {Err}",
            "translation": "unable to load file objects into CSS, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start ESS, error {Err}",
            "message": "unable to start ESS, error {Err}",
            "translation": "unable to start ESS, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to stop {MakeLabelNameESSNAME}, error {Err}",
            "message": "Unable to stop {MakeLabelNameESSNAME}, error {Err}",
            "translation": "Unable to stop {MakeLabelNameESSNAME}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MakeLabelNameESSNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "makeLabelName(ESS_NAME)"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to remove network {NETWORKNAME} for file sync service, error {Err}",
            "message": "Unable to remove network {NETWORKNAME} for file sync service, error {Err}",
            "translation": "Unable to remove network {NETWORKNAME} for file sync service, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NETWORKNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "NETWORK_NAME"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to list existing docker images, error {Err}",
            "message": "unable to list existing docker images, error {Err}",
            "translation": "unable to list existing docker images, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Found docker image {Name} locally.",
            "message": "Found docker image {Name} locally.",
            "translation": "Found docker image {Name} locally.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to pull CSS container using image {GetFSSFullImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a different image tag.",
            "message": "unable to pull CSS container using image {GetFSSFullImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a different image tag.",
            "translation": "unable to pull CSS container using image {GetFSSFullImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a different image tag.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "GetFSSFullImageName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "getFSSFullImageName()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                },
                {
                    "id": "DEVTOOLHZNFSSIMAGETAG",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "dev.DEVTOOL_HZN_FSS_IMAGE_TAG"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pulled docker image {Name}.",
            "message": "Pulled docker image {Name}.",
            "translation": "Pulled docker image {Name}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removing docker image {Name}.",
            "message": "Removing docker image {Name}.",
            "translation": "Removing docker image {Name}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "RemoveImageErr: {Err}",
            "message": "RemoveImageErr: {Err}",
            "translation": "RemoveImageErr: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to remove CSS image: {Name}, please manually remove it 'docker rmi {Name_1}'",
            "message": "unable to remove CSS image: {Name}, please manually remove it 'docker rmi {Name_1}'",
            "translation": "unable to remove CSS image: {Name}, please manually remove it 'docker rmi {Name_1}'",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                },
                {
                    "id": "Name_1",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Docker image {Name} removed.",
            "message": "Docker image {Name} removed.",
            "translation": "Docker image {Name} removed.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create CSS container using image {GetFSSImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a diferent image tag.",
            "message": "unable to create CSS container using image {GetFSSImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a diferent image tag.",
            "translation": "unable to create CSS container using image {GetFSSImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a diferent image tag.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "GetFSSImageName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "getFSSImageName()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                },
                {
                    "id": "DEVTOOLHZNFSSIMAGETAG",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "dev.DEVTOOL_HZN_FSS_IMAGE_TAG"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start CSS container, error {Err}",
            "message": "unable to start CSS container, error {Err}",
            "translation": "unable to start CSS container, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created {MakeLabelNameCSSNAME} container, listening on host port {GetCSSPort}",
            "message": "Created {MakeLabelNameCSSNAME} container, listening on host port {GetCSSPort}",
            "translation": "Created {MakeLabelNameCSSNAME} container, listening on host port {GetCSSPort}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MakeLabelNameCSSNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "makeLabelName(CSS_NAME)"
                },
                {
                    "id": "GetCSSPort",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "getCSSPort()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "File sync service container {MakeLabelNameCSSNAME} listening on host port {GetCSSPort}",
            "message": "File sync service container {MakeLabelNameCSSNAME} listening on host port {GetCSSPort}",
            "translation": "File sync service container {MakeLabelNameCSSNAME} listening on host port {GetCSSPort}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MakeLabelNameCSSNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "makeLabelName(CSS_NAME)"
                },
                {
                    "id": "GetCSSPort",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "getCSSPort()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create SSL certificate for ESS, error {Err}",
            "message": "unable to create SSL certificate for ESS, error {Err}",
            "translation": "unable to create SSL certificate for ESS, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to open ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
            "message": "unable to open ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
            "translation": "unable to open ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ESSSSLClientCertPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cw.Config.GetESSSSLClientCertPath()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to read ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
            "message": "unable to read ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
            "translation": "unable to read ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ESSSSLClientCertPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cw.Config.GetESSSSLClientCertPath()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to open ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
            "message": "unable to open ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
            "translation": "unable to open ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ESSSSLCertKeyPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cw.Config.GetESSSSLCertKeyPath()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to read ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
            "message": "unable to read ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
            "translation": "unable to read ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ESSSSLCertKeyPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cw.Config.GetESSSSLCertKeyPath()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create ESS container, error {Err}",
            "message": "unable to create ESS container, error {Err}",
            "translation": "unable to create ESS container, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start ESS container, error {Err}",
            "message": "unable to start ESS container, error {Err}",
            "translation": "unable to start ESS container, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created {MakeLabelNameESSNAME} container",
            "message": "Created {MakeLabelNameESSNAME} container",
            "translation": "Created {MakeLabelNameESSNAME} container",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MakeLabelNameESSNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "makeLabelName(ESS_NAME)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to list docker containers, error {Err}",
            "message": "unable to list docker containers, error {Err}",
            "translation": "unable to list docker containers, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to stop docker container {Name}, error {Err}",
            "message": "unable to stop docker container {Name}, error {Err}",
            "translation": "unable to stop docker container {Name}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to remove docker container {Name}, error {Err}",
            "message": "unable to remove docker container {Name}, error {Err}",
            "translation": "unable to remove docker container {Name}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Stopped {Name} container",
            "message": "Stopped {Name} container",
            "translation": "Stopped {Name} container",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Configuration files {FileObjects} loaded into the File sync service.",
            "message": "Configuration files {FileObjects} loaded into the File sync service.",
            "translation": "Configuration files {FileObjects} loaded into the File sync service.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileObjects",
                    "string": "%[1]v",
                    "type": "[]string",
                    "underlyingType": "[]string",
                    "argNum": 1,
                    "expr": "fileObjects"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Loading {FileName} into CSS",
            "message": "Loading {FileName} into CSS",
            "translation": "Loading {FileName} into CSS",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to open file object {FileName}, error {Err}",
            "message": "unable to open file object {FileName}, error {Err}",
            "translation": "unable to open file object {FileName}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to read file object {FileName}, error {Err}",
            "message": "unable to read file object {FileName}, error {Err}",
            "translation": "unable to read file object {FileName}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to add file {FileName} to the CSS, error {Err}",
            "message": "unable to add file {FileName} to the CSS, error {Err}",
            "translation": "unable to add file {FileName} to the CSS, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to marshal CSS file PUT for {Metadata}, error {Err}",
            "message": "unable to marshal CSS file PUT for {Metadata}, error {Err}",
            "translation": "unable to marshal CSS file PUT for {Metadata}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Metadata",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/cli/sync_service.cssFileMeta",
                    "underlyingType": "struct{ObjectID string \"json:\\\"objectID\\\"\"; ObjectType string \"json:\\\"objectType\\\"\"}",
                    "argNum": 1,
                    "expr": "*metadata"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create CSS file PUT request for {Metadata}, error {Err}",
            "message": "unable to create CSS file PUT request for {Metadata}, error {Err}",
            "translation": "unable to create CSS file PUT request for {Metadata}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Metadata",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/cli/sync_service.cssFileMeta",
                    "underlyingType": "struct{ObjectID string \"json:\\\"objectID\\\"\"; ObjectType string \"json:\\\"objectType\\\"\"}",
                    "argNum": 1,
                    "expr": "*metadata"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to send CSS file PUT request to CSS for {Metadata}, error {Err}",
            "message": "unable to send CSS file PUT request to CSS for {Metadata}, error {Err}",
            "translation": "unable to send CSS file PUT request to CSS for {Metadata}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Metadata",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/cli/sync_service.cssFileMeta",
                    "underlyingType": "struct{ObjectID string \"json:\\\"objectID\\\"\"; ObjectType string \"json:\\\"objectType\\\"\"}",
                    "argNum": 1,
                    "expr": "*metadata"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Received HTTP code: {StatusCode}",
            "message": "Received HTTP code: {StatusCode}",
            "translation": "Received HTTP code: {StatusCode}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "StatusCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "resp.StatusCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to PUT file {Metadata} into CSS, HTTP code {StatusCode}",
            "message": "unable to PUT file {Metadata} into CSS, HTTP code {StatusCode}",
            "translation": "unable to PUT file {Metadata} into CSS, HTTP code {StatusCode}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Metadata",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/cli/sync_service.cssFileMeta",
                    "underlyingType": "struct{ObjectID string \"json:\\\"objectID\\\"\"; ObjectType string \"json:\\\"objectType\\\"\"}",
                    "argNum": 1,
                    "expr": "*metadata"
                },
                {
                    "id": "StatusCode",
                    "string": "%[2]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "resp.StatusCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create get CSS status request, error {Err}",
            "message": "unable to create get CSS status request, error {Err}",
            "translation": "unable to create get CSS status request, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "CSS status is not ready after waiting {Timeout__checkLimit} seconds, timeout",
            "message": "CSS status is not ready after waiting {Timeout__checkLimit} seconds, timeout",
            "translation": "CSS status is not ready after waiting {Timeout__checkLimit} seconds, timeout",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Timeout__checkLimit",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "timeout * checkLimit"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "CSS status is not ready, terminating service start request.",
            "message": "CSS status is not ready, terminating service start request.",
            "translation": "CSS status is not ready, terminating service start request.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cannot use -C flag if not performing a deep clean. Must specify -D flag to use -C flag.",
            "message": "Cannot use -C flag if not performing a deep clean. Must specify -D flag to use -C flag.",
            "translation": "Cannot use -C flag if not performing a deep clean. Must specify -D flag to use -C flag.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to unregister this Horizon node?",
            "message": "Are you sure you want to unregister this Horizon node?",
            "translation": "Are you sure you want to unregister this Horizon node?",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cannot backup eventlogs: {Err}",
            "message": "Cannot backup eventlogs: {Err}",
            "translation": "Cannot backup eventlogs: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unregistering this node, cancelling all agreements, stopping all workloads, removing this node from HA group {HAGroup}, removing this node from the Exchange and restarting Horizon...",
            "message": "Unregistering this node, cancelling all agreements, stopping all workloads, removing this node from HA group {HAGroup}, removing this node from the Exchange and restarting Horizon...",
            "translation": "Unregistering this node, cancelling all agreements, stopping all workloads, removing this node from HA group {HAGroup}, removing this node from the Exchange and restarting Horizon...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HAGroup",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "*horDevice.HAGroup"
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "msg",
                "Unregistering this node, cancelling all agreements, stopping all workloads, and restarting Horizon..."
            ],
            "message": "Unregistering this node, cancelling all agreements, stopping all workloads, and restarting Horizon...",
            "translation": "Unregistering this node, cancelling all agreements, stopping all workloads, and restarting Horizon...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node unregistering using anax API failed. External deep clean will be attempted. Specific anax API error is: {Error}",
            "message": "Node unregistering using anax API failed. External deep clean will be attempted. Specific anax API error is: {Error}",
            "translation": "Node unregistering using anax API failed. External deep clean will be attempted. Specific anax API error is: {Error}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Error",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "unregErr.Error()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The node was not successfully unregistered, please use 'hzn unregister -D' to ensure the node is completely reset. Specific anax API error is: {Error}",
            "message": "The node was not successfully unregistered, please use 'hzn unregister -D' to ensure the node is completely reset. Specific anax API error is: {Error}",
            "translation": "The node was not successfully unregistered, please use 'hzn unregister -D' to ensure the node is completely reset. Specific anax API error is: {Error}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Error",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "unregErr.Error()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Err}\nThe node was not successfully unregistered, please use 'hzn unregister -D' to ensure the node is completely reset.",
            "message": "{Err}\nThe node was not successfully unregistered, please use 'hzn unregister -D' to ensure the node is completely reset.",
            "translation": "{Err}\nThe node was not successfully unregistered, please use 'hzn unregister -D' to ensure the node is completely reset.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Horizon node unregistered. You may now run 'hzn register ...' again, if desired.",
            "message": "Horizon node unregistered. You may now run 'hzn register ...' again, if desired.",
            "translation": "Horizon node unregistered. You may now run 'hzn register ...' again, if desired.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "WARNING: The node is unregistered, but an error occurred during unregistration.",
            "message": "WARNING: The node is unregistered, but an error occurred during unregistration.",
            "translation": "WARNING: The node is unregistered, but an error occurred during unregistration.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The error was: {Err}",
            "message": "The error was: {Err}",
            "translation": "The error was: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Horizon node delete call successful with return code: {Output}",
            "message": "Horizon node delete call successful with return code: {Output}",
            "translation": "Horizon node delete call successful with return code: {Output}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Output",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "output"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Timeout unregistering the node.",
            "message": "Timeout unregistering the node.",
            "translation": "Timeout unregistering the node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Timeout in {TotalWait} seconds ...",
            "message": "Timeout in {TotalWait} seconds ...",
            "translation": "Timeout in {TotalWait} seconds ...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TotalWait",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "totalWait"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Waiting for Horizon node unregister to complete: {UpdateStatus}",
            "message": "Waiting for Horizon node unregister to complete: {UpdateStatus}",
            "translation": "Waiting for Horizon node unregister to complete: {UpdateStatus}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "UpdateStatus",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "updateStatus"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Lenags} agreements remaining to be terminated.",
            "message": "{Lenags} agreements remaining to be terminated.",
            "translation": "{Lenags} agreements remaining to be terminated.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Lenags",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "len(ags)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No Timeout specified ...",
            "message": "No Timeout specified ...",
            "translation": "No Timeout specified ...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Starting external deep clean ...",
            "message": "Starting external deep clean ...",
            "translation": "Starting external deep clean ...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Deleting local horizon DB...",
            "message": "Deleting local horizon DB...",
            "translation": "Deleting local horizon DB...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Restarting anax...",
            "message": "Restarting anax...",
            "translation": "Restarting anax...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error resolving horizon container name: {Err}",
            "message": "Error resolving horizon container name: {Err}",
            "translation": "Error resolving horizon container name: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Looking for horizon container by name: {ContainerName}",
            "message": "Looking for horizon container by name: {ContainerName}",
            "translation": "Looking for horizon container by name: {ContainerName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ContainerName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "containerName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error during checking if anax container is running: {ErrBytes}",
            "message": "Error during checking if anax container is running: {ErrBytes}",
            "translation": "Error during checking if anax container is running: {ErrBytes}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ErrBytes",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "errBytes"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Restarting horizon container...",
            "message": "Restarting horizon container...",
            "translation": "Restarting horizon container...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error during removing horizon db files from horizon container: {ErrBytes}",
            "message": "Error during removing horizon db files from horizon container: {ErrBytes}",
            "translation": "Error during removing horizon db files from horizon container: {ErrBytes}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ErrBytes",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "errBytes"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error during removing policy files from horizon container: {ErrBytes}",
            "message": "Error during removing policy files from horizon container: {ErrBytes}",
            "translation": "Error during removing policy files from horizon container: {ErrBytes}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ErrBytes",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "errBytes"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error during restarting the anax container: {ErrBytes}",
            "message": "Error during restarting the anax container: {ErrBytes}",
            "translation": "Error during restarting the anax container: {ErrBytes}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ErrBytes",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "errBytes"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Could not find anax container by {ContainerName} name",
            "message": "Could not find anax container by {ContainerName} name",
            "translation": "Could not find anax container by {ContainerName} name",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ContainerName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "containerName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Stopping horizon...",
            "message": "Stopping horizon...",
            "translation": "Stopping horizon...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Deleting service containers...",
            "message": "Deleting service containers...",
            "translation": "Deleting service containers...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Starting horizon...",
            "message": "Starting horizon...",
            "translation": "Starting horizon...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Waiting for agent service to restart and checking the node configuration state...",
            "message": "Waiting for agent service to restart and checking the node configuration state...",
            "translation": "Waiting for agent service to restart and checking the node configuration state...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node configuration state: {State}",
            "message": "Node configuration state: {State}",
            "translation": "Node configuration state: {State}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "State",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "*horDevice.Config.State"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Timeout waiting for node change to 'unconfigured' state.",
            "message": "Timeout waiting for node change to 'unconfigured' state.",
            "translation": "Timeout waiting for node change to 'unconfigured' state.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error deleting container {Names0}. {Err}",
            "message": "Error deleting container {Names0}. {Err}",
            "translation": "Error deleting container {Names0}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Names0",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "c.Names[0]"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removed service container: {Names0}",
            "message": "Removed service container: {Names0}",
            "translation": "Removed service container: {Names0}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Names0",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "c.Names[0]"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error pruning docker networks. {Err}",
            "message": "Error pruning docker networks. {Err}",
            "translation": "Error pruning docker networks. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Backing up eventlogs...",
            "message": "Backing up eventlogs...",
            "translation": "Backing up eventlogs...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "cannot marshal eventlogs from local anax DB, eventlogs will not be saved",
            "message": "cannot marshal eventlogs from local anax DB, eventlogs will not be saved",
            "translation": "cannot marshal eventlogs from local anax DB, eventlogs will not be saved",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to backup eventlogs file {FileName}. {Err}",
            "message": "failed to backup eventlogs file {FileName}. {Err}",
            "translation": "failed to backup eventlogs file {FileName}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to save the eventlogs to file {FileName}. {Err}",
            "message": "failed to save the eventlogs to file {FileName}. {Err}",
            "translation": "failed to save the eventlogs to file {FileName}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Saved eventlog into file {FileName}",
            "message": "Saved eventlog into file {FileName}",
            "translation": "Saved eventlog into file {FileName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to marshal userinput object: {Err}",
            "message": "Unable to marshal userinput object: {Err}",
            "translation": "Unable to marshal userinput object: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "A list of objects, each one containing the user inputs required for a specified service.",
            "message": "A list of objects, each one containing the user inputs required for a specified service.",
            "translation": "A list of objects, each one containing the user inputs required for a specified service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The horizon org of the specified service.",
            "message": "The horizon org of the specified service.",
            "translation": "The horizon org of the specified service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The unique string used to identify the specified service.",
            "message": "The unique string used to identify the specified service.",
            "translation": "The unique string used to identify the specified service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service architecture that these inputs apply to. Omit or leave blank to mean all architectures.",
            "message": "The service architecture that these inputs apply to. Omit or leave blank to mean all architectures.",
            "translation": "The service architecture that these inputs apply to. Omit or leave blank to mean all architectures.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service versions that these inputs apply to. Omit or specify \"[0.0.0,INFINITY)\" to mean all versions.",
            "message": "The service versions that these inputs apply to. Omit or specify \"[0.0.0,INFINITY)\" to mean all versions.",
            "translation": "The service versions that these inputs apply to. Omit or specify \"[0.0.0,INFINITY)\" to mean all versions.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of objects with the names and values for the user inputs used by this service.",
            "message": "A list of objects with the names and values for the user inputs used by this service.",
            "translation": "A list of objects with the names and values for the user inputs used by this service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon node user inputs updated.",
            "message": "Horizon node user inputs updated.",
            "translation": "Horizon node user inputs updated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove the node user inputs?",
            "message": "Are you sure you want to remove the node user inputs?",
            "translation": "Are you sure you want to remove the node user inputs?",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon user inputs removed.",
            "message": "Horizon user inputs removed.",
            "translation": "Horizon user inputs removed.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "problem signing stdin with {PrivKeyFilePath}: {Err}",
            "message": "problem signing stdin with {PrivKeyFilePath}: {Err}",
            "translation": "problem signing stdin with {PrivKeyFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem verifying deployment string with {PubKeyFilePath}: {Err}",
            "message": "problem verifying deployment string with {PubKeyFilePath}: {Err}",
            "translation": "problem verifying deployment string with {PubKeyFilePath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PubKeyFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pubKeyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "This is not a valid signature for stdin.",
            "message": "This is not a valid signature for stdin.",
            "translation": "This is not a valid signature for stdin.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Signature is valid.",
            "message": "Signature is valid.",
            "translation": "Signature is valid.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to get project configuration file. Error: {Err}",
            "message": "Failed to get project configuration file. Error: {Err}",
            "translation": "Failed to get project configuration file. Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Please use the -f flag to specify a configuration file.",
            "message": "Please use the -f flag to specify a configuration file.",
            "translation": "Please use the -f flag to specify a configuration file.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to get the variables from configuration file {ConfigFile}. Error: {Err}",
            "message": "Failed to get the variables from configuration file {ConfigFile}. Error: {Err}",
            "translation": "Failed to get the variables from configuration file {ConfigFile}. Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "no service name",
            "message": "no service name",
            "translation": "no service name",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "no docker image for service {ServiceName}",
            "message": "no docker image for service {ServiceName}",
            "translation": "no docker image for service {ServiceName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal json for deployment field {StringjsonBytes}: {Err}",
            "message": "failed to unmarshal json for deployment field {StringjsonBytes}: {Err}",
            "translation": "failed to unmarshal json for deployment field {StringjsonBytes}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "StringjsonBytes",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(jsonBytes)"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal json for cluster deployment field {StringjsonBytes}: {Err}",
            "message": "failed to unmarshal json for cluster deployment field {StringjsonBytes}: {Err}",
            "translation": "failed to unmarshal json for cluster deployment field {StringjsonBytes}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "StringjsonBytes",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(jsonBytes)"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid data presented in the cluster deployment field: {TempInterf}",
            "message": "Invalid data presented in the cluster deployment field: {TempInterf}",
            "translation": "Invalid data presented in the cluster deployment field: {TempInterf}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TempInterf",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "tempInterf"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The metadata attribute in the cluster deployment has wrong format.",
            "message": "The metadata attribute in the cluster deployment has wrong format.",
            "translation": "The metadata attribute in the cluster deployment has wrong format.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to get the namespace from the Kube operator. {Err}",
            "message": "Failed to get the namespace from the Kube operator. {Err}",
            "translation": "Failed to get the namespace from the Kube operator. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "user input {Name} has no default value and is not set",
            "message": "user input {Name} has no default value and is not set",
            "translation": "user input {Name} has no default value and is not set",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ui.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'requiredServices' is not supported for cluster type service.",
            "message": "'requiredServices' is not supported for cluster type service.",
            "translation": "'requiredServices' is not supported for cluster type service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to convert version {Ver} for service {ReqSvc} to version range expression.",
            "message": "Failed to convert version {Ver} for service {ReqSvc} to version range expression.",
            "translation": "Failed to convert version {Ver} for service {ReqSvc} to version range expression.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Ver",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver"
                },
                {
                    "id": "ReqSvc",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/exchangecommon.ServiceDependency",
                    "underlyingType": "struct{URL string \"json:\\\"url\\\"\"; Org string \"json:\\\"org\\\"\"; Version string \"json:\\\"version,omitempty\\\"\"; VersionRange string \"json:\\\"versionRange\\\"\"; Arch string \"json:\\\"arch\\\"\"}",
                    "argNum": 2,
                    "expr": "reqSvc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error retrieving service from the Exchange for {ReqSvc}. {Err}",
            "message": "Error retrieving service from the Exchange for {ReqSvc}. {Err}",
            "translation": "Error retrieving service from the Exchange for {ReqSvc}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ReqSvc",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/exchangecommon.ServiceDependency",
                    "underlyingType": "struct{URL string \"json:\\\"url\\\"\"; Org string \"json:\\\"org\\\"\"; Version string \"json:\\\"version,omitempty\\\"\"; VersionRange string \"json:\\\"versionRange\\\"\"; Arch string \"json:\\\"arch\\\"\"}",
                    "argNum": 1,
                    "expr": "reqSvc"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The required service {SId} has the wrong service type: {SType}.",
            "message": "The required service {SId} has the wrong service type: {SType}.",
            "translation": "The required service {SId} has the wrong service type: {SType}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sId"
                },
                {
                    "id": "SType",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The dependent service {Id} for the required service {SId} has the wrong service type: {SType1}.",
            "message": "The dependent service {Id} for the required service {SId} has the wrong service type: {SType1}.",
            "translation": "The dependent service {Id} for the required service {SId} has the wrong service type: {SType1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Id",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "id"
                },
                {
                    "id": "SId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sId"
                },
                {
                    "id": "SType1",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "sType1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal json input {JsonBytes}: {Err}",
            "message": "failed to unmarshal json input {JsonBytes}: {Err}",
            "translation": "failed to unmarshal json input {JsonBytes}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JsonBytes",
                    "string": "%[1]v",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "jsonBytes"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting new user input format. {Err1}",
            "message": "Error getting new user input format. {Err1}",
            "translation": "Error getting new user input format. {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err1",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to create json object for user input. {Err1}",
            "message": "Failed to create json object for user input. {Err1}",
            "translation": "Failed to create json object for user input. {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err1",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deployment policy and pattern are mutually exclusive.",
            "message": "Deployment policy and pattern are mutually exclusive.",
            "translation": "Deployment policy and pattern are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Neither deployment policy nor pattern is specified.",
            "message": "Neither deployment policy nor pattern is specified.",
            "translation": "Neither deployment policy nor pattern is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Incompatible",
            "message": "Incompatible",
            "translation": "Incompatible",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The given node id is empty.",
            "message": "The given node id is empty.",
            "translation": "The given node id is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization is not specified in the given node id: {NodeId}.",
            "message": "Organization is not specified in the given node id: {NodeId}.",
            "translation": "Organization is not specified in the given node id: {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting node {NodeId} from the Exchange. {Err}",
            "message": "Error getting node {NodeId} from the Exchange. {Err}",
            "translation": "Error getting node {NodeId} from the Exchange. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No node found for this node id {NodeId}.",
            "message": "No node found for this node id {NodeId}.",
            "translation": "No node found for this node id {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error unmarshaling deployment string to internal deployment structure: {Err}",
            "message": "Error unmarshaling deployment string to internal deployment structure: {Err}",
            "translation": "Error unmarshaling deployment string to internal deployment structure: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid node type: {NodeType}. It must be 'device' or 'cluster'.",
            "message": "Invalid node type: {NodeType}. It must be 'device' or 'cluster'.",
            "translation": "Invalid node type: {NodeType}. It must be 'device' or 'cluster'.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The input node type '{NodeType}' does not match the node type '{ExchNodeType}' from the node {NodeId}.",
            "message": "The input node type '{NodeType}' does not match the node type '{ExchNodeType}' from the node {NodeId}.",
            "translation": "The input node type '{NodeType}' does not match the node type '{ExchNodeType}' from the node {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeType"
                },
                {
                    "id": "ExchNodeType",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "exchNodeType"
                },
                {
                    "id": "NodeId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service does not have deployment configuration for node type 'device'.",
            "message": "Service does not have deployment configuration for node type 'device'.",
            "translation": "Service does not have deployment configuration for node type 'device'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Service does not have cluster deployment configuration for node type 'cluster'.",
            "message": "Service does not have cluster deployment configuration for node type 'cluster'.",
            "translation": "Service does not have cluster deployment configuration for node type 'cluster'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The input node's cluster namespace '{NodeNamespace}' does not match the node's cluster namespace '{ExchNodeNamespace}' from the exchange {NodeId}.",
            "message": "The input node's cluster namespace '{NodeNamespace}' does not match the node's cluster namespace '{ExchNodeNamespace}' from the exchange {NodeId}.",
            "translation": "The input node's cluster namespace '{NodeNamespace}' does not match the node's cluster namespace '{ExchNodeNamespace}' from the exchange {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeNamespace",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeNamespace"
                },
                {
                    "id": "ExchNodeNamespace",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "exchNodeNamespace"
                },
                {
                    "id": "NodeId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The input node's scope '{NodeIsNamespaceScope}' does not match the node's scope '{ExchNodeIsNamespaceScope}' from the exchange {NodeId}.",
            "message": "The input node's scope '{NodeIsNamespaceScope}' does not match the node's scope '{ExchNodeIsNamespaceScope}' from the exchange {NodeId}.",
            "translation": "The input node's scope '{NodeIsNamespaceScope}' does not match the node's scope '{ExchNodeIsNamespaceScope}' from the exchange {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeIsNamespaceScope",
                    "string": "%[1]v",
                    "type": "bool",
                    "underlyingType": "bool",
                    "argNum": 1,
                    "expr": "nodeIsNamespaceScope"
                },
                {
                    "id": "ExchNodeIsNamespaceScope",
                    "string": "%[2]v",
                    "type": "bool",
                    "underlyingType": "bool",
                    "argNum": 2,
                    "expr": "exchNodeIsNamespaceScope"
                },
                {
                    "id": "NodeId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The namespace '{DeployerNamespace}' specified in the deployment policy or pattern does not match the namespace of the agent: '{NodeNamespace}'",
            "message": "The namespace '{DeployerNamespace}' specified in the deployment policy or pattern does not match the namespace of the agent: '{NodeNamespace}'",
            "translation": "The namespace '{DeployerNamespace}' specified in the deployment policy or pattern does not match the namespace of the agent: '{NodeNamespace}'",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DeployerNamespace",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "deployerNamespace"
                },
                {
                    "id": "NodeNamespace",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeNamespace"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get cluster deployment from the service. {Err}",
            "message": "Failed to get cluster deployment from the service. {Err}",
            "translation": "Failed to get cluster deployment from the service. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The namespace '{SvcNamespace}' specified in the service does not match the namespace of the agent: '{NodeNamespace}'. Please overwrite it in the deployment policy or pattern.",
            "message": "The namespace '{SvcNamespace}' specified in the service does not match the namespace of the agent: '{NodeNamespace}'. Please overwrite it in the deployment policy or pattern.",
            "translation": "The namespace '{SvcNamespace}' specified in the service does not match the namespace of the agent: '{NodeNamespace}'. Please overwrite it in the deployment policy or pattern.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcNamespace",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcNamespace"
                },
                {
                    "id": "NodeNamespace",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeNamespace"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The namespace '{PatternNamespace}' specified in the pattern '{PatternId}' is empty or does not match the namespace of the namespace scoped agent: '{NodeNamespace}'. Namespace scoped agent is only compatible with pattern that has the same namespace with agent.",
            "message": "The namespace '{PatternNamespace}' specified in the pattern '{PatternId}' is empty or does not match the namespace of the namespace scoped agent: '{NodeNamespace}'. Namespace scoped agent is only compatible with pattern that has the same namespace with agent.",
            "translation": "The namespace '{PatternNamespace}' specified in the pattern '{PatternId}' is empty or does not match the namespace of the namespace scoped agent: '{NodeNamespace}'. Namespace scoped agent is only compatible with pattern that has the same namespace with agent.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatternNamespace",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patternNamespace"
                },
                {
                    "id": "PatternId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patternId"
                },
                {
                    "id": "NodeNamespace",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeNamespace"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The Cluster namespace specified in the pattern '{PatternId}' is {PatternNamespace}, only pattern with empty cluster namespace can be registered for cluster scoped agent",
            "message": "The Cluster namespace specified in the pattern '{PatternId}' is {PatternNamespace}, only pattern with empty cluster namespace can be registered for cluster scoped agent",
            "translation": "The Cluster namespace specified in the pattern '{PatternId}' is {PatternNamespace}, only pattern with empty cluster namespace can be registered for cluster scoped agent",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatternId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patternId"
                },
                {
                    "id": "PatternNamespace",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patternNamespace"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to create version expression from {VersionRange}. {Err}",
            "message": "Unable to create version expression from {VersionRange}. {Err}",
            "translation": "Unable to create version expression from {VersionRange}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VersionRange",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sDep.VersionRange"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error retrieving dependent services from the Exchange for {SDep}. {Err}",
            "message": "Error retrieving dependent services from the Exchange for {SDep}. {Err}",
            "translation": "Error retrieving dependent services from the Exchange for {SDep}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SDep",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/exchangecommon.ServiceDependency",
                    "underlyingType": "struct{URL string \"json:\\\"url\\\"\"; Org string \"json:\\\"org\\\"\"; Version string \"json:\\\"version,omitempty\\\"\"; VersionRange string \"json:\\\"versionRange\\\"\"; Arch string \"json:\\\"arch\\\"\"}",
                    "argNum": 1,
                    "expr": "sDep"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to find definition for dependent services of {TopId}. Compatability of {PROPNODEPRIVILEGED} cannot be fully evaluated until all services are in the Exchange.",
            "message": "Failed to find definition for dependent services of {TopId}. Compatability of {PROPNODEPRIVILEGED} cannot be fully evaluated until all services are in the Exchange.",
            "translation": "Failed to find definition for dependent services of {TopId}. Compatability of {PROPNODEPRIVILEGED} cannot be fully evaluated until all services are in the Exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TopId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "topId"
                },
                {
                    "id": "PROPNODEPRIVILEGED",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "externalpolicy.PROP_NODE_PRIVILEGED"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The PolicyCheck input cannot be null",
            "message": "The PolicyCheck input cannot be null",
            "translation": "The PolicyCheck input cannot be null",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The input node architecture {NodeArch} does not match the Exchange node architecture {Arch} for node {NodeId}.",
            "message": "The input node architecture {NodeArch} does not match the Exchange node architecture {Arch} for node {NodeId}.",
            "translation": "The input node architecture {NodeArch} does not match the Exchange node architecture {Arch} for node {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeArch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "input.NodeArch"
                },
                {
                    "id": "Arch",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node.Arch"
                },
                {
                    "id": "NodeId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Policy Incompatible",
            "message": "Policy Incompatible",
            "translation": "Policy Incompatible",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Architecture does not match.",
            "message": "Architecture does not match.",
            "translation": "Architecture does not match.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to get services for all archetctures for {Org}/{WorkloadURL} version {Version}. {Err}",
            "message": "Failed to get services for all archetctures for {Org}/{WorkloadURL} version {Version}. {Err}",
            "translation": "Failed to get services for all archetctures for {Org}/{WorkloadURL} version {Version}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "workload.Org"
                },
                {
                    "id": "WorkloadURL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "workload.WorkloadURL"
                },
                {
                    "id": "Version",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "workload.Version"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to validate the service policy. {Err}",
            "message": "Failed to validate the service policy. {Err}",
            "translation": "Failed to validate the service policy. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service with 'arch' {NodeArch} cannot be found in the deployment policy.",
            "message": "Service with 'arch' {NodeArch} cannot be found in the deployment policy.",
            "translation": "Service with 'arch' {NodeArch} cannot be found in the deployment policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeArch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "resources.NodeArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No services found in the deployment policy.",
            "message": "No services found in the deployment policy.",
            "translation": "No services found in the deployment policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node policy cannot be null.",
            "message": "Node policy cannot be null.",
            "translation": "Node policy cannot be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Deployment policy cannot be null.",
            "message": "Deployment policy cannot be null.",
            "translation": "Deployment policy cannot be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Merged service policy cannot be null.",
            "message": "Merged service policy cannot be null.",
            "translation": "Merged service policy cannot be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error merging node policy with arch property. {Err}",
            "message": "Error merging node policy with arch property. {Err}",
            "translation": "Error merging node policy with arch property. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to validate the node policy. {Err}",
            "message": "Failed to validate the node policy. {Err}",
            "translation": "Failed to validate the node policy. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to convert node policy to internal policy format for node {NodeId}: {Err}",
            "message": "Failed to convert node policy to internal policy format for node {NodeId}: {Err}",
            "translation": "Failed to convert node policy to internal policy format for node {NodeId}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No node policy found for this node {NodeId}.",
            "message": "No node policy found for this node {NodeId}.",
            "translation": "No node policy found for this node {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Neither node policy nor node id is specified.",
            "message": "Neither node policy nor node id is specified.",
            "translation": "Neither node policy nor node id is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node id is empty.",
            "message": "Node id is empty.",
            "translation": "Node id is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization is not specified in the node id: {NodeId}.",
            "message": "Organization is not specified in the node id: {NodeId}.",
            "translation": "Organization is not specified in the node id: {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error trying to query node policy for {NodeId}: {Err}",
            "message": "Error trying to query node policy for {NodeId}: {Err}",
            "translation": "Error trying to query node policy for {NodeId}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to validate the node policy for node {NodeId}. {Err}",
            "message": "Failed to validate the node policy for node {NodeId}. {Err}",
            "translation": "Failed to validate the node policy for node {NodeId}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to convert node policy to internal policy for node {NodeId}: {Err}",
            "message": "Failed to convert node policy to internal policy for node {NodeId}: {Err}",
            "translation": "Failed to convert node policy to internal policy for node {NodeId}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to convert deployment policy {BpId} to internal policy: {Err1}",
            "message": "Failed to convert deployment policy {BpId} to internal policy: {Err1}",
            "translation": "Failed to convert deployment policy {BpId} to internal policy: {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                },
                {
                    "id": "Err1",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Validation failure for deployment policy {BpId}. {Err}",
            "message": "Validation failure for deployment policy {BpId}. {Err}",
            "translation": "Validation failure for deployment policy {BpId}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No services specified in the given deployment policy {BpId}.",
            "message": "No services specified in the given deployment policy {BpId}.",
            "translation": "No services specified in the given deployment policy {BpId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No services specified in the deployment policy {Name}.",
            "message": "No services specified in the deployment policy {Name}.",
            "translation": "No services specified in the deployment policy {Name}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pPolicy.Header.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Neither deployment policy nor deployment policy id is specified.",
            "message": "Neither deployment policy nor deployment policy id is specified.",
            "translation": "Neither deployment policy nor deployment policy id is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Deployment policy id is empty.",
            "message": "Deployment policy id is empty.",
            "translation": "Deployment policy id is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization is not specified in the deployment policy id: {BpId}.",
            "message": "Organization is not specified in the deployment policy id: {BpId}.",
            "translation": "Organization is not specified in the deployment policy id: {BpId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to get deployment policy for {BpId}, {Err}",
            "message": "Unable to get deployment policy for {BpId}, {Err}",
            "translation": "Unable to get deployment policy for {BpId}, {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No deployment policy found for this id {BpId}.",
            "message": "No deployment policy found for this id {BpId}.",
            "translation": "No deployment policy found for this id {BpId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to convert deployment policy {BpId} to internal policy format: {Err}",
            "message": "Failed to convert deployment policy {BpId} to internal policy format: {Err}",
            "translation": "Failed to convert deployment policy {BpId} to internal policy format: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service policy id is empty.",
            "message": "Service policy id is empty.",
            "translation": "Service policy id is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization is not specified in the service policy id: {SvcId}.",
            "message": "Organization is not specified in the service policy id: {SvcId}.",
            "translation": "Organization is not specified in the service policy id: {SvcId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error trying to query service policy for service id {SvcId}: {Err}",
            "message": "Error trying to query service policy for service id {SvcId}: {Err}",
            "translation": "Error trying to query service policy for service id {SvcId}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error validating the service policy {SvcId}. {Err}",
            "message": "Error validating the service policy {SvcId}. {Err}",
            "translation": "Error validating the service policy {SvcId}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service name is empty.",
            "message": "Service name is empty.",
            "translation": "Service name is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Service organization is empty.",
            "message": "Service organization is empty.",
            "translation": "Service organization is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error trying to query service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "message": "Error trying to query service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "translation": "Error trying to query service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcOrg"
                },
                {
                    "id": "SvcUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svcUrl"
                },
                {
                    "id": "SvcVersion",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "svcVersion"
                },
                {
                    "id": "SvcArch",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "svcArch"
                },
                {
                    "id": "Err",
                    "string": "%[5]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 5,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to validate the service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "message": "Failed to validate the service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "translation": "Failed to validate the service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcOrg"
                },
                {
                    "id": "SvcUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svcUrl"
                },
                {
                    "id": "SvcVersion",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "svcVersion"
                },
                {
                    "id": "SvcArch",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "svcArch"
                },
                {
                    "id": "Err",
                    "string": "%[5]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 5,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The given deployment policy should not be null.",
            "message": "The given deployment policy should not be null.",
            "translation": "The given deployment policy should not be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error merging deployment policy with service policy. {Err}",
            "message": "Error merging deployment policy with service policy. {Err}",
            "translation": "Error merging deployment policy with service policy. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to find service definition from the input services.",
            "message": "Unable to find service definition from the input services.",
            "translation": "Unable to find service definition from the input services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The SecretBindingCheck input cannot be null",
            "message": "The SecretBindingCheck input cannot be null",
            "translation": "The SecretBindingCheck input cannot be null",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "No service versions with architecture {NodeArch} specified in the deployment policy or pattern.",
            "message": "No service versions with architecture {NodeArch} specified in the deployment policy or pattern.",
            "translation": "No service versions with architecture {NodeArch} specified in the deployment policy or pattern.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeArch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "resources.NodeArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No service versions specified in the deployment policy or pattern.",
            "message": "No service versions specified in the deployment policy or pattern.",
            "translation": "No service versions specified in the deployment policy or pattern.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Secret Binding Incompatible",
            "message": "Secret Binding Incompatible",
            "translation": "Secret Binding Incompatible",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Type Incompatible",
            "message": "Type Incompatible",
            "translation": "Type Incompatible",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "{Msgcompatible}, Warning: {Reason}",
            "message": "{Msgcompatible}, Warning: {Reason}",
            "translation": "{Msgcompatible}, Warning: {Reason}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msgcompatible",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg_compatible"
                },
                {
                    "id": "Reason",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "reason"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting services for all archetctures for {ServiceOrg}/{ServiceURL} version {Version}. {Err}",
            "message": "Error getting services for all archetctures for {ServiceOrg}/{ServiceURL} version {Version}. {Err}",
            "translation": "Error getting services for all archetctures for {ServiceOrg}/{ServiceURL} version {Version}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceRef.ServiceOrg"
                },
                {
                    "id": "ServiceURL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceRef.ServiceURL"
                },
                {
                    "id": "Version",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "workload.Version"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service definition not found in the input.",
            "message": "Service definition not found in the input.",
            "translation": "Service definition not found in the input.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Warning: The following secret bindings are not required by any services: {ExtraneousSB}",
            "message": "Warning: The following secret bindings are not required by any services: {ExtraneousSB}",
            "translation": "Warning: The following secret bindings are not required by any services: {ExtraneousSB}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExtraneousSB",
                    "string": "%[1]v",
                    "type": "[]github.com/open-horizon/anax/exchangecommon.SecretBinding",
                    "underlyingType": "[]github.com/open-horizon/anax/exchangecommon.SecretBinding",
                    "argNum": 1,
                    "expr": "extraneousSB"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service with 'arch' {NodeArch} cannot be found in the deployment policy or pattern.",
            "message": "Service with 'arch' {NodeArch} cannot be found in the deployment policy or pattern.",
            "translation": "Service with 'arch' {NodeArch} cannot be found in the deployment policy or pattern.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeArch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "resources.NodeArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No services found in the deployment policy or pattern.",
            "message": "No services found in the deployment policy or pattern.",
            "translation": "No services found in the deployment policy or pattern.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The input service definition object cannot be null.",
            "message": "The input service definition object cannot be null.",
            "translation": "The input service definition object cannot be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error verifying secret in the secret manager. {Err}",
            "message": "Error verifying secret in the secret manager. {Err}",
            "translation": "Error verifying secret in the secret manager. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The input service spec object cannot be null.",
            "message": "The input service spec object cannot be null.",
            "translation": "The input service spec object cannot be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to find the dependent services for {Org}/{URL} {Arch} {Version}. {Err}",
            "message": "Failed to find the dependent services for {Org}/{URL} {Arch} {Version}. {Err}",
            "translation": "Failed to find the dependent services for {Org}/{URL} {Arch} {Version}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sDef.GetOrg()"
                },
                {
                    "id": "URL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sDef.GetURL()"
                },
                {
                    "id": "Arch",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "sDef.GetArch()"
                },
                {
                    "id": "Version",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "sDef.GetVersion()"
                },
                {
                    "id": "Err",
                    "string": "%[5]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 5,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No secret binding found for the following service secrets: {NbArray}.",
            "message": "No secret binding found for the following service secrets: {NbArray}.",
            "translation": "No secret binding found for the following service secrets: {NbArray}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NbArray",
                    "string": "%[1]v",
                    "type": "[]string",
                    "underlyingType": "[]string",
                    "argNum": 1,
                    "expr": "nbArray"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Wrong version string {ServiceVersionRange} specified in secret binding for service {SvcOrg}/{SvcName} {SvcVersion} {SvcArch}, error {Err}",
            "message": "Wrong version string {ServiceVersionRange} specified in secret binding for service {SvcOrg}/{SvcName} {SvcVersion} {SvcArch}, error {Err}",
            "translation": "Wrong version string {ServiceVersionRange} specified in secret binding for service {SvcOrg}/{SvcName} {SvcVersion} {SvcArch}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceVersionRange",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sb.ServiceVersionRange"
                },
                {
                    "id": "SvcOrg",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svcOrg"
                },
                {
                    "id": "SvcName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "svcName"
                },
                {
                    "id": "SvcVersion",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "svcVersion"
                },
                {
                    "id": "SvcArch",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "svcArch"
                },
                {
                    "id": "Err",
                    "string": "%[6]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 6,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error checking version {SvcVersion} in range {VExp}. {Err}",
            "message": "Error checking version {SvcVersion} in range {VExp}. {Err}",
            "translation": "Error checking version {SvcVersion} in range {VExp}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcVersion",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcVersion"
                },
                {
                    "id": "VExp",
                    "string": "%[2]v",
                    "type": "*github.com/open-horizon/anax/semanticversion.Version_Expression",
                    "underlyingType": "*github.com/open-horizon/anax/semanticversion.Version_Expression",
                    "argNum": 2,
                    "expr": "vExp"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "agbot URL cannot be an empty string when checking secret binding. Please make sure HZN_AGBOT_URL is set.",
            "message": "agbot URL cannot be an empty string when checking secret binding. Please make sure HZN_AGBOT_URL is set.",
            "translation": "agbot URL cannot be an empty string when checking secret binding. Please make sure HZN_AGBOT_URL is set.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node organization must be provided.",
            "message": "The node organization must be provided.",
            "translation": "The node organization must be provided.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Secret {VaultSecretName} does not exist in the secret manager for either org level or user level.",
            "message": "Secret {VaultSecretName} does not exist in the secret manager for either org level or user level.",
            "translation": "Secret {VaultSecretName} does not exist in the secret manager for either org level or user level.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VaultSecretName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "vaultSecretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Err}, use non node-level secret",
            "message": "{Err}, use non node-level secret",
            "translation": "{Err}, use non node-level secret",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error parsing secret name in the secret binding. {Errparse}",
            "message": "Error parsing secret name in the secret binding. {Errparse}",
            "translation": "Error parsing secret name in the secret binding. {Errparse}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Errparse",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err_parse"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error checking secret {VaultSecretName} for node {NName} in the secret manager. {Err}",
            "message": "Error checking secret {VaultSecretName} for node {NName} in the secret manager. {Err}",
            "translation": "Error checking secret {VaultSecretName} for node {NName} in the secret manager. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VaultSecretName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "vaultSecretName"
                },
                {
                    "id": "NName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nName"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error checking secret {VaultSecretName} in the secret manager. {Err}",
            "message": "Error checking secret {VaultSecretName} in the secret manager. {Err}",
            "translation": "Error checking secret {VaultSecretName} in the secret manager. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VaultSecretName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "vaultSecretName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node level secret {VaultSecretName} doesn't exist for node {NName}",
            "message": "Node level secret {VaultSecretName} doesn't exist for node {NName}",
            "translation": "Node level secret {VaultSecretName} doesn't exist for node {NName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VaultSecretName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "vaultSecretName"
                },
                {
                    "id": "NName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The binding secret name cannot be an empty string. The valid formats are: '\u003csecretname\u003e' for the organization level secret and 'user/\u003cusername\u003e/\u003csecretname\u003e' for the user level secret.",
            "message": "The binding secret name cannot be an empty string. The valid formats are: '\u003csecretname\u003e' for the organization level secret and 'user/\u003cusername\u003e/\u003csecretname\u003e' for the user level secret.",
            "translation": "The binding secret name cannot be an empty string. The valid formats are: '\u003csecretname\u003e' for the organization level secret and 'user/\u003cusername\u003e/\u003csecretname\u003e' for the user level secret.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Invalid format for the binding secret name: {SecretName}. The valid formats are: '\u003csecretname\u003e' for the organization level secret and 'user/\u003cusername\u003e/\u003csecretname\u003e' for the user level secret.",
            "message": "Invalid format for the binding secret name: {SecretName}. The valid formats are: '\u003csecretname\u003e' for the organization level secret and 'user/\u003cusername\u003e/\u003csecretname\u003e' for the user level secret.",
            "translation": "Invalid format for the binding secret name: {SecretName}. The valid formats are: '\u003csecretname\u003e' for the organization level secret and 'user/\u003cusername\u003e/\u003csecretname\u003e' for the user level secret.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SecretName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "secretName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The UserInputCheck input cannot be null",
            "message": "The UserInputCheck input cannot be null",
            "translation": "The UserInputCheck input cannot be null",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Neither node user input nor node id is specified.",
            "message": "Neither node user input nor node id is specified.",
            "translation": "Neither node user input nor node id is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "User Input Incompatible",
            "message": "User Input Incompatible",
            "translation": "User Input Incompatible",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Warning: checking node user input:  {Err}",
            "message": "Warning: checking node user input:  {Err}",
            "translation": "Warning: checking node user input:  {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: checking user input for the deployment policy: {Err}",
            "message": "Warning: checking user input for the deployment policy: {Err}",
            "translation": "Warning: checking user input for the deployment policy: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: checking user input for the pattern: {Err}",
            "message": "Warning: checking user input for the pattern: {Err}",
            "translation": "Warning: checking user input for the pattern: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error verifing user input for service {SId}. {Err}",
            "message": "Error verifing user input for service {SId}. {Err}",
            "translation": "Error verifing user input for service {SId}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to verify user input for service {SId}. {Reason}",
            "message": "Failed to verify user input for service {SId}. {Reason}",
            "translation": "Failed to verify user input for service {SId}. {Reason}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sId"
                },
                {
                    "id": "Reason",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "reason"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error verifing user input for dependent service {Id}. {Err}",
            "message": "Error verifing user input for dependent service {Id}. {Err}",
            "translation": "Error verifing user input for dependent service {Id}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Id",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "id"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to verify user input for dependent service {Id}. {Reason}",
            "message": "Failed to verify user input for dependent service {Id}. {Reason}",
            "translation": "Failed to verify user input for dependent service {Id}. {Reason}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Id",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "id"
                },
                {
                    "id": "Reason",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "reason"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get the service from the Exchange. {Err}",
            "message": "Failed to get the service from the Exchange. {Err}",
            "translation": "Failed to get the service from the Exchange. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service does not exist on the Exchange.",
            "message": "Service does not exist on the Exchange.",
            "translation": "Service does not exist on the Exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "No user input found for service.",
            "message": "No user input found for service.",
            "translation": "No user input found for service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to validate the user input type for variable {Name}. {Err}",
            "message": "Failed to validate the user input type for variable {Name}. {Err}",
            "translation": "Failed to validate the user input type for variable {Name}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ui.Name"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "A required user input value is missing for variable {Name}.",
            "message": "A required user input value is missing for variable {Name}.",
            "translation": "A required user input value is missing for variable {Name}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ui.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Errmsg} Service {Org}/{URL} version {Version} arch {Arch} is missing in the node user input.",
            "message": "{Errmsg} Service {Org}/{URL} version {Version} arch {Arch} is missing in the node user input.",
            "translation": "{Errmsg} Service {Org}/{URL} version {Version} arch {Arch} is missing in the node user input.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Errmsg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "err_msg"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sdef.GetOrg()"
                },
                {
                    "id": "URL",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "sdef.GetURL()"
                },
                {
                    "id": "Version",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "sdef.GetVersion()"
                },
                {
                    "id": "Arch",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "sdef.GetArch()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service URL {URL} does not match the service URL {Name} specified in the deployment policy.",
            "message": "Service URL {URL} does not match the service URL {Name} specified in the deployment policy.",
            "translation": "Service URL {URL} does not match the service URL {Name} specified in the deployment policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "service.GetURL()"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "bPolicy.Service.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service Org {Org} does not match the service org {Org_1} specified in the deployment policy.",
            "message": "Service Org {Org} does not match the service org {Org_1} specified in the deployment policy.",
            "translation": "Service Org {Org} does not match the service org {Org_1} specified in the deployment policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "service.GetOrg()"
                },
                {
                    "id": "Org_1",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "bPolicy.Service.Org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service architecure {Arch} does not match the service architectrure {Arch_1} specified in the deployment policy.",
            "message": "Service architecure {Arch} does not match the service architectrure {Arch_1} specified in the deployment policy.",
            "translation": "Service architecure {Arch} does not match the service architectrure {Arch_1} specified in the deployment policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "service.GetArch()"
                },
                {
                    "id": "Arch_1",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "bPolicy.Service.Arch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service version {Version} does not match any service versions specified in the deployment policy.",
            "message": "Service version {Version} does not match any service versions specified in the deployment policy.",
            "translation": "Service version {Version} does not match any service versions specified in the deployment policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "service.GetVersion()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The service does not match any services in the pattern.",
            "message": "The service does not match any services in the pattern.",
            "translation": "The service does not match any services in the pattern.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pattern {PatId} cannot be found on the Exchange.",
            "message": "Pattern {PatId} cannot be found on the Exchange.",
            "translation": "Pattern {PatId} cannot be found on the Exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Neither pattern nor pattern id is specified.",
            "message": "Neither pattern nor pattern id is specified.",
            "translation": "Neither pattern nor pattern id is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pattern id is empty.",
            "message": "Pattern id is empty.",
            "translation": "Pattern id is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization is not specified in the pattern id: {PatId}.",
            "message": "Organization is not specified in the pattern id: {PatId}.",
            "translation": "Organization is not specified in the pattern id: {PatId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting pattern {PatId} from the Exchange, {Err}",
            "message": "Error getting pattern {PatId} from the Exchange, {Err}",
            "translation": "Error getting pattern {PatId} from the Exchange, {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No pattern found for this id {PatId}.",
            "message": "No pattern found for this id {PatId}.",
            "translation": "No pattern found for this id {PatId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version must be specified in the service definition for service {URL}.",
            "message": "Version must be specified in the service definition for service {URL}.",
            "translation": "Version must be specified in the service definition for service {URL}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svc.GetURL()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid version format {Version} for service {URL}.",
            "message": "Invalid version format {Version} for service {URL}.",
            "translation": "Invalid version format {Version} for service {URL}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svc.GetVersion()"
                },
                {
                    "id": "URL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svc.GetURL()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Arch must be specified in the service definition for service {URL}.",
            "message": "Arch must be specified in the service definition for service {URL}.",
            "translation": "Arch must be specified in the service definition for service {URL}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svc.GetURL()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Org must be specified in the service definition for service {URL}.",
            "message": "Org must be specified in the service definition for service {URL}.",
            "translation": "Org must be specified in the service definition for service {URL}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svc.GetURL()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Validation failure for input service {SId}. {Err}",
            "message": "Validation failure for input service {SId}. {Err}",
            "translation": "Validation failure for input service {SId}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the serviceOrgid, serviceUrl, serviceArch and serviceVersionRange are correct.",
            "message": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the serviceOrgid, serviceUrl, serviceArch and serviceVersionRange are correct.",
            "translation": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the serviceOrgid, serviceUrl, serviceArch and serviceVersionRange are correct.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrgid",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "userInput[0].ServiceOrgid"
                },
                {
                    "id": "ServiceUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "userInput[0].ServiceUrl"
                },
                {
                    "id": "ServiceVersionRange",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "userInput[0].ServiceVersionRange"
                },
                {
                    "id": "ServiceArch",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "userInput[0].ServiceArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the service specification is correct.",
            "message": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the service specification is correct.",
            "translation": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the service specification is correct.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrgid",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "userInput[i].ServiceOrgid"
                },
                {
                    "id": "ServiceUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "userInput[i].ServiceUrl"
                },
                {
                    "id": "ServiceVersionRange",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "userInput[i].ServiceVersionRange"
                },
                {
                    "id": "ServiceArch",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "userInput[i].ServiceArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Variable {Name} for service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not used. Please make sure it is a correct name.",
            "message": "Variable {Name} for service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not used. Please make sure it is a correct name.",
            "translation": "Variable {Name} for service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not used. Please make sure it is a correct name.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "uui.Name"
                },
                {
                    "id": "ServiceOrgid",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "userInput[i].ServiceOrgid"
                },
                {
                    "id": "ServiceUrl",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "userInput[i].ServiceUrl"
                },
                {
                    "id": "ServiceVersionRange",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "userInput[i].ServiceVersionRange"
                },
                {
                    "id": "ServiceArch",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "userInput[i].ServiceArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_CAP_FOR_WL",
                "Deployment config {Arg_1} contains unsupported capability for a workload"
            ],
            "message": "Deployment config {Arg_1} contains unsupported capability for a workload",
            "translation": "Deployment config {Arg_1} contains unsupported capability for a workload",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_CAP_FOR_CONT",
                "Deployment config {Arg_1} contains unsupported capability for infrastructure container."
            ],
            "message": "Deployment config {Arg_1} contains unsupported capability for infrastructure container.",
            "translation": "Deployment config {Arg_1} contains unsupported capability for infrastructure container.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_BIND",
                "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}"
            ],
            "message": "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}",
            "translation": "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_BIND_FOR",
                "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}"
            ],
            "message": "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}",
            "translation": "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_ERROR_UNMARSHAL_DEPLOY",
                "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}",
            "translation": "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_ERROR_UNMARSHAL_DEPLOY_OVERRIDE",
                "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}"
            ],
            "message": "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}",
            "translation": "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_START_CONTAINER_ERROR",
                "Error starting containers: {Arg_1}"
            ],
            "message": "Error starting containers: {Arg_1}",
            "translation": "Error starting containers: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_START_CONTAINER_ERROR_FOR_AG",
                "Error starting containers for agreement {Arg_1}: {Arg_2}"
            ],
            "message": "Error starting containers for agreement {Arg_1}: {Arg_2}",
            "translation": "Error starting containers for agreement {Arg_1}: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_RESTART_CONTAINER_ERROR_FOR_AG",
                "Error restarting containers for agreements {Arg_1}: {Arg_2}"
            ],
            "message": "Error restarting containers for agreements {Arg_1}: {Arg_2}",
            "translation": "Error restarting containers for agreements {Arg_1}: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_CLEAN_OLD_CONTAINER_ERROR",
                "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}"
            ],
            "message": "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}",
            "translation": "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_FAIL_GET_PAENT_CONT_FOR_SVC",
                "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}"
            ],
            "message": "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}",
            "translation": "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_FAIL_RESTORE_NW_WITH_PARENT",
                "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}"
            ],
            "message": "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}",
            "translation": "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_TERM_UNABLE_ACCESS_STORAGE_DIR",
                "anax terminating. Unable to access service storage direcotry specified in config: {Arg_1}. {Arg_2}"
            ],
            "message": "anax terminating. Unable to access service storage direcotry specified in config: {Arg_1}. {Arg_2}",
            "translation": "anax terminating. Unable to access service storage direcotry specified in config: {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_TERM_UNABLE_INIT_IPTABLE_CLIENT",
                "anax terminating. Failed to instantiate iptables client. {Arg_1}"
            ],
            "message": "anax terminating. Failed to instantiate iptables client. {Arg_1}",
            "translation": "anax terminating. Failed to instantiate iptables client. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_TERM_UNABLE_INIT_DOCKER_CLIENT",
                "anax terminating. Failed to instantiate docker client. {Arg_1}"
            ],
            "message": "anax terminating. Failed to instantiate docker client. {Arg_1}",
            "translation": "anax terminating. Failed to instantiate docker client. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to verify digital signature because the hashAlgorithm is empty",
            "message": "Failed to verify digital signature because the hashAlgorithm is empty",
            "translation": "Failed to verify digital signature because the hashAlgorithm is empty",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to verify digital signature because the publicKey string is empty",
            "message": "Failed to verify digital signature because the publicKey string is empty",
            "translation": "Failed to verify digital signature because the publicKey string is empty",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to verify digital signature because the signature string is empty",
            "message": "Failed to verify digital signature because the signature string is empty",
            "translation": "Failed to verify digital signature because the signature string is empty",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The start time must be in RFC3339 format or set to \"now\".",
            "message": "The start time must be in RFC3339 format or set to \"now\".",
            "translation": "The start time must be in RFC3339 format or set to \"now\".",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Property {PROPNODEPRIVILEGED} must have a boolean value (true or false).",
            "message": "Property {PROPNODEPRIVILEGED} must have a boolean value (true or false).",
            "translation": "Property {PROPNODEPRIVILEGED} must have a boolean value (true or false).",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PROPNODEPRIVILEGED",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "PROP_NODE_PRIVILEGED"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property must include a name and a value: {Property}",
            "message": "Property must include a name and a value: {Property}",
            "translation": "Property must include a name and a value: {Property}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Property",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.Property",
                    "underlyingType": "struct{Name string \"json:\\\"name\\\"\"; Value interface{} \"json:\\\"value\\\"\"; Type string \"json:\\\"type,omitempty\\\"\"}",
                    "argNum": 1,
                    "expr": "property"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of strings.",
            "message": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of strings.",
            "translation": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of strings.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "DeclaredType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "declaredType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property value is of type {ActualType}, expected type {DeclaredType}",
            "message": "Property value is of type {ActualType}, expected type {DeclaredType}",
            "translation": "Property value is of type {ActualType}, expected type {DeclaredType}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ActualType",
                    "string": "%[1]T",
                    "type": "bool",
                    "underlyingType": "bool",
                    "argNum": 1,
                    "expr": "actualType"
                },
                {
                    "id": "DeclaredType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "declaredType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Value {Value} of property {Name} is not an integer type",
            "message": "Value {Value} of property {Name} is not an integer type",
            "translation": "Value {Value} of property {Name} is not an integer type",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Value",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "property.Value"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "property.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
            "message": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
            "translation": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Value",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "property.Value"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "property.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} with value {Value} is not a valid verion string",
            "message": "Property {Name} with value {Value} is not a valid verion string",
            "translation": "Property {Name} with value {Value} is not a valid verion string",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "property.Value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} has invalid value type {ActualType}",
            "message": "Property {Name} has invalid value type {ActualType}",
            "translation": "Property {Name} has invalid value type {ActualType}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "ActualType",
                    "string": "%[2]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "actualType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
            "message": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
            "translation": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dconstraints",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "dconstraints"
                },
                {
                    "id": "Dconstraints_1",
                    "string": "%[2]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "dconstraints"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The constraint expression contains unmatched parentheses.",
            "message": "The constraint expression contains unmatched parentheses.",
            "translation": "The constraint expression contains unmatched parentheses.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_NMP_STATUS_CREATED",
                "New node management policy status created for policy {Arg_1}."
            ],
            "message": "New node management policy status created for policy {Arg_1}.",
            "translation": "New node management policy status created for policy {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_NMP_STATUS_CHANGED",
                "Node management status for {Arg_1} changed to {Arg_2}."
            ],
            "message": "Node management status for {Arg_1} changed to {Arg_2}.",
            "translation": "Node management status for {Arg_1} changed to {Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_NMP_STATUS_CHANGED_WITH_ERROR",
                "Node management status for {Arg_1} changed to {Arg_2}. Error message: {Arg_3}"
            ],
            "message": "Node management status for {Arg_1} changed to {Arg_2}. Error message: {Arg_3}",
            "translation": "Node management status for {Arg_1} changed to {Arg_2}. Error message: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_NMP_STATUS_DELETED",
                "Removing node management status for {Arg_1}."
            ],
            "message": "Removing node management status for {Arg_1}.",
            "translation": "Removing node management status for {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Schema versions are not the same, Consumer policy: {Version}, Producer policy {Version_1}",
            "message": "Compatibility Error: Schema versions are not the same, Consumer policy: {Version}, Producer policy {Version_1}",
            "translation": "Compatibility Error: Schema versions are not the same, Consumer policy: {Version}, Producer policy {Version_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "consumer_policy.Header.Version"
                },
                {
                    "id": "Version_1",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "producer_policy.Header.Version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Node properties {Properties} do not satisfy constraint requirements {Constraints}. Underlying error: {Err}",
            "message": "Compatibility Error: Node properties {Properties} do not satisfy constraint requirements {Constraints}. Underlying error: {Err}",
            "translation": "Compatibility Error: Node properties {Properties} do not satisfy constraint requirements {Constraints}. Underlying error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Properties",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.PropertyList",
                    "underlyingType": "[]github.com/open-horizon/anax/externalpolicy.Property",
                    "argNum": 1,
                    "expr": "producer_policy.Properties"
                },
                {
                    "id": "Constraints",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.ConstraintExpression",
                    "underlyingType": "[]string",
                    "argNum": 2,
                    "expr": "consumer_policy.Constraints"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Node properties do not satisfy constraint requirements. {Err}",
            "message": "Compatibility Error: Node properties do not satisfy constraint requirements. {Err}",
            "translation": "Compatibility Error: Node properties do not satisfy constraint requirements. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Properties {Properties} do not satisfy Node constraint  {Constraints}. Underlying error: {Err}",
            "message": "Compatibility Error: Properties {Properties} do not satisfy Node constraint  {Constraints}. Underlying error: {Err}",
            "translation": "Compatibility Error: Properties {Properties} do not satisfy Node constraint  {Constraints}. Underlying error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Properties",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.PropertyList",
                    "underlyingType": "[]github.com/open-horizon/anax/externalpolicy.Property",
                    "argNum": 1,
                    "expr": "consumer_policy.Properties"
                },
                {
                    "id": "Constraints",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.ConstraintExpression",
                    "underlyingType": "[]string",
                    "argNum": 2,
                    "expr": "producer_policy.Constraints"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Properties do not satisfy node constraint. {Err}",
            "message": "Compatibility Error: Properties do not satisfy node constraint. {Err}",
            "translation": "Compatibility Error: Properties do not satisfy node constraint. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: No common Agreement Protocols between {AgreementProtocols} and {AgreementProtocols_1}. Underlying error: {Err}",
            "message": "Compatibility Error: No common Agreement Protocols between {AgreementProtocols} and {AgreementProtocols_1}. Underlying error: {Err}",
            "translation": "Compatibility Error: No common Agreement Protocols between {AgreementProtocols} and {AgreementProtocols_1}. Underlying error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AgreementProtocols",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/policy.AgreementProtocolList",
                    "underlyingType": "[]github.com/open-horizon/anax/policy.AgreementProtocol",
                    "argNum": 1,
                    "expr": "producer_policy.AgreementProtocols"
                },
                {
                    "id": "AgreementProtocols_1",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/policy.AgreementProtocolList",
                    "underlyingType": "[]github.com/open-horizon/anax/policy.AgreementProtocol",
                    "argNum": 2,
                    "expr": "consumer_policy.AgreementProtocols"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Data verification must be compatible, producer has {DataVerify} and consumer has {DataVerify_1}.",
            "message": "Compatibility Error: Data verification must be compatible, producer has {DataVerify} and consumer has {DataVerify_1}.",
            "translation": "Compatibility Error: Data verification must be compatible, producer has {DataVerify} and consumer has {DataVerify_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DataVerify",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/policy.DataVerification",
                    "underlyingType": "struct{Enabled bool \"json:\\\"enabled,omitempty\\\"\"; URL string \"json:\\\"URL,omitempty\\\"\"; URLUser string \"json:\\\"URLUser,omitempty\\\"\"; URLPassword string \"json:\\\"URLPassword,omitempty\\\"\"; Interval int \"json:\\\"interval,omitempty\\\"\"; CheckRate int \"json:\\\"check_rate,omitempty\\\"\"; Metering github.com/open-horizon/anax/policy.Meter \"json:\\\"metering,omitempty\\\"\"}",
                    "argNum": 1,
                    "expr": "producer_policy.DataVerify"
                },
                {
                    "id": "DataVerify_1",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/policy.DataVerification",
                    "underlyingType": "struct{Enabled bool \"json:\\\"enabled,omitempty\\\"\"; URL string \"json:\\\"URL,omitempty\\\"\"; URLUser string \"json:\\\"URLUser,omitempty\\\"\"; URLPassword string \"json:\\\"URLPassword,omitempty\\\"\"; Interval int \"json:\\\"interval,omitempty\\\"\"; CheckRate int \"json:\\\"check_rate,omitempty\\\"\"; Metering github.com/open-horizon/anax/policy.Meter \"json:\\\"metering,omitempty\\\"\"}",
                    "argNum": 2,
                    "expr": "consumer_policy.DataVerify"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to make directory for self signed MMS API certificate, error {Err}",
            "message": "unable to make directory for self signed MMS API certificate, error {Err}",
            "translation": "unable to make directory for self signed MMS API certificate, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to generate random number for MMS API certificate serial number, error {Err}",
            "message": "unable to generate random number for MMS API certificate serial number, error {Err}",
            "translation": "unable to generate random number for MMS API certificate serial number, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to generate private key for MMS API certificate, error {Err}",
            "message": "unable to generate private key for MMS API certificate, error {Err}",
            "translation": "unable to generate private key for MMS API certificate, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create MMS API certificate, error {Err}",
            "message": "unable to create MMS API certificate, error {Err}",
            "translation": "unable to create MMS API certificate, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
            "message": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
            "translation": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
            "message": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
            "translation": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
            "message": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
            "translation": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
            "message": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
            "translation": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
            "message": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
            "translation": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
            "message": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
            "translation": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to authenticate nil request for secrets API",
            "message": "Unable to authenticate nil request for secrets API",
            "translation": "Unable to authenticate nil request for secrets API",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unable to extract basic auth for request",
            "message": "Unable to extract basic auth for request",
            "translation": "Unable to extract basic auth for request",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to verify {AppKey}, error {Err}",
            "message": "unable to verify {AppKey}, error {Err}",
            "translation": "unable to verify {AppKey}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AppKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "appKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "credentials for {AppKey} are not valid",
            "message": "credentials for {AppKey} are not valid",
            "translation": "credentials for {AppKey} are not valid",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AppKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "appKey"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: Empty string is not a valid version.",
            "message": "Version_Expression: Empty string is not a valid version.",
            "translation": "Version_Expression: Empty string is not a valid version.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Version_Expression: Whitespace is not permitted in {Expr}.",
            "message": "Version_Expression: Whitespace is not permitted in {Expr}.",
            "translation": "Version_Expression: Whitespace is not permitted in {Expr}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expr",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} is not a valid version string.",
            "message": "Version_Expression: {Verstring} is not a valid version string.",
            "translation": "Version_Expression: {Verstring} is not a valid version string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
            "message": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
            "translation": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
            "message": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
            "translation": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
            "message": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
            "translation": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expr",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No intersection found.",
            "message": "No intersection found.",
            "translation": "No intersection found.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The input string is not a version string, it is an empty string.",
            "message": "The input string is not a version string, it is an empty string.",
            "translation": "The input string is not a version string, it is an empty string.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The input string {Ceilingversion} is not a version string.",
            "message": "The input string {Ceilingversion} is not a version string.",
            "translation": "The input string {Ceilingversion} is not a version string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Ceilingversion",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ceiling_version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The input ceiling version {Ceilingversion} is lower than the start version {Start}.",
            "message": "The input ceiling version {Ceilingversion} is lower than the start version {Start}.",
            "translation": "The input ceiling version {Ceilingversion} is lower than the start version {Start}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Ceilingversion",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ceiling_version"
                },
                {
                    "id": "Start",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "self.start"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The input ceiling version {Ceilingversion} is the same as the start version, but either the start or the end is not inclusive.",
            "message": "The input ceiling version {Ceilingversion} is the same as the start version, but either the start or the end is not inclusive.",
            "translation": "The input ceiling version {Ceilingversion} is the same as the start version, but either the start or the end is not inclusive.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Ceilingversion",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ceiling_version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input version string {V1} or {V2} is not a valid single version string.",
            "message": "Input version string {V1} or {V2} is not a valid single version string.",
            "translation": "Input version string {V1} or {V2} is not a valid single version string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "V1",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "v1"
                },
                {
                    "id": "V2",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "v2"
                }
            ],
            "fuzzy": true
        }
    ]
}