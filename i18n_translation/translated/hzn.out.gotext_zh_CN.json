// NLS_CHARSET=UTF-8
{
  "language": "zh-CN",
  "messages": [
    {
      "id": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
      "translation": "约束表达式 {Dconstraints} 的类型为 {Dconstraints_1}，但期望字符串数组"
    },
    {
      "id": "unable to convert policy constraint {Remainder} into internal format, error {Err}",
      "translation": "无法将策略约束 {Remainder} 转换为内部格式，错误：{Err}"
    },
    {
      "id": "Logical operator {NextLogicalOperator} is not valid, expecting AND, OR, &&, ||",
      "translation": "逻辑运算符 {NextLogicalOperator} 无效，期望 AND、OR、&& 或 ||"
    },
    {
      "id": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is <property> == <value>",
      "translation": "在表达式 {Expression} 中找到 {Lenpieces} 个标记，但期望 3 个，期望的格式是 <property> == <value>"
    },
    {
      "id": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is expression with 3 tokens: <property> <operator> <value> in constraint expression",
      "translation": "在表达式 {Expression} 中找到 {Lenpieces} 个标记，但期望 3 个，期望格式是带 3 个标记的表达式：约束表达式中的 <property> <operator> <value>"
    },
    {
      "id": "Expression: {Expression} should contain valid comparison operator - wrong operator {Pieces1}. Allowed operators: {Lessthan}, {Greaterthan}, {Equalto}, {Doubleequalto}, {Lessthaneq}, {Greaterthaneq}, {Notequalto}, {Inoperator}",
      "translation": "表达式 {Expression} 应包含有效的比较运算符 - 运算符 {Pieces1} 错误。允许的运算符包括：{Lessthan}、{Greaterthan}、{Equalto}、{Doubleequalto}、{Lessthaneq}、{Greaterthaneq}、{Notequalto} 和 {Inoperator}"
    },
    {
      "id": "Comparison operator: {CompOp} is not supported for numeric value: {Value}",
      "translation": "数字值 {Value} 不支持比较运算符 {CompOp}"
    },
    {
      "id": "Comparison operator: {CompOp} is not supported for boolean value: {Value}",
      "translation": "布尔值 {Value} 不支持比较运算符 {CompOp}"
    },
    {
      "id": "Comparison operator: {CompOp} is not supported for string list value: {Value}",
      "translation": "字符串列表值 {Value} 不支持比较运算符 {CompOp}"
    },
    {
      "id": "Comparison operator: {CompOp} is not supported for string value: {Value}",
      "translation": "字符串值 {Value} 不支持比较运算符 {CompOp}"
    },
    {
      "id": "Comparison operator: {CompOp} is not supported for single version: {Value}",
      "translation": "单版本 {Value} 不支持比较运算符 {CompOp}"
    },
    {
      "id": "Comparison operator: {CompOp} is not supported for version expression: {Value}",
      "translation": "版本表达式 {Value} 不支持比较运算符 {CompOp}"
    },
    {
      "id": "Expression: {Expression} is not valid",
      "translation": "表达式 {Expression} 无效"
    },
    {
      "id": "Failed to get proper response from Horizon agent",
      "translation": "从 Horizon 代理程序获取正确的响应失败"
    },
    {
      "id": "failed to marshal 'hzn node list' output: {Err}",
      "translation": "对“hzn node list”的输出进行编组失败：{Err}"
    },
    {
      "id": "Horizon CLI version: {HORIZONVERSION}",
      "translation": "Horizon CLI 版本：{HORIZONVERSION}"
    },
    {
      "id": "Horizon Agent version: {HorizonVersion}",
      "translation": "Horizon 代理程序版本：{HorizonVersion}"
    },
    {
      "id": "horizon api agreement output did not include 'agreements' key",
      "translation": "Horizon API 协议输出未包括“agreements”键"
    },
    {
      "id": "horizon api agreement output did not include '{WhichAgreements}' key",
      "translation": "Horizon API 协议输出未包括“{WhichAgreements}”键"
    },
    {
      "id": "failed to marshal agreement with index {I}: {Err}",
      "translation": "对索引为 {I} 的协议进行编组失败：{Err}"
    },
    {
      "id": "agreement id {AgreementId} not found",
      "translation": "找不到协议标识 {AgreementId}"
    },
    {
      "id": "failed to marshal 'hzn agreement list' output: {Err}",
      "translation": "对“hzn agreement list”的输出进行编组失败：{Err}"
    },
    {
      "id": "either an agreement ID or -a must be specified.",
      "translation": "必须指定协议标识或 -a。"
    },
    {
      "id": "Canceling agreement {Id} ...",
      "translation": "正在取消协议 {Id}..."
    },
    {
      "id": "this command can not be run before running 'hzn register'",
      "translation": "此命令不能在运行“hzn register”之前运行"
    },
    {
      "id": "failed to marshal '/service/config' output attribute {Attr}. {Err}",
      "translation": "对“/service/config”的输出属性 {Attr} 进行编组失败。{Err}"
    },
    {
      "id": "failed to convert '/service/config' output attribute {Attr} to its original type. {Err}",
      "translation": "将“/service/config”输出属性 {Attr} 转换为它的原始类型失败。{Err}"
    },
    {
      "id": "failed to marshal 'hzn service list' output: {Err}",
      "translation": "对“hzn service list”的输出进行编组失败：{Err}"
    },
    {
      "id": "failed to marshal 'hzn service registered' output: {Err}",
      "translation": "对“hzn service registered”的输出进行编组失败：{Err}"
    },
    {
      "id": "failed to marshal 'hzn service configstate' output: {Err}",
      "translation": "对“hzn service configstate”的输出进行编组失败：{Err}"
    },
    {
      "id": "all the registered services",
      "translation": "所有已注册的服务"
    },
    {
      "id": "service {ServiceOrg}/{ServiceUrl}",
      "translation": "服务 {ServiceOrg}/{ServiceUrl}"
    },
    {
      "id": "all the registered services from organization {ServiceOrg}",
      "translation": "组织 {ServiceOrg} 的所有已注册的服务"
    },
    {
      "id": "Please specify the organization for service {ServiceUrl}.",
      "translation": "请为服务 {ServiceUrl} 指定组织。"
    },
    {
      "id": "Are you sure you want to suspend {Msgpart} for this Horizon node?",
      "translation": "确定要针对这个 Horizon 节点暂挂 {Msgpart} 吗？"
    },
    {
      "id": "Suspending {Msgpart}, cancelling releated agreements, stopping related service containers...",
      "translation": "正在暂挂 {Msgpart}，正在取消相关的协议，正在停止相关的服务容器..."
    },
    {
      "id": "Resuming {Msgpart} ...",
      "translation": "正在恢复 {Msgpart}..."
    },
    {
      "id": "Version_Expression: Whitespace is not permitted in {Expr}.",
      "translation": "版本表达式：在 {Expr} 中不允许有空格。"
    },
    {
      "id": "Version_Expression: {Verstring} is not a valid version string.",
      "translation": "版本表达式：{Verstring} 不是有效的版本字符串。"
    },
    {
      "id": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
      "translation": "版本表达式：{Verstring} 未以包括或排除伪指令开头。"
    },
    {
      "id": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
      "translation": "版本表达式：{Verstring} 未以包括或排除伪指令结尾。"
    },
    {
      "id": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
      "translation": "版本表达式：表达式 {Expr} 中的版本数不正确。"
    },
    {
      "id": "Input version string {V1} or {V2} is not a valid single version string.",
      "translation": "输入版本字符串 {V1} 或 {V2} 不是有效的单版本字符串。"
    },
    {
      "id": "failed to unmarshal json input file {FilePath}: {Err}",
      "translation": "对 JSON 输入文件 {FilePath} 进行取消编组失败：{Err}"
    },
    {
      "id": "Incorrect node policy format in file {JsonFilePath}: {Err}",
      "translation": "文件 {JsonFilePath} 中的节点策略格式不正确：{Err}"
    },
    {
      "id": "Reading input file {InputFile}...",
      "translation": "正在读取输入文件 {InputFile}..."
    },
    {
      "id": "hzn cli is configured with exchange url {ExchUrlBase} from {ExchangeUrlLocation} and the horizon agent is configured with exchange url {AnaxExchUrlBase} from {ExchangeUrlLocationFromAnax}. hzn register will not work with mismatched exchange urls.",
      "translation": "hzn CLI 已配置有来自 {ExchangeUrlLocation} 的 Exchange URL {ExchUrlBase}，Horizon 代理程序已配置有来自 {ExchangeUrlLocationFromAnax} 的 Exchange URL {AnaxExchUrlBase}。使用不匹配的 Exchange URL 时，hzn 注册不起作用。"
    },
    {
      "id": "Horizon Exchange base URL: {ExchUrlBase}",
      "translation": "Horizon Exchange 基本 URL：{ExchUrlBase}"
    },
    {
      "id": "this Horizon node is already registered or in the process of being registered. If you want to register it differently, run 'hzn unregister' first.",
      "translation": "此 Horizon 节点已注册或正在进行注册。如果要以不同方式进行注册，请先运行“hzn unregister”。"
    },
    {
      "id": "Failed to get proper response from the Horizon agent",
      "translation": "从 Horizon 代理程序获取正确的响应失败"
    },
    {
      "id": "Please specify the node id and token using -n flag or HZN_EXCHANGE_NODE_AUTH environment variable.",
      "translation": "请使用 -n 标志或 HZN_EXCHANGE_NODE_AUTH 环境变量指定节点标识和令牌。"
    },
    {
      "id": "Using node ID '{NodeId}' from the Horizon agent",
      "translation": "正在使用来自 Horizon 代理程序的节点标识“{NodeId}”"
    },
    {
      "id": "could not create a random token",
      "translation": "未能创建随机令牌"
    },
    {
      "id": "node '{Org}/{NodeId}' does not exist in the exchange with the specified token, and the -u flag was not specified to provide exchange user credentials to create/update it.",
      "translation": "在 Exchange 中不存在具有所指定令牌的节点“{Org}/{NodeId}”，未指定 -u 标志来提供 Exchange 用户凭证以创建/更新该节点。"
    },
    {
      "id": "Node {Org}/{NodeId} does not exist in the exchange with the specified token, creating/updating it...",
      "translation": "在 Exchange 中不存在具有所指定令牌的节点 {Org}/{NodeId}，正在创建/更新该节点..."
    },
    {
      "id": "Node {Org}/{NodeId} exists in the exchange",
      "translation": "在 Exchange 中存在节点 {Org}/{NodeId}"
    },
    {
      "id": "No pattern or node policy is specified. Will proceeed with the existing node policy.",
      "translation": "未指定模式或节点策略。将继续使用现有的节点策略。"
    },
    {
      "id": "Will proceeed with the given node policy.",
      "translation": "将继续使用给定的节点策略。"
    },
    {
      "id": "Pattern {ExchangePattern} defined for the node on the exchange. Will proceeed with this pattern.",
      "translation": "已针对 Exchange 上的节点定义模式 {ExchangePattern}。将继续使用此模式。"
    },
    {
      "id": "Cannot proceed with the given pattern {Pattern} because it is different from the pattern {ExchangePattern} defined for the node in the exchange.",
      "translation": "无法继续使用给定的模式 {Pattern}，因为其与针对 Exchange 中的节点定义的模式 {ExchangePattern} 不同。"
    },
    {
      "id": "Will proceeed with the given pattern {Pattern}.",
      "translation": "将继续使用给定的模式 {Pattern}。"
    },
    {
      "id": "Registration failed because {Matches0} Please update the services section in the input file {InputFile}. Run 'hzn unregister' and then 'hzn register...' again",
      "translation": "注册失败，原因：{Matches0}。请更新输入文件 {InputFile} 中的 services 一节。请运行“hzn unregister”，然后再次运行“hzn register...”"
    },
    {
      "id": "{Errstring}. Please define variables for service {Matches2} in the input file {InputFile}. Run 'hzn unregister' and then 'hzn register...' again",
      "translation": "{Errstring}。请在输入文件 {InputFile} 中定义用于服务 {Matches2} 的变量。请运行“hzn unregister”，然后再次运行“hzn register...”"
    },
    {
      "id": "{Errstring}. Please create an input file, define variables for service {Matches2}. Run 'hzn unregister' and then 'hzn register...' again with the -f flag to specify the input file.",
      "translation": "{Errstring}。请创建输入文件，并定义用于服务 {Matches2} 的变量。请运行“hzn unregister”，然后再次运行“hzn register...”并使用 -f 标志指定输入文件。"
    },
    {
      "id": "-o and -p are mutually exclusive with <nodeorg> and <pattern> arguments.",
      "translation": "-o 和 -p 与 <nodeorg> 和 <pattern> 自变量互斥。"
    },
    {
      "id": "Please specify the node organization id.",
      "translation": "请指定节点组织标识。"
    },
    {
      "id": "invalid version range '{Vr}': {Err}",
      "translation": "版本范围“{Vr}”无效：{Err}"
    },
    {
      "id": "unable to verify that {Version} is within {VRange}, error {Err}",
      "translation": "无法确认 {Version} 在 {VRange} 内，错误：{Err}"
    },
    {
      "id": "found no services in the exchange matching: org={Org}, url={Url}, arch={Arch}",
      "translation": "在 Exchange 中找不到任何与以下信息匹配的服务：组织 = {Org}，URL = {Url}，体系结构 = {Arch}"
    },
    {
      "id": "error comparing version {ServiceshighestKey} with version {Version}. {Err}",
      "translation": "将版本 {ServiceshighestKey} 与版本 {Version} 比较时出错。{Err}"
    },
    {
      "id": "found no services in the exchange matched: org={Org}, specRef={Url}, version range={VersionRanges}, arch={Arch}",
      "translation": "在 Exchange 中找不到任何与以下信息匹配的服务：组织 = {Org}，规范引用 = {Url}，版本范围 = {VersionRanges}，体系结构 = {Arch}"
    },
    {
      "id": "found: {Org}, {Url}, {Arch}, {VersionRange}",
      "translation": "找到：{Org}，{Url}，{Arch}，{VersionRange}"
    },
    {
      "id": "did not find pattern '{PatKey}' as expected",
      "translation": "找不到期望的模式“{PatKey}”"
    },
    {
      "id": "Ignoring service that is a different architecture: {ServiceOrg}, {ServiceURL}, {ServiceArch}",
      "translation": "正在忽略本身为另一体系结构的服务：{ServiceOrg}、{ServiceURL}、{ServiceArch}"
    },
    {
      "id": "failed to marshal the user input template file: {Err}",
      "translation": "对用户输入模板文件进行编组失败：{Err}"
    },
    {
      "id": "problem writing the user input template file: {Err}",
      "translation": "写入用户输入模板文件遇到问题：{Err}"
    },
    {
      "id": "Wrote {InputFile}",
      "translation": "已写入 {InputFile}"
    },
    {
      "id": "failed to marshal 'hzn policy list' output: {Err}",
      "translation": "对“hzn policy list”的输出进行编组失败：{Err}"
    },
    {
      "id": "Are you sure you want to remove the node policy?",
      "translation": "确定要移除该节点策略吗？"
    },
    {
      "id": "A list of policy properties that describe the object.",
      "translation": "一列描述对象的策略属性。"
    },
    {
      "id": "A list of constraint expressions of the form <property name> <operator> <property value>,",
      "translation": "一列格式为 <property name> <operator> <property value> 的约束表达式，"
    },
    {
      "id": "separated by boolean operators AND (&&) or OR (||).",
      "translation": "以布尔运算符 AND (&&) 或 OR (||) 分隔。"
    },
    {
      "id": "cleaned {String} resulted in an empty string.",
      "translation": "已清除的 {String} 生成了空字符串。"
    },
    {
      "id": "plugin context must include 'currentDir' as the current directory of the service definition file",
      "translation": "插件上下文必须包括“currentDir”来作为服务定义文件的当前目录"
    },
    {
      "id": "unable to read chart archive {Depchartarchive}, error {Err}",
      "translation": "无法读取 Chart 归档 {Depchartarchive}，错误：{Err}"
    },
    {
      "id": "failed to marshal deployment string {Dep}, error {Err}",
      "translation": "对部署字符串 {Dep} 进行编组失败，错误：{Err}"
    },
    {
      "id": "problem signing deployment string with {KeyFilePath}: {Err}",
      "translation": "使用 {KeyFilePath} 对部署字符串进行签名时遇到问题：{Err}"
    },
    {
      "id": "chart_archive must have a string type value, has {C}",
      "translation": "chart_archive 必须包含字符串类型的值，但值是 {C}"
    },
    {
      "id": "release_name must have a string type value, has {R}",
      "translation": "release_name 必须包含字符串类型的值，但值是 {R}"
    },
    {
      "id": "chart_archive and release_name must be non-empty strings",
      "translation": "chart_archive 和 release_name 必须是非空字符串"
    },
    {
      "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' not supported for Helm deployments",
      "translation": "Helm 部署不支持“{SERVICECOMMAND} {SERVICESTARTCOMMAND}”"
    },
    {
      "id": "horizon api attributes output did not include 'attributes' key",
      "translation": "Horizon API 属性输出未包括“attributes”键"
    },
    {
      "id": "failed to marshal 'hzn attribute list' output: {Err}",
      "translation": "对“hzn attribute list”的输出进行编组失败：{Err}"
    },
    {
      "id": "deployment config {Dep} is not supported",
      "translation": "部署配置 {Dep} 不受支持"
    },
    {
      "id": "starting test mode is not supported for this project",
      "translation": "此项目不支持启动测试模式"
    },
    {
      "id": "New dependency created: {Target} .",
      "translation": "已创建新的依赖关系：{Target}。"
    },
    {
      "id": "'{DEPENDENCYCOMMAND} {DEPENDENCYLISTCOMMAND}' unable to create json object from dependencies, {Err}",
      "translation": "“{DEPENDENCYCOMMAND} {DEPENDENCYLISTCOMMAND}”无法根据依赖关系创建 JSON 对象，{Err}"
    },
    {
      "id": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
      "translation": "无法设置环境变量“HZN_DONT_SUBST_ENV_VARS”，错误：{Err}"
    },
    {
      "id": "Unable to restore env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
      "translation": "无法复原环境变量“HZN_DONT_SUBST_ENV_VARS”，错误：{Err}"
    },
    {
      "id": "unable to get list of dependency files in {DepPath}, error: {Err}",
      "translation": "无法获取 {DepPath} 中的依赖关系文件列表，错误：{Err}"
    },
    {
      "id": "could not create dependency directory {NewDir}, error: {Err}",
      "translation": "未能创建依赖关系目录 {NewDir}，错误：{Err}"
    },
    {
      "id": "dependency validation failed, unable to read {Name}, error: {Err}",
      "translation": "依赖关系验证失败，无法读取 {Name}，错误：{Err}"
    },
    {
      "id": "dependency validation failed, dependency {Name} has an invalid version {Version}, error: {Err}",
      "translation": "依赖关系验证失败，依赖关系 {Name} 的版本 {Version} 无效，错误：{Err}"
    },
    {
      "id": "dependency validation failed, unable to verify version range {Version} is within required range {Expression}, error: {Err}",
      "translation": "依赖关系验证失败，无法验证版本范围 {Version} 是否在所需范围 {Expression} 之内，错误：{Err}"
    },
    {
      "id": "dependency {URL} at version {VersionRange} does not exist in {Joindirectory_DEFAULTDEPENDENCYDIR}.",
      "translation": "版本为 {VersionRange} 的依赖关系 {URL} 不存在于 {Joindirectory_DEFAULTDEPENDENCYDIR} 中。"
    },
    {
      "id": "dependency {Name} did not validate, error: {Err}",
      "translation": "依赖关系 {Name} 未通过验证，错误：{Err}"
    },
    {
      "id": "variable {Name} has no default and must be specified in {UserInputsFilePath}",
      "translation": "变量 {Name} 没有缺省值，必须在 {UserInputsFilePath} 中指定"
    },
    {
      "id": "--specRef is mutually exclusive with --url.",
      "translation": "--specRef 与 --url 互斥。"
    },
    {
      "id": "--project is mutually exclusive with --specRef, --org and --url.",
      "translation": "--project 与 --specRef、--org 和 --url 互斥。"
    },
    {
      "id": "one of --project, or --specRef and --org, or --url and --org must be specified.",
      "translation": "必须指定 --project、--specRef 和 --org 或者 --url 和 --org。"
    },
    {
      "id": "either --specRef and --org, or --url and --org must be specified.",
      "translation": "必须指定 --specRef 和 --org 或者 --url 和 --org。"
    },
    {
      "id": "use --url with service projects.",
      "translation": "请将 --url 与服务项目配合使用。"
    },
    {
      "id": "--project {Project} does not contain Horizon service metadata.",
      "translation": "--project {Project} 未包含 Horizon 服务元数据。"
    },
    {
      "id": "Reading Horizon metadata from {Dir}",
      "translation": "正在从 {Dir} 读取 Horizon 元数据"
    },
    {
      "id": "--specRef or --url is required for remove.",
      "translation": "必须指定 --specRef 或 --url 才能移除。"
    },
    {
      "id": "--specRef and --url are mutually exclusive.",
      "translation": "--specRef 与 --url 互斥。"
    },
    {
      "id": "Service project {Dir} verified.",
      "translation": "服务项目 {Dir} 已通过验证。"
    },
    {
      "id": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS' to zero, error {Err}",
      "translation": "无法将环境变量“HZN_DONT_SUBST_ENV_VARS”设置为零，错误：{Err}"
    },
    {
      "id": "Failed to get the hzn.json configuration file under {Project} directory. Error: {Err}",
      "translation": "获取 {Project} 目录下的 hzn.json 配置文件失败。错误：{Err}"
    },
    {
      "id": "Failed to set the environment variables from configuration file {Projconfigfile}. Error: {Err}",
      "translation": "设置配置文件 {Projconfigfile} 中的环境变量失败。错误：{Err}"
    },
    {
      "id": "Reading Horizon metadata from dependency: {AbsProject}",
      "translation": "正在从依赖关系读取 Horizon 元数据：{AbsProject}"
    },
    {
      "id": "Found dependency {URL}, Org: {Org}",
      "translation": "找到依赖关系 {URL}，组织：{Org}"
    },
    {
      "id": "Failed to restore the environment variables. {Err}",
      "translation": "复原环境变量失败。{Err}"
    },
    {
      "id": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable and global attribute configuration.",
      "translation": "已根据依赖关系的变量和全局属性配置来更新 {HomeDirectory}/{USERINPUTFILE}。"
    },
    {
      "id": "To ensure that the dependency operates correctly, please add variable values to the userinput.json file if this service needs any.",
      "translation": "为确保依赖关系正确操作，请向 userinput.json 文件中添加变量值（如果此服务需要任何变量值）。"
    },
    {
      "id": "The current project already has userinputs defined for this dependency.",
      "translation": "当前项目已有针对此依赖关系定义的用户输入。"
    },
    {
      "id": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable configuration.",
      "translation": "已根据依赖关系的变量配置来更新 {HomeDirectory}/{USERINPUTFILE}。"
    },
    {
      "id": "unsupported project type",
      "translation": "项目类型不受支持"
    },
    {
      "id": "Created {FilePath}/{FileName} as a new dependency.",
      "translation": "已将 {FilePath}/{FileName} 创建为新的依赖关系。"
    },
    {
      "id": "unable to find highest version of {Surl} {Org} in the exchange: {Services}",
      "translation": "在 Exchange 中找不到最高版本的 {Surl} {Org}：{Services}"
    },
    {
      "id": "no services found in the exchange.",
      "translation": "在 Exchange 中找不到任何服务。"
    },
    {
      "id": "Creating dependency on: {ServiceDef}, Org: {Org}",
      "translation": "正在创建对 {ServiceDef} 的依赖关系，组织：{Org}"
    },
    {
      "id": "failed to unmarshal deployment {Deployment}: {Err}",
      "translation": "对部署 {Deployment} 进行取消编组失败：{Err}"
    },
    {
      "id": "The image docker auths for the service {Org}/{Surl} are: {Imgauths}",
      "translation": "服务 {Org}/{Surl} 的映像 Docker 认证令牌为：{Imgauths}"
    },
    {
      "id": "failed to get images for {Org}/{Surl}: {Err}",
      "translation": "获取 {Org}/{Surl} 的映像失败：{Err}"
    },
    {
      "id": "Unable to get dependency info for {Sp} , error {Err}",
      "translation": "无法获取 {Sp} 的依赖关系信息，错误：{Err}"
    },
    {
      "id": "'dependency {DEPENDENCYREMOVECOMMAND}' failed to get a list of dependecies. Error {Err}",
      "translation": "“dependency {DEPENDENCYREMOVECOMMAND}”获取依赖关系列表失败。错误：{Err}"
    },
    {
      "id": "All dependencies are: {Deps}",
      "translation": "所有依赖关系为：{Deps}"
    },
    {
      "id": "Found dependency: {Name}",
      "translation": "找到依赖关系：{Name}"
    },
    {
      "id": "Will not remove dependency {Name} because it is referenced by other services.",
      "translation": "不会移除依赖关系 {Name}，因为它已由其他服务引用。"
    },
    {
      "id": "'dependency {DEPENDENCYREMOVECOMMAND}' dependency not found.",
      "translation": "找不到“dependency {DEPENDENCYREMOVECOMMAND}”依赖关系。"
    },
    {
      "id": "Could not read the dependency file {Name}. Error: {Err}",
      "translation": "未能读取依赖关系文件 {Name}。错误：{Err}"
    },
    {
      "id": "Error updating project definition: {Err}",
      "translation": "更新项目定义时出错：{Err}"
    },
    {
      "id": "Dependency {Name} could not be removed. Error: {Err}",
      "translation": "未能移除依赖关系 {Name}。错误：{Err}"
    },
    {
      "id": "Error updating userinputs: {Err}",
      "translation": "更新用户输入出错：{Err}"
    },
    {
      "id": "Removed dependency {Arch}.",
      "translation": "已移除依赖关系 {Arch}。"
    },
    {
      "id": "Removed dependency's dependency {Arch}.",
      "translation": "已移除依赖关系的依赖关系 {Arch}。"
    },
    {
      "id": "error creating {DOCKERFILE} for service image. {Err}",
      "translation": "创建用于服务映像的 {DOCKERFILE} 出错。{Err}"
    },
    {
      "id": "Edge $SERVICE_NAME Service Pattern for $ARCH",
      "translation": "$ARCH 的边缘 $SERVICE_NAME 服务模式"
    },
    {
      "id": "Pattern for $SERVICE_NAME for $ARCH",
      "translation": "$ARCH 的 $SERVICE_NAME 的模式"
    },
    {
      "id": "Edge $SERVICE_NAME Service Pattern for all architectures",
      "translation": "所有体系结构的边缘 $SERVICE_NAME 服务模式"
    },
    {
      "id": "Pattern for $SERVICE_NAME",
      "translation": "$SERVICE_NAME 的模式"
    },
    {
      "id": "'{SERVICECOMMAND} {SERVICECREATIONCOMMAND}' Failed to get the service name from the image name. {Err}",
      "translation": "“{SERVICECOMMAND} {SERVICECREATIONCOMMAND}”从映像名称中获取服务名称失败。{Err}"
    },
    {
      "id": "Creating config file for environmental variables: {Dir}/{HZNENVFILE}",
      "translation": "正在创建用于环境变量的配置文件：{Dir}/{HZNENVFILE}"
    },
    {
      "id": "Creating user input file: {Dir}/{USERINPUTFILE}",
      "translation": "正在创建用户输入文件：{Dir}/{USERINPUTFILE}"
    },
    {
      "id": "Creating service definition file: {Dir}/{SERVICEDEFINITIONFILE}",
      "translation": "正在创建服务定义文件：{Dir}/{SERVICEDEFINITIONFILE}"
    },
    {
      "id": "Creating pattern definition file: {Dir}/{PATTERNDEFINITIONFILE}",
      "translation": "正在创建模式定义文件：{Dir}/{PATTERNDEFINITIONFILE}"
    },
    {
      "id": "Creating service policy file: {Dir}/{SERVICEPOLICYFILE}",
      "translation": "正在创建服务策略文件：{Dir}/{SERVICEPOLICYFILE}"
    },
    {
      "id": "Creating .gitignore files for source code management.",
      "translation": "正在创建用于源代码管理的 .gitignore 文件。"
    },
    {
      "id": "Creating image generation files under {Currentdir} directory.",
      "translation": "正在 {Currentdir} 目录下创建映像生成文件。"
    },
    {
      "id": "Created image generation files in {Currentdir} and horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
      "translation": "已在 {Currentdir} 中创建映像生成文件，并且已在 {Dir} 中创建 Horizon 元数据文件。请编辑这些文件，以定义和配置新的 {SERVICECOMMAND}。"
    },
    {
      "id": "Created horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
      "translation": "已在 {Dir} 中创建 Horizon 元数据文件。请编辑这些文件，以定义和配置新的 {SERVICECOMMAND}。"
    },
    {
      "id": "must specify either --org or set the {DEVTOOLHZNORG} environment variable.",
      "translation": "必须指定 --org 或设置 {DEVTOOLHZNORG} 环境变量。"
    },
    {
      "id": "invalid version string: {Version}",
      "translation": "版本字符串无效：{Version}"
    },
    {
      "id": "only support one image for a service unless --noImageGen flag is specified.",
      "translation": "除非指定 --noImageGen 标志，否则一个服务只支持一个映像。"
    },
    {
      "id": "image {Image} has invalid format.",
      "translation": "映像 {Image} 的格式无效。"
    },
    {
      "id": "please specify the image name with -i flag.",
      "translation": "请使用 -i 标志指定映像名称。"
    },
    {
      "id": "unsupported deployment config type: {Dconfig}",
      "translation": "部署配置类型不受支持：{Dconfig}"
    },
    {
      "id": "$SERVICE_NAME for $ARCH",
      "translation": "$ARCH 的 $SERVICE_NAME"
    },
    {
      "id": "Who to say hello to",
      "translation": "要问候的人员"
    },
    {
      "id": "unknown deployment type: {DeploymentType}",
      "translation": "部署类型未知：{DeploymentType}"
    },
    {
      "id": "{FilePath}: URL must be set.",
      "translation": "{FilePath}：必须设置 URL。"
    },
    {
      "id": "{FilePath}: version must be set to a specific version, e.g. 1.0.0.",
      "translation": "{FilePath}：必须将版本设置为特定版本，例如 1.0.0。"
    },
    {
      "id": "{FilePath}: org must be set.",
      "translation": "{FilePath}：必须设置组织。"
    },
    {
      "id": "{FilePath}: deployment configuration, {Err}",
      "translation": "{FilePath}：部署配置，{Err}"
    },
    {
      "id": "{FilePath}: userInput array index {Ix} does not have name and type specified.",
      "translation": "{FilePath}：用户输入数组下标 {Ix} 未指定有名称和类型。"
    },
    {
      "id": "Updated {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
      "translation": "已更新 {HomeDirectory}/{SERVICEDEFINITIONFILE} 依赖关系。"
    },
    {
      "id": "No need to update {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
      "translation": "无需更新 {HomeDirectory}/{SERVICEDEFINITIONFILE} 依赖关系。"
    },
    {
      "id": "error creating {HORIZONGITIGNOREFILE} for source code management. {Err}",
      "translation": "创建用于源代码管理的 {HORIZONGITIGNOREFILE} 出错。{Err}"
    },
    {
      "id": "unable to demarshal {UserInputFilePath} file, error: {Err}",
      "translation": "无法将 {UserInputFilePath} 文件序列化，错误：{Err}"
    },
    {
      "id": "Converted userinput attribute: {GlobalSet} to API attribute: {Attr}",
      "translation": "已将用户输入属性 {GlobalSet} 转换为 API 属性 {Attr}"
    },
    {
      "id": "{GlobalSet} encountered error: {Error}",
      "translation": "{GlobalSet} 遇到错误：{Error}"
    },
    {
      "id": "Converted API Attributes: {Global} to persistent attributes: {Attributes}",
      "translation": "已将 API 属性 {Global} 转换为持久性属性 {Attributes}"
    },
    {
      "id": "{OriginalUserInputFilePath}: global array element ({GlobalSet}) has an empty type, must be one of the supported attribute types. See the Horizon agent /attribute API.",
      "translation": "{OriginalUserInputFilePath}：全局数组元素 ({GlobalSet}) 的类型为空，必须是其中一种受支持的属性类型。请参阅 Horizon 代理程序/属性 API。"
    },
    {
      "id": "{USERINPUTFILE} has error: {Err}",
      "translation": "{USERINPUTFILE} 有错误：{Err}"
    },
    {
      "id": "{OriginalUserInputFilePath}: services array element at index {Ix} is {MicroWork} {Err}",
      "translation": "{OriginalUserInputFilePath}：下标为 {Ix} 的服务数组元素是 {MicroWork} {Err}"
    },
    {
      "id": "{OriginalUserInputFilePath}: services array does not contain an element for {URL}. Error: {Err}",
      "translation": "{OriginalUserInputFilePath}：服务数组未包含 {URL} 元素。错误：{Err}"
    },
    {
      "id": "please provice a user input file for service {URL}. Error: {Err}",
      "translation": "请为服务 {URL} 提供用户输入文件。错误：{Err}"
    },
    {
      "id": "has empty org, must be set to the name of the organization that owns the service.",
      "translation": "的组织为空，必须设置为拥有该服务的组织的名称。"
    },
    {
      "id": "has empty url. Must be set to this service's url or a dependency's url.",
      "translation": "的 URL 为空。必须设置为此服务的 URL 或依赖关系的 URL。"
    },
    {
      "id": "sets variable {VarName} using a value of {Err}.",
      "translation": "使用值 {Err} 来设置变量 {VarName}。"
    },
    {
      "id": "sets variable {VarName} of type {VarValue} that is not defined.",
      "translation": "设置类型为 {VarValue} 的变量 {VarName}，但该类型未定义。"
    },
    {
      "id": "Updated {HomeDirectory}/{USERINPUTFILE}.",
      "translation": "已更新 {HomeDirectory}/{USERINPUTFILE}。"
    },
    {
      "id": "No need to update {HomeDirectory}/{USERINPUTFILE}.",
      "translation": "无需更新 {HomeDirectory}/{USERINPUTFILE}。"
    },
    {
      "id": "could not create directory {NewDepDir}, error: {Err}",
      "translation": "未能创建目录 {NewDepDir}，错误：{Err}"
    },
    {
      "id": "could not get status of directory {NewDepDir}, error: {Err}",
      "translation": "未能获取目录 {NewDepDir}，错误：{Err}"
    },
    {
      "id": "Using working directory: {Dir}",
      "translation": "正在使用工作目录：{Dir}"
    },
    {
      "id": "horizon project in {Dir} already contains {FileName}.",
      "translation": "{Dir} 中的 Horizon 项目已包含 {FileName}。"
    },
    {
      "id": "error checking for {FileName}: {Err}",
      "translation": "查找 {FileName} 出错：{Err}"
    },
    {
      "id": "failed to unmarshal {FilePath}, error: {Err}",
      "translation": "对 {FilePath} 进行取消编组失败，错误：{Err}"
    },
    {
      "id": "failed to create json object for {FileName}, error: {Err}",
      "translation": "为 {FileName} 创建 JSON 对象失败，错误：{Err}"
    },
    {
      "id": "unable to write json object for {FileName} to file {FilePath}, error: {Err}",
      "translation": "无法将 {FileName} 的 JSON 对象写入 {FilePath} 文件，错误：{Err}"
    },
    {
      "id": "Must set environment variable {DEVTOOLHZNORG} or specify the user as 'org/user' on the --user-pw flag",
      "translation": "必须设置环境变量 {DEVTOOLHZNORG} 或者在 --user-pw 标志上将用户指定为“org/user”"
    },
    {
      "id": "Must set environment variable {DEVTOOLHZNUSER} or specify user exchange credentials with --user-pw",
      "translation": "必须设置环境变量 {DEVTOOLHZNUSER} 或者使用 --user-pw 指定用户 Exchange 凭证"
    },
    {
      "id": "Unable to set env var {DEVTOOLHZNEXCHANGEURL} to {ExchangeUrl}, error {Err}",
      "translation": "无法将环境变量 {DEVTOOLHZNEXCHANGEURL} 设置为 {ExchangeUrl}，错误：{Err}"
    },
    {
      "id": "Environment variable {DEVTOOLHZNEXCHANGEURL} must be set.",
      "translation": "必须设置环境变量 {DEVTOOLHZNEXCHANGEURL}。"
    },
    {
      "id": "project has no horizon metadata directory. Use hzn dev to create a new project. Error: {Err}",
      "translation": "项目没有 Horizon 元数据目录。请使用 hzn dev 来创建新项目。错误：{Err}"
    },
    {
      "id": "'{ProjectType} {Cmd}' project does not validate. {Derr}",
      "translation": "“{ProjectType} {Cmd}”项目未通过验证。{Derr}"
    },
    {
      "id": "'{ProjectType} {Cmd}' project does not validate. {Verr}",
      "translation": "“{ProjectType} {Cmd}”项目未通过验证。{Verr}"
    },
    {
      "id": "'{ProjectType} {Cmd}' Must specify configuration file type (-t) when a configuration file is specified (-m).",
      "translation": "“{ProjectType} {Cmd}”：指定有配置文件 (-m) 时，必须指定配置文件类型 (-t)。"
    },
    {
      "id": "'{ProjectType} {Cmd}' configuration file {FileRef} error {Err}",
      "translation": "“{ProjectType} {Cmd}”配置文件 {FileRef} 错误：{Err}"
    },
    {
      "id": "project does not validate. {Verr}",
      "translation": "项目未通过验证。{Verr}"
    },
    {
      "id": "project in {Dir} is not a horizon project.",
      "translation": "项目（在 {Dir} 中）不是 Horizon 项目。"
    },
    {
      "id": "Final Attributes: {Attrs}",
      "translation": "最终属性：{Attrs}"
    },
    {
      "id": "global attribute conversion error: {Cerr}",
      "translation": "全局属性转换错误：{Cerr}"
    },
    {
      "id": "'{ProjectType} {Cmd}' unable to create Container Worker, {Cerr}",
      "translation": "“{ProjectType} {Cmd}”无法创建容器工作程序 {Cerr}"
    },
    {
      "id": "unable to list containers, {Err}",
      "translation": "无法列示容器，{Err}"
    },
    {
      "id": "unable to list existing containers: {Err}",
      "translation": "无法列示现有容器：{Err}"
    },
    {
      "id": "Found main network for service {Nwname}, {ContainerNetwork}",
      "translation": "找到用于服务 {Nwname} 的主网络 {ContainerNetwork}"
    },
    {
      "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' {StartErr} for dependency {URL}",
      "translation": "“{SERVICECOMMAND} {SERVICESTARTCOMMAND}”：针对依赖关系 {URL}，发生 {StartErr}"
    },
    {
      "id": "unable to retrieve dependency metadata: {Err}",
      "translation": "无法检索依赖关系元数据：{Err}"
    },
    {
      "id": "unable to start dependencies: {Err}",
      "translation": "无法启动依赖关系：{Err}"
    },
    {
      "id": "Skipping service because it has no deployment configuration: {DepConfig}",
      "translation": "正在跳过服务，因为它没有部署配置：{DepConfig}"
    },
    {
      "id": "unable to generate instance ID: {Err}",
      "translation": "无法生成实例标识：{Err}"
    },
    {
      "id": "unable to create environment variables",
      "translation": "无法创建环境变量"
    },
    {
      "id": "Passing environment variables: {EnvironmentAdditions}",
      "translation": "正在传递环境变量：{EnvironmentAdditions}"
    },
    {
      "id": "Start {LogName}: {CLIString} with instance id prefix {Id}",
      "translation": "启动 {LogName}：{CLIString}，实例标识前缀为 {Id}"
    },
    {
      "id": "unable to start container using {CLIString}, error: {StartErr}",
      "translation": "无法使用 {CLIString} 启动容器，错误：{StartErr}"
    },
    {
      "id": "Running {LogName}.",
      "translation": "正在运行 {LogName}。"
    },
    {
      "id": "Stopping dependencies.",
      "translation": "正在停止依赖关系。"
    },
    {
      "id": "unable to stop dependencies: {Err}",
      "translation": "无法停止依赖关系：{Err}"
    },
    {
      "id": "Found containers {Containers}",
      "translation": "找到容器 {Containers}"
    },
    {
      "id": "Stop {LogName}: {CLIString} with instance id prefix {MsId}",
      "translation": "停止 {LogName}：{CLIString}，实例标识前缀为 {MsId}"
    },
    {
      "id": "failed to create docker client, error: {Derr}",
      "translation": "创建 Docker 客户机失败，错误：{Derr}"
    },
    {
      "id": "failed to convert global attributes in {USERINPUTFILE}, error: {Err}",
      "translation": "转换 {USERINPUTFILE} 中的全局属性失败，错误：{Err}"
    },
    {
      "id": "failed to extract authentication attribute from {USERINPUTFILE}, error: {Err}",
      "translation": "从 {USERINPUTFILE} 中抽取认证属性失败，错误：{Err}"
    },
    {
      "id": "getting container images into docker.",
      "translation": "正在将容器映像引入到 Docker 中。"
    },
    {
      "id": "failed to get container images, error: {Err}",
      "translation": "获取容器映像失败，错误：{Err}"
    },
    {
      "id": "invalid image format: {Image}",
      "translation": "映像格式无效：{Image}"
    },
    {
      "id": "file {FilePath} exists already",
      "translation": "文件 {FilePath} 已存在"
    },
    {
      "id": "unable to write content to file {FilePath}, error: {Err}",
      "translation": "无法将内容写入文件 {FilePath}，错误：{Err}"
    },
    {
      "id": "problem signing stdin with {PrivKeyFilePath}: {Err}",
      "translation": "使用 {PrivKeyFilePath} 对 stdin 进行签名时遇到问题：{Err}"
    },
    {
      "id": "problem verifying deployment string with {PubKeyFilePath}: {Err}",
      "translation": "使用 {PubKeyFilePath} 验证部署字符串时遇到问题：{Err}"
    },
    {
      "id": "Failed to get the variables from configuration file {CofigFile}. Error: {Err}",
      "translation": "获取配置文件 {CofigFile} 中的变量失败。错误：{Err}"
    },
    {
      "id": "failed to marshal 'key list' output: {Err}",
      "translation": "对“key list”的输出进行编组失败：{Err}"
    },
    {
      "id": "horizon api trust output did not include 'pem' key",
      "translation": "Horizon API 信任输出未包括“pem”键"
    },
    {
      "id": "failed to create a new key pair: {Err}",
      "translation": "创建新的密钥对失败：{Err}"
    },
    {
      "id": "Move private key file from {PrivKeyName} to {PrivKeyFile}",
      "translation": "将专用密钥文件从 {PrivKeyName} 移至 {PrivKeyFile}"
    },
    {
      "id": "failed to move private key file from {PrivKeyName} to {PrivKeyFile}. {Err}",
      "translation": "将专用密钥文件从 {PrivKeyName} 移至 {PrivKeyFile} 失败。{Err}"
    },
    {
      "id": "Move public key file from {PubKeyName} to {PubKeyFile}.",
      "translation": "将公用密钥文件从 {PubKeyName} 移至 {PubKeyFile}。"
    },
    {
      "id": "failed to move public key file from {PubKeyName} to {PubKeyFile}. {Err}",
      "translation": "将公用密钥文件从 {PubKeyName} 移至 {PubKeyFile} 失败。{Err}"
    },
    {
      "id": "Created keys:\n \t{PrivKeyFile}\n\t{PubKeyFile}",
      "translation": "已创建密钥：\n \t{PrivKeyFile}\n\t{PubKeyFile}"
    },
    {
      "id": "asked to import the created public key, but can not determine the name.",
      "translation": "已请求导入所创建的公用密钥，但无法确定名称。"
    },
    {
      "id": "Importing public key file {PubKeyFile} to the Horizon agent.",
      "translation": "正在将公用密钥文件 {PubKeyFile} 导入到 Horizon 代理程序中。"
    },
    {
      "id": "{PubKeyFile} imported to the Horizon agent",
      "translation": "已将 {PubKeyFile} 导入到 Horizon 代理程序中"
    },
    {
      "id": "Public key '{KeyName}' removed from the Horizon agent.",
      "translation": "已从 Horizon 代理程序中移除公用密钥“{KeyName}”。"
    },
    {
      "id": "-d is mutually exclusive with -k and -K",
      "translation": "-d 与 -k 和 -K 互斥"
    },
    {
      "id": "Failed to get absolute path for file {PrivKeyFile}. {Err}",
      "translation": "获取 {PrivKeyFile} 文件的绝对路径失败。{Err}"
    },
    {
      "id": "Creating directory {OutputDirPub}.",
      "translation": "正在创建目录 {OutputDirPub}。"
    },
    {
      "id": "{PrivKeyFile} is a directory. Please specify a file name.",
      "translation": "{PrivKeyFile} 是目录。请指定文件名。"
    },
    {
      "id": "File {PrivKeyFile} and {PubKeyFile} exist, do you want to overwrite?",
      "translation": "文件 {PrivKeyFile} 和 {PubKeyFile} 已存在，是否要覆盖？"
    },
    {
      "id": "File {PrivKeyFile} exists, do you want to overwrite?",
      "translation": "文件 {PrivKeyFile} 已存在，是否要覆盖？"
    },
    {
      "id": "Deleting file {PrivKeyFile}.",
      "translation": "正在删除文件 {PrivKeyFile}。"
    },
    {
      "id": "unable to make directory for self signed MMS API certificate, error {Err}",
      "translation": "无法为自签名 MMS API 证书建立目录，错误：{Err}"
    },
    {
      "id": "unable to generate random number for MMS API certificate serial number, error {Err}",
      "translation": "无法为 MMS API 证书序列号生成随机数，错误：{Err}"
    },
    {
      "id": "unable to generate private key for MMS API certificate, error {Err}",
      "translation": "无法为 MMS API 证书生成专用密钥，错误：{Err}"
    },
    {
      "id": "unable to create MMS API certificate, error {Err}",
      "translation": "无法创建 MMS API 证书，错误：{Err}"
    },
    {
      "id": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
      "translation": "无法将 MMS API 证书写入文件 {ServerCertificate}，错误：{Err}"
    },
    {
      "id": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
      "translation": "无法将 MMS API 证书编码到文件 {ServerCertificate}，错误：{Err}"
    },
    {
      "id": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
      "translation": "无法关闭 MMS API 证书文件 {ServerCertificate}，错误：{Err}"
    },
    {
      "id": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
      "translation": "无法将 MMS API 证书专用密钥写入文件 {ServerKey}，错误：{Err}"
    },
    {
      "id": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
      "translation": "无法将 MMS API 证书专用密钥编码到文件 {ServerKey}，错误：{Err}"
    },
    {
      "id": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
      "translation": "无法关闭 MMS API 证书专用密钥文件 {ServerKey}，错误：{Err}"
    },
    {
      "id": "Name, or Org is empty string.",
      "translation": "名称或组织是空字符串。"
    },
    {
      "id": "The serviceVersions array is empty.",
      "translation": "serviceVersions 数组为空。"
    },
    {
      "id": "properties contains an invalid property: {Err}",
      "translation": "properties 包含无效的属性：{Err}"
    },
    {
      "id": "Reading configuration file: {ConfigFile}",
      "translation": "正在读取配置文件：{ConfigFile}"
    },
    {
      "id": "Unable to read config file: {ConfigFile}. {Err}",
      "translation": "无法读取配置文件：{ConfigFile}。{Err}"
    },
    {
      "id": "Unable to decode content of config file {ConfigFile}. {Err}",
      "translation": "无法将配置文件 {ConfigFile} 的内容解码。{Err}"
    },
    {
      "id": "Config file does not exist: {ConfigFile}.",
      "translation": "配置文件不存在：{ConfigFile}。"
    },
    {
      "id": "Failed to set the environment variable defined in the MetadataVars attribute in file {ConfigFile}. {Err}",
      "translation": "设置 {ConfigFile} 文件中 MetadataVars 属性中定义的环境变量失败。{Err}"
    },
    {
      "id": "Failed to set the environment variable in top level in file {ConfigFile}. {Err}",
      "translation": "设置 {ConfigFile} 文件中位于顶层的环境变量失败。{Err}"
    },
    {
      "id": "Failed to set the environment variable defined in file {ConfigFile}. {Err}",
      "translation": "设置 {ConfigFile} 文件中定义的环境变量失败。{Err}"
    },
    {
      "id": "Local configuration {LocalConfigFile} has been setup at the beginning of this command. Will not setup twice.",
      "translation": "已在此命令的开头设置本地配置 {LocalConfigFile}。不会设置两次。"
    },
    {
      "id": "Failed to set the environment variable from the local configuration file {LocalConfigFile} for file {FilePath}. Error: {Err}",
      "translation": "对于文件 {FilePath}，设置本地配置文件 {LocalConfigFile} 中的环境变量失败。错误：{Err}"
    },
    {
      "id": "Failed to restore the environment variable after using local configuration file {UseLocalConfig}. {Err}",
      "translation": "在使用本地配置文件 {UseLocalConfig} 之后，复原环境变量失败。{Err}"
    },
    {
      "id": "Failed to get the absolute path for file {ConfigFilepkg}. {Err}",
      "translation": "获取 {ConfigFilepkg} 文件的绝对路径失败。{Err}"
    },
    {
      "id": "Error reading environment variables from file {ConfigFilepkg}. {Err}",
      "translation": "从 {ConfigFilepkg} 文件中读取环境变量出错。{Err}"
    },
    {
      "id": "Error reading environment variables from file /etc/default/horizon. {Err}",
      "translation": "从 /etc/default/horizon 文件中读取环境变量出错。{Err}"
    },
    {
      "id": "Failed to get the absolute path for file ~/.hzn/hzn.json. {Err}",
      "translation": "获取 ~/.hzn/hzn.json 文件的绝对路径失败。{Err}"
    },
    {
      "id": "Error getting project level configuration file name. {Err}",
      "translation": "获取项目级别的配置文件名称出错。{Err}"
    },
    {
      "id": "No project level configuration file found.",
      "translation": "找不到项目级别的配置文件。"
    },
    {
      "id": "failed to marshal 'hzn status -l' output: {Err}",
      "translation": "对“hzn status -l”的输出进行编组失败：{Err}"
    },
    {
      "id": "failed to marshal 'hzn status' output: {Err}",
      "translation": "对“hzn status”的输出进行编组失败：{Err}"
    },
    {
      "id": "Command line interface for Horizon agent. Most of the sub-commands use the Horizon Agent API at the default location http://localhost (see environment Environment Variables section to override this).\n\nEnvironment Variables:\n  HORIZON_URL:  Override the URL at which hzn contacts the Horizon Agent API.\n      This can facilitate using a remote Horizon Agent via an ssh tunnel.\n  HZN_EXCHANGE_URL:  Override the URL that the 'hzn exchange' sub-commands use\n      to communicate with the Horizon Exchange, for example\n      https://exchange.bluehorizon.network/api/v1. (By default hzn will ask the\n      Horizon Agent for the URL.)\n  HZN_ORG_ID:  Default value for the 'hzn exchange -o' flag,\n      to specify the organization ID'.\n  HZN_EXCHANGE_USER_AUTH:  Default value for the 'hzn exchange -u' or 'hzn\n\t  register -u' flag, in the form '[org/]user:pw'. Notice that HZN_ORG_ID can be set\n\t  if org is omitted when HZN_EXCHANGE_USER_AUTH is set.\n  HZN_FSS_CSSURL:  Override the URL that the 'hzn mms' sub-commands use\n      to communicate with the Horizon Model Management Service, for example\n      https://exchange.bluehorizon.network/css/. (By default hzn will ask the\n      Horizon Agent for the URL.)\n\n  All these environment variables and ones mentioned in the command help can be\n  specified in user's configuration file: ~/.hzn/hzn.json with JSON format.\n  For example:\n  {Com____}",
      "translation": "Horizon 代理程序的命令行界面。大部分子命令使用位于缺省位置 http://localhost 的 Horizon 代理程序 API（请参阅“环境变量”一节以覆盖该位置）。\n\n环境变量：\n  HORIZON_URL：覆盖供 hzn 用来联系 Horizon 代理程序 API 的 URL。\n    这可以方便您通过 SSH 隧道使用远程 Horizon 代理程序。\n  HZN_EXCHANGE_URL：覆盖供“hzn exchange”子命令用来与 Horizon Exchange\n    通信的URL，例如，https://exchange.bluehorizon.network/api/v1。\n    （缺省情况下，hzn 将向 Horizon 代理程序查询该 URL。）\n  HZN_ORG_ID：“hzn exchange -o”标志的缺省值，用于指定组织标识。\n  HZN_EXCHANGE_USER_AUTH：“hzn exchange -u” 或 “hzn register -u”\n    标志的缺省值，其格式为 “[org/]user:pw”。 请注意，如果设置\n    HZN_EXCHANGE_USER_AUTH 时省略 组织，那么可以设置 HZN_ORG_ID。\n  HZN_FSS_CSSURL：覆盖供 “hzn mms” 子命令用于与 Horizon 模型管理\n    服务进行通信的 URL，例如https://exchange.bluehorizon.network/css/。\n    （缺省情况下，hzn 将向Horizon代理程序查询该 URL。）\n\n  所有这些环境变量以及命令帮助中提及的变量都可以在用户配置文件\n  ~/.hzn/hzn.json中使用 JSON 格式指定。例如：\n  {Com____}"
    },
    {
      "id": "Verbose output.",
      "translation": "详细输出。"
    },
    {
      "id": "When calling the Horizon or Exchange API, do GETs, but don't do PUTs, POSTs, or DELETEs.",
      "translation": "调用 Horizon 或 Exchange API 时，请执行 GET，但不要执行 PUT、POST 或 DELETE。"
    },
    {
      "id": "Show the Horizon version.",
      "translation": "显示 Horizon 版本。"
    },
    {
      "id": "Show the architecture of this machine (as defined by Horizon and golang).",
      "translation": "显示此机器的体系结构（由 Horizon 和 golang 定义）。"
    },
    {
      "id": "List and manage Horizon Exchange resources.",
      "translation": "列示和管理 Horizon Exchange 资源。"
    },
    {
      "id": "The Horizon exchange organization ID. If not specified, HZN_ORG_ID will be used as a default.",
      "translation": "Horizon Exchange 组织标识。未指定时，将使用 HZN_ORG_ID 作为缺省值。"
    },
    {
      "id": "Horizon Exchange user credentials to query and create exchange resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value. As an alternative to using -o, you can set HZN_ORG_ID with the Horizon exchange organization ID",
      "translation": "用于查询和创建 Exchange 资源的 Horizon Exchange 用户凭证。未指定时，将使用 HZN_EXCHANGE_USER_AUTH 作为缺省值。如果未附加用户的组织作为前缀，那么将自动附加 -o 值作为前缀。除使用 -o 之外，还可以使用 Horizon Exchange 组织标识来设置 HZN_ORG_ID"
    },
    {
      "id": "Display the version of the Horizon Exchange.",
      "translation": "显示 Horizon Exchange 的版本。"
    },
    {
      "id": "Display the status of the Horizon Exchange.",
      "translation": "显示 Horizon Exchange 的状态。"
    },
    {
      "id": "List and manage users in the Horizon Exchange.",
      "translation": "列示和管理 Horizon Exchange 中的用户。"
    },
    {
      "id": "Display the user resource from the Horizon Exchange. (Normally you can only display your own user. If the user does not exist, you will get an invalid credentials error.)",
      "translation": "显示 Horizon Exchange 中的用户资源。（通常，您只能显示自己的用户。如果该用户不存在，您会看到“凭证无效”错误。）"
    },
    {
      "id": "List this one user. Default is your own user. Only admin users can list other users.",
      "translation": "列示这个用户。缺省值是您自己的用户。只有管理员用户才能列示其他用户。"
    },
    {
      "id": "List all users in the org. Will only do this if you are a user with admin privilege.",
      "translation": "列示组织中的所有用户。仅当您是具有管理权限的用户时，才能执行此操作。"
    },
    {
      "id": "When listing all of the users, show only the usernames, instead of each entire resource.",
      "translation": "列示所有用户时，仅显示用户名，而不是显示每个完整的资源。"
    },
    {
      "id": "Create the user resource in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中创建用户资源。"
    },
    {
      "id": "Your username for this user account when creating it in the Horizon exchange.",
      "translation": "在 Horizon Exchange 中创建此用户帐户时，此帐户的用户名。"
    },
    {
      "id": "Your password for this user account when creating it in the Horizon exchange.",
      "translation": "在 Horizon Exchange 中创建此用户帐户时，此帐户的密码。"
    },
    {
      "id": "Your email address that should be associated with this user account when creating it in the Horizon exchange. If your username is an email address, this argument can be omitted.",
      "translation": "在 Horizon Exchange 中创建此用户帐户时，应该与此帐户关联的电子邮件地址。如果用户名是电子邮件地址，那么可以省略此自变量。"
    },
    {
      "id": "This user should be an administrator, capable of managing all resources in this org of the exchange.",
      "translation": "此用户应该是管理员，他应该能够管理 Exchange 的此组织中的所有资源。"
    },
    {
      "id": "Change the existing user to be an admin user (like root in his/her org) or to no longer be an admin user. Can only be run by exchange root or another admin user.",
      "translation": "将现有用户更改为管理员用户（例如组织中的 root 用户），或者更改为不再是管理员用户。只能由 Exchange root 用户或其他管理员用户运行。"
    },
    {
      "id": "The user to be modified.",
      "translation": "要修改的用户。"
    },
    {
      "id": "True if they should be an admin user, otherwise false.",
      "translation": "如果他们应该是管理员用户，请设置为 true，否则设置为 false。"
    },
    {
      "id": "Remove a user resource from the Horizon Exchange. Warning: this will cause all exchange resources owned by this user to also be deleted (nodes, services, patterns, etc).",
      "translation": "从 Horizon Exchange 中移除用户资源。警告：这将导致同时删除此用户拥有的所有 Exchange 资源（节点、服务、模式，等等）。"
    },
    {
      "id": "The user to remove.",
      "translation": "要移除的用户。"
    },
    {
      "id": "Skip the 'are you sure?' prompt.",
      "translation": "跳过“是否确定？”提示。"
    },
    {
      "id": "List and manage nodes in the Horizon Exchange",
      "translation": "列示和管理 Horizon Exchange 中的节点"
    },
    {
      "id": "Display the node resources from the Horizon Exchange.",
      "translation": "显示 Horizon Exchange 中的节点资源。"
    },
    {
      "id": "List just this one node.",
      "translation": "仅列示这一节点。"
    },
    {
      "id": "The Horizon Exchange node ID and token to be used as credentials to query and modify the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
      "translation": "要用作凭证的 Horizon Exchange 节点标识和令牌，用于查询和修改节点资源（如果未指定 -u 标志）。HZN_EXCHANGE_NODE_AUTH 将用作 -n 的缺省值。如果未附加节点的组织作为前缀，那么将自动附加 -o 值作为前缀。"
    },
    {
      "id": "When listing all of the nodes, show the entire resource of each node, instead of just the name.",
      "translation": "列示所有节点时，显示每个节点的完整资源，而不是仅显示名称。"
    },
    {
      "id": "Create the node resource in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中创建节点资源。"
    },
    {
      "id": "The Horizon Exchange node ID and token to be created. The node ID must be unique within the organization.",
      "translation": "要创建的 Horizon Exchange 节点标识和令牌。节点标识在组织中必须是唯一的。"
    },
    {
      "id": "Your email address. Only needs to be specified if: the user specified in the -u flag does not exist, and you specified the 'public' org. If these things are true we will create the user and include this value as the email attribute.",
      "translation": "电子邮件地址。仅在以下情况下需要指定：-u 标志中指定的用户不存在，并且已指定“public”组织。如果这些条件成立，我们将创建该用户，并包括此值作为电子邮件地址属性。"
    },
    {
      "id": "Your node architecture. If not specified, arch will leave blank.",
      "translation": "节点体系结构。未指定时，体系结构将保留为空白。"
    },
    {
      "id": "The name of your node",
      "translation": "节点的名称"
    },
    {
      "id": "The node to be created.",
      "translation": "要创建的节点。"
    },
    {
      "id": "The token the new node should have.",
      "translation": "新节点应使用的令牌。"
    },
    {
      "id": "Update an attribute of the node in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中更新节点的属性。"
    },
    {
      "id": "The node to be updated.",
      "translation": "要更新的节点。"
    },
    {
      "id": "The path to a json file containing the changed attribute to be updated in the Horizon Exchange. Specify -f- to read from stdin.",
      "translation": "要在 Horizon Exchange 中更新的更改后属性所在 JSON 文件的路径。指定 -f- 可从 stdin 读取。"
    },
    {
      "id": "Change the token of a node resource in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中更改节点资源的令牌。"
    },
    {
      "id": "The node to be changed.",
      "translation": "要更改的节点。"
    },
    {
      "id": "The new token for the node.",
      "translation": "节点的新令牌。"
    },
    {
      "id": "Check to see if the specified node and token are valid in the Horizon Exchange.",
      "translation": "核实所指定的节点和令牌在 Horizon Exchange 中是否有效。"
    },
    {
      "id": "The Horizon exchange node ID and token to be checked. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. Mutually exclusive with <node> and <token> arguments.",
      "translation": "要检查的 Horizon Exchange 节点标识和令牌。未指定时，将使用 HZN_EXCHANGE_NODE_AUTH 作为缺省值。与 <node> 和 <token> 自变量互斥。"
    },
    {
      "id": "The node id to be checked. Mutually exclusive with -n flag.",
      "translation": "要检查的节点标识。与 -n 标志互斥。"
    },
    {
      "id": "The token for the node. Mutually exclusive with -n flag.",
      "translation": "节点的令牌。与 -n 标志互斥。"
    },
    {
      "id": "Remove a node resource from the Horizon Exchange. Do NOT do this when an edge node is registered with this node id.",
      "translation": "从 Horizon Exchange 中移除节点资源。存在使用此节点标识注册的边缘节点时，不应执行移除。"
    },
    {
      "id": "The Horizon Exchange node ID and token to be used as credentials to query and modfy the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
      "translation": "要用作凭证的 Horizon Exchange 节点标识和令牌，用于查询和修改节点资源（如果未指定 -u 标志）。HZN_EXCHANGE_NODE_AUTH 将用作 -n 的缺省值。如果未附加节点的组织作为前缀，那么将自动附加 -o 值作为前缀。"
    },
    {
      "id": "The node to remove.",
      "translation": "要移除的节点。"
    },
    {
      "id": "Display the node policy from the Horizon Exchange.",
      "translation": "显示 Horizon Exchange 中的节点策略。"
    },
    {
      "id": "List policy for this node.",
      "translation": "列示此节点的策略。"
    },
    {
      "id": "Add or replace the node policy in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中添加或替换节点策略。"
    },
    {
      "id": "Add or replace policy for this node.",
      "translation": "添加或替换此节点的策略。"
    },
    {
      "id": "The path of a JSON file containing the metadata necessary to create/update the node policy in the Horizon exchange. Specify -f- to read from stdin.",
      "translation": "在 Horizon Exchange 中创建/更新节点策略所必需的元数据所在 JSON 文件的路径。指定 -f- 可从 stdin 读取。"
    },
    {
      "id": "Update an attribute of the policy for this node in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中更新此节点的策略属性。"
    },
    {
      "id": "Update the policy for this node.",
      "translation": "更新此节点的策略。"
    },
    {
      "id": "The path of a JSON file containing the attribute to be updated in the Horizon Exchange. Specify -f- to read from stdin.",
      "translation": "要在 Horizon Exchange 中更新的属性所在 JSON 文件的路径。指定 -f- 可从 stdin 读取。"
    },
    {
      "id": "Remove the node policy in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中移除节点策略。"
    },
    {
      "id": "Remove policy for this node.",
      "translation": "移除此节点的策略。"
    },
    {
      "id": "List the node errors currently surfaced to the exchange.",
      "translation": "列出当前已向 Exchange 浮现的节点错误。"
    },
    {
      "id": "List surfaced errors for this node.",
      "translation": "列出此节点的已浮现错误。"
    },
    {
      "id": "Show the full eventlog object of the errors currently surfaced to the exchange.",
      "translation": "显示当前已向 Exchange 浮现的错误的完整事件日志对象。"
    },
    {
      "id": "List and manage agbots in the Horizon Exchange",
      "translation": "列示和管理 Horizon Exchange 中的 agbot"
    },
    {
      "id": "Display the agbot resources from the Horizon Exchange.",
      "translation": "显示 Horizon Exchange 中的 agbot 资源。"
    },
    {
      "id": "List just this one agbot.",
      "translation": "仅列示这一 agbot。"
    },
    {
      "id": "When listing all of the agbots, show the entire resource of each agbots, instead of just the name.",
      "translation": "列示所有 agbot 时，显示每个 agbot 的完整资源，而不是仅显示名称。"
    },
    {
      "id": "Display the patterns that this agbot is serving.",
      "translation": "显示此 agbot 所提供的模式。"
    },
    {
      "id": "The agbot to list the patterns for.",
      "translation": "要列示模式的 agbot。"
    },
    {
      "id": "The organization of the 1 pattern to list.",
      "translation": "要列示的 1 个模式的组织。"
    },
    {
      "id": "The name of the 1 pattern to list.",
      "translation": "要列示的 1 个模式的名称。"
    },
    {
      "id": "The organization of the nodes that should be searched. Defaults to patternorg.",
      "translation": "应搜索的节点的组织。缺省值为 patternorg。"
    },
    {
      "id": "Add this pattern to the list of patterns this agbot is serving.",
      "translation": "将此模式添加到此 agbot 所提供的模式列表。"
    },
    {
      "id": "The agbot to add the pattern to.",
      "translation": "要向其添加模式的 agbot。"
    },
    {
      "id": "The organization of the pattern to add.",
      "translation": "要添加的模式的组织。"
    },
    {
      "id": "The name of the pattern to add.",
      "translation": "要添加的模式的名称。"
    },
    {
      "id": "Remove this pattern from the list of patterns this agbot is serving.",
      "translation": "从此 agbot 所提供的模式列表中移除此模式。"
    },
    {
      "id": "The agbot to remove the pattern from.",
      "translation": "要从中移除模式的 agbot。"
    },
    {
      "id": "The organization of the pattern to remove.",
      "translation": "要移除的模式的组织。"
    },
    {
      "id": "The name of the pattern to remove.",
      "translation": "要移除的模式的名称。"
    },
    {
      "id": "Display the business policies that this agbot is serving.",
      "translation": "显示此 agbot 所提供的业务策略。"
    },
    {
      "id": "The agbot to list serving business policies for.",
      "translation": "要列示所提供业务策略的 agbot。"
    },
    {
      "id": "Add this business policy to the list of policies this agbot is serving. Currently only support adding all the business polycies from an organization.",
      "translation": "将此业务策略添加到此 agbot 所提供的策略列表。目前只支持添加组织的所有业务策略。"
    },
    {
      "id": "The agbot to add the business policy to.",
      "translation": "要向其添加业务策略的 agbot。"
    },
    {
      "id": "The organization of the business policy to add.",
      "translation": "要添加的业务策略的组织。"
    },
    {
      "id": "Remove this business policy from the list of policies this agbot is serving. Currently only support removing all the business polycies from an organization.",
      "translation": "从此 agbot 所提供的业务策略列表中移除此策略。目前只支持移除组织的所有业务策略。"
    },
    {
      "id": "The agbot to remove the business policy from.",
      "translation": "要从中移除业务策略的 agbot。"
    },
    {
      "id": "The organization of the business policy to remove.",
      "translation": "要移除的业务策略的组织。"
    },
    {
      "id": "List and manage patterns in the Horizon Exchange",
      "translation": "列示和管理 Horizon Exchange 中的模式"
    },
    {
      "id": "Display the pattern resources from the Horizon Exchange.",
      "translation": "显示 Horizon Exchange 中的模式资源。"
    },
    {
      "id": "List just this one pattern. Use <org>/<pat> to specify a public pattern in another org, or <org>/ to list all of the public patterns in another org.",
      "translation": "仅列示这一模式。使用 <org>/<pat> 可指定另一组织中的一个公用模式，使用 <org>/ 可列示另一组织中的所有公用模式。"
    },
    {
      "id": "When listing all of the patterns, show the entire resource of each pattern, instead of just the name.",
      "translation": "列示所有模式时，显示每个模式的完整资源，而不是仅显示名称。"
    },
    {
      "id": "Sign and create/update the pattern resource in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中签署以及创建/更新模式资源。"
    },
    {
      "id": "The path of a JSON file containing the metadata necessary to create/update the pattern in the Horizon exchange. See /usr/horizon/samples/pattern.json. Specify -f- to read from stdin.",
      "translation": "在 Horizon Exchange 中创建/更新模式所必需的元数据所在 JSON 文件的路径。请参阅 /usr/horizon/samples/pattern.json。指定 -f- 可从 stdin 读取。"
    },
    {
      "id": "The path of a private key file to be used to sign the pattern. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
      "translation": "要用来对模式进行签名的专用密钥文件的路径。未指定时，将使用环境变量 HZN_PRIVATE_KEY_FILE。如果它们均未设置，那么缺省值为 ~/.hzn/keys/service.private.key。"
    },
    {
      "id": "The path of public key file (that corresponds to the private key) that should be stored with the pattern, to be used by the Horizon Agent to verify the signature. If both this and -k flags are not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If HZN_PUBLIC_KEY_FILE is not set, ~/.hzn/keys/service.public.pem is the default. If -k is specified and this flag is not specified, then no public key file will be stored with the pattern. The Horizon Agent needs to import the public key to verify the signature.",
      "translation": "应该随模式一起存储的公用密钥文件（对应于专用密钥）的路径，供 Horizon 代理程序用于验证签名。此标志和 -k 标志均未指定时，将使用环境变量 HZN_PUBLIC_KEY_FILE。未设置 HZN_PUBLIC_KEY_FILE 时，缺省值为 ~/.hzn/keys/service.public.pem。如果指定 -k 但未指定此标志，那么不会随模式一起存储任何公用密钥文件。Horizon 代理程序必须导入公用密钥才能验证签名。"
    },
    {
      "id": "The name to use for this pattern in the Horizon exchange. If not specified, will default to the base name of the file path specified in -f.",
      "translation": "在 Horizon Exchange 中用于此模式的名称。未指定时，缺省值为 -f 中指定的文件路径的基本名称。"
    },
    {
      "id": "Verify the signatures of a pattern resource in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中验证模式资源的签名。"
    },
    {
      "id": "The pattern to verify.",
      "translation": "要验证的模式。"
    },
    {
      "id": "The path of a pem public key file to be used to verify the pattern. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
      "translation": "要用于验证模式的 pem 公用密钥文件的路径。未指定时，将使用环境变量 HZN_PUBLIC_KEY_FILE。如果它们均未设置，那么缺省值为 ~/.hzn/keys/service.public.pem。"
    },
    {
      "id": "Update an attribute of the pattern in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中更新模式的属性。"
    },
    {
      "id": "The name of the pattern in the Horizon Exchange to publish.",
      "translation": "Horizon Exchange 中要发布的模式的名称。"
    },
    {
      "id": "The path to a json file containing the updated attribute of the pattern to be put in the Horizon Exchange. Specify -f- to read from stdin.",
      "translation": "要放入 Horizon Exchange 中的模式更新后属性所在 JSON 文件的路径。指定 -f- 可从 stdin 读取。"
    },
    {
      "id": "Remove a pattern resource from the Horizon Exchange.",
      "translation": "从 Horizon Exchange 中移除模式资源。"
    },
    {
      "id": "The pattern to remove.",
      "translation": "要移除的模式。"
    },
    {
      "id": "List the signing public keys/certs for this pattern resource in the Horizon Exchange.",
      "translation": "列示 Horizon Exchange 中此模式资源的签名公用密钥/证书。"
    },
    {
      "id": "The existing pattern to list the keys for.",
      "translation": "要列示键的现有模式。"
    },
    {
      "id": "The existing key name to see the contents of.",
      "translation": "要查看其内容的现有键名称。"
    },
    {
      "id": "Remove a signing public key/cert for this pattern resource in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中移除此模式资源的签名公用密钥/证书。"
    },
    {
      "id": "The existing pattern to remove the key from.",
      "translation": "要从中移除键的现有模式。"
    },
    {
      "id": "The existing key name to remove.",
      "translation": "要移除的现有键名称。"
    },
    {
      "id": "List and manage services in the Horizon Exchange",
      "translation": "列示和管理 Horizon Exchange 中的服务"
    },
    {
      "id": "Display the service resources from the Horizon Exchange.",
      "translation": "显示 Horizon Exchange 中的服务资源。"
    },
    {
      "id": "List just this one service. Use <org>/<svc> to specify a public service in another org, or <org>/ to list all of the public services in another org.",
      "translation": "仅列示这一服务。使用 <org>/<svc> 可指定另一组织中的一个公用服务，使用 <org>/ 可列示另一组织中的所有公用服务。"
    },
    {
      "id": "When listing all of the services, show the entire resource of each services, instead of just the name.",
      "translation": "列示所有服务时，显示每个服务的完整资源，而不是仅显示名称。"
    },
    {
      "id": "Sign and create/update the service resource in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中签署以及创建/更新服务资源。"
    },
    {
      "id": "The path of a JSON file containing the metadata necessary to create/update the service in the Horizon exchange. See /usr/horizon/samples/service.json. Specify -f- to read from stdin.",
      "translation": "在 Horizon Exchange 中创建/更新服务所必需的元数据所在 JSON 文件的路径。请参阅 /usr/horizon/samples/service.json。指定 -f- 可从 stdin 读取。"
    },
    {
      "id": "The path of a private key file to be used to sign the service. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
      "translation": "要用来对服务进行签名的专用密钥文件的路径。未指定时，将使用环境变量 HZN_PRIVATE_KEY_FILE。如果它们均未设置，那么缺省值为 ~/.hzn/keys/service.private.key。"
    },
    {
      "id": "The path of public key file (that corresponds to the private key) that should be stored with the service, to be used by the Horizon Agent to verify the signature. If both this and -k flags are not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If HZN_PUBLIC_KEY_FILE is not set, ~/.hzn/keys/service.public.pem is the default. If -k is specified and this flag is not specified, then no public key file will be stored with the service. The Horizon Agent needs to import the public key to verify the signature.",
      "translation": "应该随服务一起存储的公用密钥文件（对应于专用密钥）的路径，供 Horizon 代理程序用于验证签名。此标志和 -k 标志均未指定时，将使用环境变量 HZN_PUBLIC_KEY_FILE。未设置 HZN_PUBLIC_KEY_FILE 时，缺省值为 ~/.hzn/keys/service.public.pem。如果指定 -k 但未指定此标志，那么不会随服务一起存储任何公用密钥文件。Horizon 代理程序必须导入公用密钥才能验证签名。"
    },
    {
      "id": "The image paths in the deployment field have regular tags and should not be changed to sha256 digest values. The image will not get automatically uploaded to the repository. This should only be used during development when testing new versions often.",
      "translation": "部署字段中的映像路径包含正规标记，不应更改为 sha256 摘要值。不会自动将该映像上载到存储库。只有在需要频繁测试新版本的开发期间，才应使用此标志。"
    },
    {
      "id": "Use the image from the image repository. It will pull the image from the image repository and overwrite the local image if exists. This flag is mutually exclusive with -I.",
      "translation": "使用映像存储库中的映像。这将从映像存储库中拉取映像，并覆盖本地映像（如果存在）。此标志与 -I 互斥。"
    },
    {
      "id": "Docker registry domain and auth that should be stored with the service, to enable the Horizon edge node to access the service's docker images. This flag can be repeated, and each flag should be in the format: registry:user:token",
      "translation": "应该随服务一起存储的 Docker 注册表域和认证令牌，用于使 Horizon 边缘节点能够访问该服务的 Docker 映像。此标志可以重复指定，每个标志的格式都应该是 registry:user:token"
    },
    {
      "id": "Overwrite the existing version if the service exists in the exchange. It will skip the 'do you want to overwrite' prompt.",
      "translation": "覆盖现有版本（如果该服务存在于 Exchange 中）。这将跳过“您确定要覆盖吗”提示。"
    },
    {
      "id": "The path of the service policy JSON file to be used for the service to be published. This flag is optional",
      "translation": "要用于所发布服务的服务策略 JSON 文件的路径。此标志是可选的"
    },
    {
      "id": "Verify the signatures of a service resource in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中验证服务资源的签名。"
    },
    {
      "id": "The service to verify.",
      "translation": "要验证的服务。"
    },
    {
      "id": "The path of a pem public key file to be used to verify the service. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
      "translation": "要用于验证服务的 pem 公用密钥文件的路径。未指定时，将使用环境变量 HZN_PUBLIC_KEY_FILE。如果它们均未设置，那么缺省值为 ~/.hzn/keys/service.public.pem。"
    },
    {
      "id": "Remove a service resource from the Horizon Exchange.",
      "translation": "从 Horizon Exchange 中移除服务资源。"
    },
    {
      "id": "The service to remove.",
      "translation": "要移除的服务。"
    },
    {
      "id": "List the signing public keys/certs for this service resource in the Horizon Exchange.",
      "translation": "列示 Horizon Exchange 中此服务资源的签名公用密钥/证书。"
    },
    {
      "id": "The existing service to list the keys for.",
      "translation": "要列示键的现有服务。"
    },
    {
      "id": "Remove a signing public key/cert for this service resource in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中移除此服务资源的签名公用密钥/证书。"
    },
    {
      "id": "The existing service to remove the key from.",
      "translation": "要从中移除键的现有服务。"
    },
    {
      "id": "List the docker auth tokens for this service resource in the Horizon Exchange.",
      "translation": "列示 Horizon Exchange 中此服务资源的 Docker 认证令牌。"
    },
    {
      "id": "The existing service to list the docker auths for.",
      "translation": "要列示 Docker 认证令牌的现有服务。"
    },
    {
      "id": "The existing docker auth id to see the contents of.",
      "translation": "要查看其内容的现有 Docker 认证标识。"
    },
    {
      "id": "Remove a docker auth token for this service resource in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中移除此服务资源的 Docker 认证令牌。"
    },
    {
      "id": "The existing service to remove the docker auth from.",
      "translation": "要从中移除 Docker 认证令牌的现有服务。"
    },
    {
      "id": "The existing docker auth id to remove.",
      "translation": "要移除的现有 Docker 认证标识。"
    },
    {
      "id": "Display the service policy from the Horizon Exchange.",
      "translation": "显示 Horizon Exchange 中的服务策略。"
    },
    {
      "id": "The Horizon Exchange id and password of the user",
      "translation": "用户的 Horizon Exchange 标识和密码"
    },
    {
      "id": "List policy for this service.",
      "translation": "列示此服务的策略。"
    },
    {
      "id": "Display an empty service policy template that can be filled in.",
      "translation": "显示可以填写的空服务策略模板。"
    },
    {
      "id": "Add or replace the service policy in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中添加或替换服务策略。"
    },
    {
      "id": "The Horizon Exchange ID and password of the user",
      "translation": "用户的 Horizon Exchange 标识和密码"
    },
    {
      "id": "Add or replace policy for this service.",
      "translation": "添加或替换此服务的策略。"
    },
    {
      "id": "The path of a JSON file containing the metadata necessary to create/update the service policy in the Horizon Exchange. Specify -f- to read from stdin.",
      "translation": "在 Horizon Exchange 中创建/更新服务策略所必需的元数据所在 JSON 文件的路径。指定 -f- 可从 stdin 读取。"
    },
    {
      "id": "Remove the service policy in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中移除服务策略。"
    },
    {
      "id": "Remove policy for this service.",
      "translation": "移除此服务的策略。"
    },
    {
      "id": "List and manage business policies in the Horizon Exchange.",
      "translation": "列示和管理 Horizon Exchange 中的业务策略。"
    },
    {
      "id": "Display the business policies from the Horizon Exchange.",
      "translation": "显示 Horizon Exchange 中的业务策略。"
    },
    {
      "id": "The Horizon ID and password of the user.",
      "translation": "用户的 Horizon 标识和密码。"
    },
    {
      "id": "Display detailed output about the business policies.",
      "translation": "显示有关业务策略的详细输出。"
    },
    {
      "id": "List just this one policy. Use <org>/<policy> to specify a public policy in another org, or <org>/ to list all of the public policies in another org.",
      "translation": "仅列示这一策略。使用 <org>/<policy> 可指定另一组织中的一个公用策略，使用 <org>/ 可列示另一组织中的所有公用策略。"
    },
    {
      "id": "Display an empty business policy template that can be filled in.",
      "translation": "显示可以填写的空业务策略模板。"
    },
    {
      "id": "Add or replace a business policy in the Horizon Exchange. Use 'hzn exchange business new' for an empty business policy template.",
      "translation": "在 Horizon Exchange 中添加或替换业务策略。使用“hzn exchange business new”可以建立空的业务策略模板。"
    },
    {
      "id": "The name of the policy to add or overwrite.",
      "translation": "要添加或覆盖的策略的名称。"
    },
    {
      "id": "Update one attribute of an existing policy in the Horizon Exchange. The supported attributes are the top level attributes in the policy definition as shown by the command 'hzn exchange business new'.",
      "translation": "在 Horizon Exchange 中更新现有策略的一个属性。支持的属性是“hzn exchange business new”命令所示策略定义中的顶级属性。"
    },
    {
      "id": "The name of the policy to be updated in the Horizon Exchange.",
      "translation": "要在 Horizon Exchange 中更新的策略的名称。"
    },
    {
      "id": "The path to the json file containing the updated business policy attribute to be changed in the Horizon Exchange. Specify -f- to read from stdin.",
      "translation": "要在 Horizon Exchange 中更改的更新后业务策略属性所在 JSON 文件的路径。指定 -f- 可从 stdin 读取。"
    },
    {
      "id": "Remove the business policy in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中移除业务策略。"
    },
    {
      "id": "The name of the business policy to be removed.",
      "translation": "要移除的业务策略的名称。"
    },
    {
      "id": "List all public services/patterns in all orgs that have orgType: IBM.",
      "translation": "列示 orgType 为 IBM 的所有组织中的所有公用服务/模式。"
    },
    {
      "id": "Display all public services in all orgs that have orgType: IBM.",
      "translation": "显示 orgType 为 IBM 的所有组织中的所有公用服务。"
    },
    {
      "id": "Only display org (IBM) and service names.",
      "translation": "仅显示组织 (IBM) 和服务名称。"
    },
    {
      "id": "Display detailed output about public services in all orgs that have orgType: IBM.",
      "translation": "显示 orgType 为 IBM 的所有组织中公用服务的相关详细输出。"
    },
    {
      "id": "Display all public patterns in all orgs that have orgType: IBM.",
      "translation": "显示 orgType 为 IBM 的所有组织中的所有公用模式。"
    },
    {
      "id": "Only display org (IBM) and pattern names.",
      "translation": "仅显示组织 (IBM) 和模式名称。"
    },
    {
      "id": "Display detailed output about public patterns in all orgs that have orgType: IBM.",
      "translation": "显示 orgType 为 IBM 的所有组织中公用模式的相关详细输出。"
    },
    {
      "id": "Create an input file template for this pattern that can be used for the 'hzn register' command (once filled in). This examines the services that the specified pattern uses, and determines the node owner input that is required for them.",
      "translation": "为此模式创建输入文件模板，该模板填写后即可用于“hzn register”命令。这将检查指定的模式所使用的服务，并确定它们所需的节点所有者输入。"
    },
    {
      "id": "The Horizon exchange node ID and token (it must already exist).",
      "translation": "Horizon Exchange 节点标识和令牌（必须已存在）。"
    },
    {
      "id": "The JSON input template file name that should be created. This file will contain placeholders for you to fill in user input values.",
      "translation": "应该创建的 JSON 输入模板文件名。此文件包含占位符，供您填写用户输入值。"
    },
    {
      "id": "The Horizon exchange organization ID that the node will be registered in.",
      "translation": "要在其中注册节点的 Horizon Exchange 组织标识。"
    },
    {
      "id": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format.",
      "translation": "用于描述应该将哪些工作负载部署到此节点的 Horizon Exchange 模式。如果该模式来自不同于该节点的另一组织，请使用“other_org/pattern”格式。"
    },
    {
      "id": "The architecture to write the template file for. (Horizon ignores services in patterns whose architecture is different from the target system.) The architecture must be what is returned by 'hzn node list' on the target system.",
      "translation": "编写模板文件所针对的体系结构。（Horizon 会忽略模式中体系结构不同于目标系统的服务。）体系结构必须是目标系统上“hzn node list”所返回的体系结构。"
    },
    {
      "id": "Register this edge node with Horizon.",
      "translation": "向 Horizon 注册此边缘节点。"
    },
    {
      "id": "The Horizon exchange node ID and token. The node ID must be unique within the organization. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. If both -n and HZN_EXCHANGE_NODE_AUTH are not specified, the node ID will be created by Horizon from the machine serial number or fully qualified hostname. If the token is not specified, Horizon will create a random token. If node resource in the exchange identified by the ID and token does not yet exist, you must also specify the -u flag so it can be created.",
      "translation": "Horizon Exchange 节点标识和令牌。节点标识在组织中必须是唯一的。未指定时，将使用 HZN_EXCHANGE_NODE_AUTH 作为缺省值。如果 -n 和 HZN_EXCHANGE_NODE_AUTH 都未指定，那么节点标识将由 Horizon 根据机器序列号或标准主机名来创建。未指定令牌时，Horizon 将创建随机令牌。如果在 Exchange 中尚不存在该标识和令牌所指示的节点资源，那么您还必须指定 -u 标志以便创建该资源。"
    },
    {
      "id": "The name of the node. If not specified, it will be the same as the node id.",
      "translation": "节点的名称。未指定时，名称与节点标识相同。"
    },
    {
      "id": "User credentials to create the node resource in the Horizon exchange if it does not already exist. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default.",
      "translation": "用于在 Horizon Exchange 中创建节点资源的用户凭证（如果该资源尚不存在）。未指定时，将使用 HZN_EXCHANGE_USER_AUTH 作为缺省值。"
    },
    {
      "id": "Your email address. Only needs to be specified if: the node resource does not yet exist in the Horizon exchange, and the user specified in the -u flag does not exist, and you specified the 'public' org. If all of these things are true we will create the user and include this value as the email attribute.",
      "translation": "电子邮件地址。仅在以下情况下需要指定：该节点资源尚不存在于 Horizon Exchange 中，-u 标志中指定的用户不存在，并且已指定“public”组织。如果所有这些条件都成立，我们将创建该用户，并包括此值作为电子邮件地址属性。"
    },
    {
      "id": "A JSON file that sets or overrides variables needed by the node and services that are part of this pattern. See /usr/horizon/samples/node_reg_input.json and /usr/horizon/samples/more-examples.json. Specify -f- to read from stdin.",
      "translation": "指定一个 JSON 文件，用于设置或覆盖属于此模式的节点和服务所需的变量。请参阅 /usr/horizon/samples/node_reg_input.json 和 /usr/horizon/samples/more-examples.json。指定 -f- 可从 stdin 读取。"
    },
    {
      "id": "The Horizon exchange organization ID that the node should be registered in. The default is the HZN_ORG_ID environment variable. Mutually exclusive with <nodeorg> and <pattern> arguments.",
      "translation": "应该在其中注册节点的 Horizon Exchange 组织标识。缺省值为 HZN_ORG_ID 环境变量。与 <nodeorg> 和 <pattern> 自变量互斥。"
    },
    {
      "id": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with <nodeorg> and <pattern> arguments and --policy flag.",
      "translation": "用于描述应该将哪些工作负载部署到此节点的 Horizon Exchange 模式。如果该模式来自不同于该节点的另一组织，请使用“other_org/pattern”格式。与 <nodeorg> 和 <pattern> 自变量以及 --policy 标志互斥。"
    },
    {
      "id": "A JSON file that sets or overrides the node policy for this node that will be used for policy based agreement negotiation. Mutually exclusive with -p argument.",
      "translation": "指定一个 JSON 文件，用来设置或覆盖此节点的节点策略，该策略将用于基于策略的协议协商。与 -p 自变量互斥。"
    },
    {
      "id": "The Horizon exchange organization ID that the node should be registered in. Mutually exclusive with -o and -p.",
      "translation": "应该在其中注册节点的 Horizon Exchange 组织标识。与 -o 和 -p 互斥。"
    },
    {
      "id": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with -o, -p and --policy.",
      "translation": "用于描述应该将哪些工作负载部署到此节点的 Horizon Exchange 模式。如果该模式来自不同于该节点的另一组织，请使用“other_org/pattern”格式。与 -o、-p 和 --policy 互斥。"
    },
    {
      "id": "List and manage keys for signing and verifying services.",
      "translation": "列示和管理用于签署和验证服务的密钥。"
    },
    {
      "id": "List the signing keys that have been imported into this Horizon agent.",
      "translation": "列示已导入到 Horizon 代理程序中的签名密钥。"
    },
    {
      "id": "The name of a specific key to show.",
      "translation": "要显示的特定密钥的名称。"
    },
    {
      "id": "List the names of all signing keys, even the older public keys not wrapped in a certificate.",
      "translation": "列示所有签名密钥的名称，即使旧公用密钥未包装在证书中，也是如此。"
    },
    {
      "id": "Generate a signing key pair.",
      "translation": "生成签名密钥对。"
    },
    {
      "id": "x509 certificate Organization (O) field (preferably a company name or other organization's name).",
      "translation": "x509 证书组织 (O) 字段（最好设置为公司名称或其他组织的名称）。"
    },
    {
      "id": "x509 certificate Common Name (CN) field (preferably an email address issued by x509org).",
      "translation": "x509 证书通用名 (CN) 字段（最好设置为 x509org 所发出的电子邮件地址）。"
    },
    {
      "id": "The directory to put the key pair files in. Mutually exclusive with -k and -K. The file names will be randomly generated.",
      "translation": "要将密钥对放入其中的目录。与 -k 和 -K 互斥。文件名将随机生成。"
    },
    {
      "id": "The full path of the private key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
      "translation": "专用密钥文件的完整路径。与 -d 互斥。未指定时，将使用环境变量 HZN_PRIVATE_KEY_FILE。如果它们均未设置，那么缺省值为 ~/.hzn/keys/service.private.key。"
    },
    {
      "id": "The full path of the public key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
      "translation": "公用密钥文件的完整路径。与 -d 互斥。未指定时，将使用环境变量 HZN_PUBLIC_KEY_FILE。如果它们均未设置，那么缺省值为 ~/.hzn/keys/service.public.pem。"
    },
    {
      "id": "Overwrite the existing files. It will skip the 'do you want to overwrite' prompt.",
      "translation": "覆盖现有文件。这将跳过“您确定要覆盖吗”提示。"
    },
    {
      "id": "The length of the key to create.",
      "translation": "要创建的密钥的长度。"
    },
    {
      "id": "x509 certificate validity (Validity > Not After) expressed in days from the day of generation.",
      "translation": "x509 证书有效期（有效期 > 失效时间），以生成之日起的天数表示。"
    },
    {
      "id": "Automatically import the created public key into the local Horizon agent.",
      "translation": "将创建的公用密钥自动导入到本地 Horizon 代理程序中。"
    },
    {
      "id": "Imports a signing public key into the Horizon agent.",
      "translation": "将签名公用密钥导入到 Horizon 代理程序中。"
    },
    {
      "id": "The path of a pem public key file to be imported. The base name in the path is also used as the key name in the Horizon agent. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
      "translation": "要导入的 pem 公用密钥文件的路径。路径中的基本名称也用作 Horizon 代理程序中的密钥名称。未指定时，将使用环境变量 HZN_PUBLIC_KEY_FILE。如果它们均未设置，那么缺省值为 ~/.hzn/keys/service.public.pem。"
    },
    {
      "id": "Remove the specified signing key from this Horizon agent.",
      "translation": "从此 Horizon 代理程序中移除指定的签名密钥。"
    },
    {
      "id": "The name of a specific key to remove.",
      "translation": "要移除的特定密钥的名称。"
    },
    {
      "id": "List and manage general information about this Horizon edge node.",
      "translation": "列示和管理这个 Horizon 边缘节点的常规信息。"
    },
    {
      "id": "Display general information about this Horizon edge node.",
      "translation": "显示这个 Horizon 边缘节点的常规信息。"
    },
    {
      "id": "List and manage policy for this Horizon edge node.",
      "translation": "列示和管理这个 Horizon 边缘节点的策略。"
    },
    {
      "id": "Display this edge node's policy.",
      "translation": "显示此边缘节点的策略。"
    },
    {
      "id": "Display an empty policy template that can be filled in.",
      "translation": "显示可以填写的空策略模板。"
    },
    {
      "id": "Update the node's policy. The node's built-in properties will be automatically added if the input policy does not contain them.",
      "translation": "更新节点的策略。输入策略未包含节点的内置属性时，将会自动添加这些属性。"
    },
    {
      "id": "The JSON input file name containing the node policy.",
      "translation": "节点策略所在 JSON 输入文件的名称。"
    },
    {
      "id": "Add or update node policy properties or overwrite the node policy constraint expression.",
      "translation": "添加或更新节点策略属性，或者覆盖节点策略约束表达式。"
    },
    {
      "id": "The new constraints or properties in the format '{Constraintsconstraint_list}' or '{Propertiesproperty_list}'.",
      "translation": "新的约束或属性，其格式为“{Constraintsconstraint_list}”或“{Propertiesproperty_list}”。"
    },
    {
      "id": "Remove the node's policy.",
      "translation": "移除节点的策略。"
    },
    {
      "id": "List or manage the active or archived agreements this edge node has made with a Horizon agreement bot.",
      "translation": "列示或管理此边缘节点与 Horizon 协议 bot 议定的活动协议或存档协议。"
    },
    {
      "id": "List the active or archived agreements this edge node has made with a Horizon agreement bot.",
      "translation": "列示此边缘节点与 Horizon 协议 bot 议定的活动协议或存档协议。"
    },
    {
      "id": "Show the details of this active or archived agreement.",
      "translation": "显示此活动协议或存档协议的详细信息。"
    },
    {
      "id": "List archived agreements instead of the active agreements.",
      "translation": "列示存档协议，而不列示活动协议。"
    },
    {
      "id": "Cancel 1 or all of the active agreements this edge node has made with a Horizon agreement bot. Usually an agbot will immediately negotiated a new agreement. If you want to cancel all agreements and not have this edge accept new agreements, run 'hzn unregister'.",
      "translation": "取消此边缘节点与 Horizon 协议 bot 议定的 1 个或全部活动协议。通常，agbot 将立即协商新协议。如果要取消所有协议，而且不希望此边缘节点接受新协议，请运行“hzn unregister”。"
    },
    {
      "id": "Cancel all of the current agreements.",
      "translation": "取消所有的当前协议。"
    },
    {
      "id": "The active agreement to cancel.",
      "translation": "要取消的活动协议。"
    },
    {
      "id": "List or manage the metering (payment) information for the active or archived agreements.",
      "translation": "列示或管理活动协议或存档协议的测量（付款）信息。"
    },
    {
      "id": "List the metering (payment) information for the active or archived agreements.",
      "translation": "列示活动协议或存档协议的测量（付款）信息。"
    },
    {
      "id": "List archived agreement metering information instead of metering for the active agreements.",
      "translation": "列示存档协议测量信息，而不列示活动协议的测量信息。"
    },
    {
      "id": "List or manage the global attributes that are currently registered on this Horizon edge node.",
      "translation": "列示或管理当前在此 Horizon 边缘节点上注册的全局属性。"
    },
    {
      "id": "List the global attributes that are currently registered on this Horizon edge node.",
      "translation": "列示当前在此 Horizon 边缘节点上注册的全局属性。"
    },
    {
      "id": "List or manage the service user inputs that are currently registered on this Horizon edge node.",
      "translation": "列示或管理当前在此 Horizon 边缘节点上注册的服务用户输入。"
    },
    {
      "id": "List the service user inputs currently registered on this Horizon edge node.",
      "translation": "列示当前在此 Horizon 边缘节点上注册的服务用户输入。"
    },
    {
      "id": "Display an empty userinput template.",
      "translation": "显示空的用户输入模板。"
    },
    {
      "id": "Add a new user input object or overwrite the current user input object for this Horizon edge node.",
      "translation": "为此 Horizon 边缘节点添加新的用户输入对象，或覆盖当前的用户输入对象。"
    },
    {
      "id": "The file path to the json file with the user input object. Specify -f- to read from stdin.",
      "translation": "用户输入对象所在 JSON 文件的文件路径。指定 -f- 可从 stdin 读取。"
    },
    {
      "id": "Update an existing user input object for this Horizon edge node.",
      "translation": "更新此 Horizon 边缘节点的现有用户输入对象。"
    },
    {
      "id": "The file path to the json file with the updated user input object. Specify -f- to read from stdin.",
      "translation": "更新后的用户输入对象所在 JSON 文件的文件路径。指定 -f- 可从 stdin 读取。"
    },
    {
      "id": "Remove the user inputs that are currently registered on this Horizon edge node.",
      "translation": "移除当前在此 Horizon 边缘节点上注册的用户输入。"
    },
    {
      "id": "Skip the 'Are you sure?' prompt.",
      "translation": "跳过“是否确定？”提示。"
    },
    {
      "id": "List or manage the services that are currently registered on this Horizon edge node.",
      "translation": "列示或管理当前在此 Horizon 边缘节点上注册的服务。"
    },
    {
      "id": "List the services variable configuration that has been done on this Horizon edge node.",
      "translation": "列示在此 Horizon 边缘节点上完成的服务变量配置。"
    },
    {
      "id": "List the services that are currently registered on this Horizon edge node.",
      "translation": "列示当前在此 Horizon 边缘节点上注册的服务。"
    },
    {
      "id": "List or manage the configuration state for the services that are currently registered on this Horizon edge node.",
      "translation": "列示或管理当前在此 Horizon 边缘节点上注册的服务的配置状态。"
    },
    {
      "id": "List the configuration state for the services that are currently registered on this Horizon edge node.",
      "translation": "列示当前在此 Horizon 边缘节点上注册的服务的配置状态。"
    },
    {
      "id": "Change the configuration state to 'suspend' for a service.",
      "translation": "将服务的配置状态更改为“暂挂”。"
    },
    {
      "id": "Change the configuration state to 'active' for a service.",
      "translation": "将服务的配置状态更改为“活动”。"
    },
    {
      "id": "Suspend all registerd services.",
      "translation": "暂挂所有已注册的服务。"
    },
    {
      "id": "The organization of the service that should be suspended.",
      "translation": "应该暂挂的服务的组织。"
    },
    {
      "id": "The name of the service that should be suspended.",
      "translation": "应该暂挂的服务的名称。"
    },
    {
      "id": "Resume all registerd services.",
      "translation": "恢复所有已注册的服务。"
    },
    {
      "id": "The organization of the service that should be resumed.",
      "translation": "应该恢复的服务的组织。"
    },
    {
      "id": "The name of the service that should be resumed.",
      "translation": "应该恢复的服务的名称。"
    },
    {
      "id": "Unregister and reset this Horizon edge node so that it is ready to be registered again. Warning: this will stop all the Horizon services running on this edge node, and restart the Horizon agent.",
      "translation": "注销并重置此 Horizon 边缘节点，以使其可以再次注册。警告：这将停止所有正在此边缘节点上运行的 Horizon 服务，并重新启动 Horizon 代理程序。"
    },
    {
      "id": "Also remove this node resource from the Horizon exchange (because you no longer want to use this node with Horizon).",
      "translation": "此外，还会从 Horizon Exchange 中移除此节点的资源（因为不再需要将此节点与 Horizon 配合使用）。"
    },
    {
      "id": "Also remove all the previous registration information. Use it only after the 'hzn unregister' command failed. Please capture the logs by running 'hzn eventlog list -a -l' command before using this flag.",
      "translation": "同时移除所有的先前注册信息。只有在“hzn unregister”命令失败后，才应使用此标志。在使用此标志之前，请通过运行“hzn eventlog list -a -l”命令捕获日志。"
    },
    {
      "id": "The number of minutes to wait for unregistration to complete. The default is zero which will wait forever.",
      "translation": "等待注销完成的分钟数。缺省值为零，这表示永久等待。"
    },
    {
      "id": "Display the current horizon internal status for the node.",
      "translation": "显示节点的当前 Horizon 内部状态。"
    },
    {
      "id": "Show detailed status",
      "translation": "显示详细状态"
    },
    {
      "id": "List the event logs for the current or all registrations.",
      "translation": "列示当前注册或所有注册的事件日志。"
    },
    {
      "id": "List all the event logs including the previous registrations.",
      "translation": "列示所有事件日志，包括先前的注册。"
    },
    {
      "id": "List event logs with details.",
      "translation": "列示含详细信息的事件日志。"
    },
    {
      "id": "Selection string. This flag can be repeated which means 'AND'. Each flag should be in the format of attribute=value, attribute~value, \"attribute>value\" or \"attribute<value\", where '~' means contains. The common attribute names are timestamp, severity, message, event_code, source_type, agreement_id, service_url etc. Use the '-l' flag to see all the attribute names.",
      "translation": "选定项字符串。此标志可以重复指定，这表示“AND”。每个标志的格式都应该是 attribute=value、attribute~value、\"attribute>value\" 或 \"attribute<value\"，其中“~”表示包含。公共属性名称包括 timestamp、severity、message、event_code、source_type、agreement_id、service_url 等等。使用“-l”标志可查看所有属性名称。"
    },
    {
      "id": "List all the active errors that will be shared with the exchange if the node is online.",
      "translation": "列出在节点联机时将与 Exchange 进行共享的所有活动错误。"
    },
    {
      "id": "List the full event logs of the surface errors.",
      "translation": "列出浮现错误的完整事件日志。"
    },
    {
      "id": "Development tools for creation of services.",
      "translation": "用于创建服务的开发工具。"
    },
    {
      "id": "Directory containing Horizon project metadata. If omitted, a subdirectory called 'horizon' under current directory will be used.",
      "translation": "Horizon 项目元数据所在的目录。省略此标志时，将使用当前目录下名为“horizon”的子目录。"
    },
    {
      "id": "For working with a service project.",
      "translation": "用于处理服务项目。"
    },
    {
      "id": "Create a new service project.",
      "translation": "创建新的服务项目。"
    },
    {
      "id": "The Org id that the service is defined within. If this flag is omitted, the HZN_ORG_ID environment variable is used.",
      "translation": "在其中定义服务的组织标识。省略此标志时，将使用 HZN_ORG_ID 环境变量。"
    },
    {
      "id": "The name of the service. If this flag and the -i flag are omitted, only the skeletal horizon metadata files will be generated.",
      "translation": "服务的名称。省略此标志和 -i 标志时，将仅生成 skeletal Horizon 元数据文件。"
    },
    {
      "id": "The version of the service. If this flag is omitted, '0.0.1' is used.",
      "translation": "服务的版本。省略此标志时，将使用“0.0.1”。"
    },
    {
      "id": "The docker container image base name without the version tag for the service. This command will add arch and version to the base name to form the final image name. The format is 'basename_arch:serviceversion'. This flag can be repeated to specify multiple images when '--noImageGen' flag is specified.",
      "translation": "不含服务版本标记的 Docker 容器映像基本名称。此命令会将体系结构和版本添加到基本名称中，以构造最终的映像名称。格式为“basename_arch:serviceversion”。在指定有“--noImageGen”标志的情况下，此标志可以重复指定，以指定多个映像。"
    },
    {
      "id": "Indicates that the image is built somewhere else. No image sample code will be created by this command. If this flag is not specified, files for generating a simple service image will be created under current directory.",
      "translation": "指示映像要在其他位置进行构建。此命令不会创建任何映像样本代码。未指定此标志时，将在当前目录下创建用于生成简式服务映像的文件。"
    },
    {
      "id": "Indicates no pattern definition file will be created.",
      "translation": "指示不创建模式定义文件。"
    },
    {
      "id": "Indicate no policy file will be created.",
      "translation": "指示不创建策略文件。"
    },
    {
      "id": "Indicates the type of deployment that will be used, e.g. native (the default), or helm.",
      "translation": "指示所要使用的部署类型，例如 native（缺省值）或 Helm。"
    },
    {
      "id": "Run a service in a mocked Horizon Agent environment.",
      "translation": "在模拟 Horizon 代理程序环境中运行服务。"
    },
    {
      "id": "File containing user input values for running a test. If omitted, the userinput file for the project will be used.",
      "translation": "用于运行测试的用户输入值所在的文件。如果省略此项，那么将使用项目的用户输入文件。"
    },
    {
      "id": "File to be made available through the sync service APIs. This flag can be repeated to populate multiple files.",
      "translation": "要通过同步服务 API 提供的文件。此标志可以重复指定，以填充多个文件。"
    },
    {
      "id": "The type of file to be made available through the sync service APIs. All config files are presumed to be of the same type. This flag is required if any configFiles are specified.",
      "translation": "要通过同步服务 API 提供的文件类型。假定所有配置文件属同一类型。如果指定了任何配置文件，那么此标志为必需。"
    },
    {
      "id": "Do not bring up file sync service (FSS) containers. They are brought up by default.",
      "translation": "请勿启动文件同步服务 (FSS) 容器。这些容器会在缺省情况下启动。"
    },
    {
      "id": "Horizon Exchange user credentials to query exchange resources. Specify it when you want to automatically fetch the missing dependent services from the exchange. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
      "translation": "用于查询 Exchange 资源的 Horizon Exchange 用户凭证。如果要从 Exchange 自动访存缺失的相依服务，请指定此凭证。缺省值为 HZN_EXCHANGE_USER_AUTH 环境变量。如果未附加用户的组织作为前缀，那么将自动附加 HZN_ORG_ID 环境变量的值作为前缀。"
    },
    {
      "id": "Stop a service that is running in a mocked Horizon Agent environment.",
      "translation": "停止正在模拟 Horizon 代理程序环境中运行的服务。"
    },
    {
      "id": "Validate the project for completeness and schema compliance.",
      "translation": "验证项目的完整性和模式一致性。"
    },
    {
      "id": "File containing user input values for verification of a project. If omitted, the userinput file for the project will be used.",
      "translation": "用于验证项目的用户输入值所在的文件。如果省略此项，那么将使用项目的用户输入文件。"
    },
    {
      "id": "For working with project dependencies.",
      "translation": "用于处理项目依赖关系。"
    },
    {
      "id": "The URL of the service dependency in the exchange. Mutually exclusive with -p and --url.",
      "translation": "Exchange 中服务依赖关系的 URL。与 -p 和 --url 互斥。"
    },
    {
      "id": "The URL of the service dependency in the exchange. Mutually exclusive with -p and --specRef.",
      "translation": "Exchange 中服务依赖关系的 URL。与 -p 和 --specRef 互斥。"
    },
    {
      "id": "The Org of the service dependency in the exchange. Mutually exclusive with -p.",
      "translation": "Exchange 中服务依赖关系的组织。与 -p 互斥。"
    },
    {
      "id": "(optional) The Version of the service dependency in the exchange. Mutually exclusive with -p.",
      "translation": "（可选）Exchange 中服务依赖关系的版本。与 -p 互斥。"
    },
    {
      "id": "(optional) The hardware Architecture of the service dependency in the exchange. Mutually exclusive with -p.",
      "translation": "（可选）Exchange 中服务依赖关系的硬件体系结构。与 -p 互斥。"
    },
    {
      "id": "Retrieving Horizon metadata for a new dependency.",
      "translation": "正在检索新依赖关系的 Horizon 元数据。"
    },
    {
      "id": "Horizon project containing the definition of a dependency. Mutually exclusive with -s -o --ver -a and --url.",
      "translation": "依赖关系定义所在的 Horizon 项目。与 -s、-o、--ver、-a 和 --url 互斥。"
    },
    {
      "id": "Horizon Exchange user credentials to query exchange resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
      "translation": "用于查询 Exchange 资源的 Horizon Exchange 用户凭证。缺省值为 HZN_EXCHANGE_USER_AUTH 环境变量。如果未附加用户的组织作为前缀，那么将自动附加 HZN_ORG_ID 环境变量的值作为前缀。"
    },
    {
      "id": "File containing user input values for configuring the new dependency. If omitted, the userinput file in the dependency project will be used.",
      "translation": "用于配置新依赖关系的用户输入值所在的文件。如果省略此项，那么将使用依赖项目中的用户输入文件。"
    },
    {
      "id": "List all dependencies.",
      "translation": "列示所有依赖关系。"
    },
    {
      "id": "Remove a project dependency.",
      "translation": "移除项目依赖关系。"
    },
    {
      "id": "List and manage Horizon agreement bot resources.",
      "translation": "列示和管理 Horizon 协议 bot 资源。"
    },
    {
      "id": "Display general information about this Horizon agbot node.",
      "translation": "显示这个 Horizon agbot 节点的常规信息。"
    },
    {
      "id": "List or manage the active or archived agreements this Horizon agreement bot has with edge nodes.",
      "translation": "列示或管理这个 Horizon 协议 bot 与边缘节点议定的活动协议或存档协议。"
    },
    {
      "id": "List the active or archived agreements this Horizon agreement bot has with edge nodes.",
      "translation": "列示这个 Horizon 协议 bot 与边缘节点议定的活动协议或存档协议。"
    },
    {
      "id": "List just this one agreement.",
      "translation": "仅列示这一协议。"
    },
    {
      "id": "Cancel 1 or all of the active agreements this Horizon agreement bot has with edge nodes. Usually an agbot will immediately negotiated a new agreement.",
      "translation": "取消这个 Horizon 协议 bot 与边缘节点议定的 1 个或全部活动协议。通常，agbot 将立即协商新协议。"
    },
    {
      "id": "List the policies this Horizon agreement bot hosts.",
      "translation": "列示此 Horizon 协议 bot 所托管的策略。"
    },
    {
      "id": "List policies this Horizon agreement bot hosts.",
      "translation": "列示此 Horizon 协议 bot 所托管的策略。"
    },
    {
      "id": "The organization the policy belongs to.",
      "translation": "策略所属的组织。"
    },
    {
      "id": "The policy name.",
      "translation": "策略名称。"
    },
    {
      "id": "Display the current horizon internal status for the Horizon agreement bot.",
      "translation": "显示 Horizon 协议 bot 的当前 Horizon 内部状态。"
    },
    {
      "id": "Utility commands.",
      "translation": "实用程序命令。"
    },
    {
      "id": "Sign the text in stdin. The signature is sent to stdout.",
      "translation": "对 stdin 中的文本进行签名。该签名将发送到 stdout。"
    },
    {
      "id": "The path of a private key file to be used to sign the stdin.",
      "translation": "要用来对 stdin 进行签名的专用密钥文件的路径。"
    },
    {
      "id": "Verify that the signature specified via -s is a valid signature for the text in stdin.",
      "translation": "请确认通过 -s 指定的签名是 stdin 中的文本的有效签名。"
    },
    {
      "id": "The path of public key file (that corresponds to the private key that was used to sign) to verify the signature of stdin.",
      "translation": "用来验证 stdin 签名的公用密钥文件（对应于用来进行签名的专用密钥）的路径。"
    },
    {
      "id": "The supposed signature of stdin.",
      "translation": "假定的 stdin 签名。"
    },
    {
      "id": "Convert the configuration file from JSON format to a shell script.",
      "translation": "将配置文件从 JSON 格式转换为 shell 脚本。"
    },
    {
      "id": "The path of a configuration file to be converted.",
      "translation": "要转换的配置文件的路径。"
    },
    {
      "id": "List and manage Horizon Model Management Service resources.",
      "translation": "列示和管理 Horizon 模型管理服务资源。"
    },
    {
      "id": "The Horizon organization ID. If not specified, HZN_ORG_ID will be used as a default.",
      "translation": "Horizon 组织标识。未指定时，将使用 HZN_ORG_ID 作为缺省值。"
    },
    {
      "id": "Horizon user credentials to query and create Model Management Service resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
      "translation": "用于查询和创建模型管理服务资源的 Horizon 用户凭证。未指定时，将使用 HZN_EXCHANGE_USER_AUTH 作为缺省值。如果未附加用户的组织作为前缀，那么将自动附加 -o 值作为前缀。"
    },
    {
      "id": "Display the status of the Horizon Model Management Service.",
      "translation": "显示 Horizon 模型管理服务的状态。"
    },
    {
      "id": "List and manage objects in the Horizon Model Management Service.",
      "translation": "列示和管理 Horizon 模型管理服务中的对象。"
    },
    {
      "id": "List objects in the Horizon Model Management Service.",
      "translation": "列示 Horizon 模型管理服务中的对象。"
    },
    {
      "id": "The type of the object to list.",
      "translation": "要列示的对象的类型。"
    },
    {
      "id": "The id of the object to list. This flag is optional. Omit this flag to list all objects of a given object type.",
      "translation": "要列示的对象的标识。此标志是可选的。省略此标志即可列示给定对象类型的所有对象。"
    },
    {
      "id": "Provides additional detail about the deployment of the object on edge nodes. This flag is only used when --id is specified.",
      "translation": "提供有关边缘节点上对象部署的其他详细信息。只有在指定 --id 的情况下，才使用此标志。"
    },
    {
      "id": "Display an empty object metadata template that can be filled in and passed as the -m option on the 'hzn mms object publish' command.",
      "translation": "显示一个空的对象元数据模板，该模板可以进行填写，并作为“hzn mms object publish”命令上的 -m 选项来传递。"
    },
    {
      "id": "Publish an object in the Horizon Model Management Service, making it available for services deployed on nodes.",
      "translation": "在 Horizon 模型管理服务中发布对象，使其可供部署在节点上的服务使用。"
    },
    {
      "id": "The type of the object to publish. This flag must be used with -i. It is mutually exclusive with -m",
      "translation": "要发布的对象的类型。此标志必须与 -i 配合使用。它与 -m 互斥"
    },
    {
      "id": "The id of the object to publish. This flag must be used with -t. It is mutually exclusive with -m",
      "translation": "要发布的对象的标识。此标志必须与 -t 配合使用。它与 -m 互斥"
    },
    {
      "id": "If you want the object to be deployed on nodes using a given pattern, specify it using this flag. This flag is optional and can only be used with --type and --id. It is mutually exclusive with -m",
      "translation": "如果要使用给定的模式将该对象部署在节点上，请使用此标志来指定该模式。此标志是可选的，并且只能与 --type 和 --id 配合使用。它与 -m 互斥"
    },
    {
      "id": "The definition of the object to publish. A blank template can be obtained from the 'hzn mss object new' command.",
      "translation": "要发布的对象的定义。可以使用“hzn mss object new”命令来获取空白模板。"
    },
    {
      "id": "The object (in the form of a file) to publish. This flag is optional so that you can update only the object's definition.",
      "translation": "要发布的对象（文件形式）。此标志是可选项，使您能够只更新对象的定义。"
    },
    {
      "id": "The type of the object to delete.",
      "translation": "要删除的对象的类型。"
    },
    {
      "id": "The id of the object to delete.",
      "translation": "要删除的对象的标识。"
    },
    {
      "id": "organization ID must be specified with either the -o flag or HZN_ORG_ID",
      "translation": "必须使用 -o 标志或 HZN_ORG_ID 来指定组织标识"
    },
    {
      "id": "exchange user authentication must be specified with either the -u flag or HZN_EXCHANGE_USER_AUTH",
      "translation": "必须使用 -u 标志或 HZN_EXCHANGE_USER_AUTH 来指定 Exchange 用户认证"
    },
    {
      "id": "Are you sure you want to unregister this Horizon node?",
      "translation": "确定要注销这个 Horizon 节点吗？"
    },
    {
      "id": "Horizon node delete call successful with return code: {Output}",
      "translation": "Horizon 节点删除调用成功，返回码为 {Output}"
    },
    {
      "id": "Timeout in {TotalWait} seconds ...",
      "translation": "将在 {TotalWait} 秒后超时..."
    },
    {
      "id": "Waiting for Horizon node unregister to complete: {UpdateStatus}",
      "translation": "正在等待 Horizon 节点注销完成：{UpdateStatus}"
    },
    {
      "id": "No Timeout specified ...",
      "translation": "未指定超时..."
    },
    {
      "id": "Stopping horizon...",
      "translation": "正在停止 Horizon..."
    },
    {
      "id": "Node configuration state: {State}",
      "translation": "节点配置状态：{State}"
    },
    {
      "id": "Timeout waiting for node change to 'unconfigured' state.",
      "translation": "等待节点切换到“已取消配置”状态时发生超时。"
    },
    {
      "id": "Error deleting container {Names0}. {Err}",
      "translation": "删除容器 {Names0} 出错。{Err}"
    },
    {
      "id": "Removed service container: {Names0}",
      "translation": "已移除服务容器：{Names0}"
    },
    {
      "id": "Error pruning docker networks. {Err}",
      "translation": "修剪 Docker 网络出错。{Err}"
    },
    {
      "id": "Property must include a name and a value: {Property}",
      "translation": "属性必须包括名称和值：{Property}"
    },
    {
      "id": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of string.",
      "translation": "属性 {Name} 的属性类型 {DeclaredType} 无效。允许的属性类型包括：版本、字符串、整型、布尔型、浮点型和字符串列表。"
    },
    {
      "id": "Property value is of type {ActualType}, expected type {DeclaredType}",
      "translation": "属性值的类型为 {ActualType}，但期望的类型为 {DeclaredType}"
    },
    {
      "id": "Value {Value} of property {Name} is not an integer type",
      "translation": "属性 {Name} 的值 {Value} 不是整数类型"
    },
    {
      "id": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
      "translation": "属性 {Name} 的值 {Value} 不是有效的字符串。请定义类型，或将值更改为字符串。"
    },
    {
      "id": "Property {Name} with value {Value} is not a valid verion string",
      "translation": "值为 {Value} 的属性 {Name} 不是有效的版本字符串"
    },
    {
      "id": "Property {Name} has invalid value type {ActualType}",
      "translation": "属性 {Name} 的值类型 {ActualType} 无效"
    },
    {
      "id": "{Image} parsed into: domain={Domain}, path={Path}, tag={Tag}",
      "translation": "{Image} 已解析为：域 = {Domain}，路径 = {Path}，标记 = {Tag}"
    },
    {
      "id": "Warning: could not parse image path '{Image}'. Not pushing it to a docker registry, just including it in the 'deployment' field as-is.",
      "translation": "警告：未能解析映像路径“{Image}”。不会将其推送到 Docker 注册表，而只是将其按原样包括在“deployment”字段中。"
    },
    {
      "id": "Using '{NewImage}' in 'deployment' field instead of '{Image}'",
      "translation": "在“deployment”字段中，正在使用“{NewImage}”代替“{Image}”"
    },
    {
      "id": "each service defined under 'deployment.services' must be a json object (with strings as the keys)",
      "translation": "在“deployment.services”下定义的每个服务都必须是 JSON 对象（以字符串作为键）"
    },
    {
      "id": "service '{SvcName}' defined under 'deployment.services' does not have mandatory 'image' field",
      "translation": "在“deployment.services”下定义的服务“{SvcName}”没有必需的“image”字段"
    },
    {
      "id": "service '{SvcName}' defined under 'deployment.services' has unrecognized field '{K}'. See https://github.com/open-horizon/anax/blob/master/doc/deployment_string.md",
      "translation": "在“deployment.services”下定义的服务“{SvcName}”有一个无法识别的字段“{K}”。请参阅 https://github.com/open-horizon/anax/blob/master/doc/deployment_string.md"
    },
    {
      "id": "the 'deployment' field must contain the 'services' field, whose value must be a json object (with strings as the keys)",
      "translation": "“deployment”字段必须包含“services”字段，该字段的值必须是 JSON 对象（以字符串作为键）"
    },
    {
      "id": "the 'deployment' field must contain either the native Horizon deployment config or the Helm deployment config, whose value must be a json object (with strings as the keys)",
      "translation": "“deployment”字段必须包含本机 Horizon 部署配置或 Helm 部署配置，该配置的值必须是 JSON 对象（以字符串作为键）"
    },
    {
      "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start file sync service, {Sserr}",
      "translation": "“{SERVICECOMMAND} {SERVICESTARTCOMMAND}”无法启动文件同步服务，{Sserr}"
    },
    {
      "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to get service dependencies, {Derr}",
      "translation": "“{SERVICECOMMAND} {SERVICESTARTCOMMAND}”无法获取服务依赖关系，{Derr}"
    },
    {
      "id": "Starting dependencies.",
      "translation": "正在启动依赖关系。"
    },
    {
      "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start service dependencies, {Perr}",
      "translation": "“{SERVICECOMMAND} {SERVICESTARTCOMMAND}”无法启动服务依赖关系，{Perr}"
    },
    {
      "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to generate test agreementId, {Aerr}",
      "translation": "“{SERVICECOMMAND} {SERVICESTARTCOMMAND}”无法生成测试协议标识，{Aerr}"
    },
    {
      "id": "'{SERVICECOMMAND} {SERVICESTOPCOMMAND}' unable to stop service dependencies, {Err}",
      "translation": "“{SERVICECOMMAND} {SERVICESTOPCOMMAND}”无法停止服务依赖关系，{Err}"
    },
    {
      "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to stop file sync service, {Sserr}",
      "translation": "“{SERVICECOMMAND} {SERVICESTARTCOMMAND}”无法停止文件同步服务，{Sserr}"
    },
    {
      "id": "Stopped service.",
      "translation": "已停止服务。"
    },
    {
      "id": "must specify exchange credentials to access the model management service.",
      "translation": "必须指定 Exchange 凭证，才能访问模型管理服务。"
    },
    {
      "id": "must specify object ID when requesting object details.",
      "translation": "请求对象详细信息时，必须指定对象标识。"
    },
    {
      "id": "no objects type '{ObjType}' found in org {Org}",
      "translation": "在组织 {Org} 中找不到对象类型“{ObjType}”"
    },
    {
      "id": "object '{ObjId}' of type '{ObjType}' not found in org {Org}",
      "translation": "在组织 {Org} 中找不到类型为“{ObjType}”的对象“{ObjId}”"
    },
    {
      "id": "destination detail for object '{ObjId}' of type '{ObjType}' not found in org {Org}",
      "translation": "在组织 {Org} 中找不到类型为“{ObjType}”的对象“{ObjId}”的目标详细信息"
    },
    {
      "id": "Object status: {Stringresp}",
      "translation": "对象状态：{Stringresp}"
    },
    {
      "id": "Required: A unique identifier of the object.",
      "translation": "必需：对象的唯一标识。"
    },
    {
      "id": "Required: The type of the object.",
      "translation": "必需：对象的类型。"
    },
    {
      "id": "Required: The organization ID of the object (an object belongs to exactly one organization).",
      "translation": "必需：对象的组织标识（一个对象正好属于一个组织）。"
    },
    {
      "id": "The node id (without org prefix) where the object should be placed.",
      "translation": "对象所在节点的标识（不含组织前缀）。"
    },
    {
      "id": "If omitted the object is sent to all nodes the same destinationType.",
      "translation": "如果省略此项，那么该对象将发送到具有相同 destinationType 的所有节点。"
    },
    {
      "id": "Delete this field when you are using destinationPolicy.",
      "translation": "使用 destinationPolicy 时删除此字段。"
    },
    {
      "id": "The pattern in use by nodes that should receive this object.",
      "translation": "应接收此对象的节点所使用的模式。"
    },
    {
      "id": "If omitted (and if destinationsList is omitted too) the object is broadcast to all known nodes.",
      "translation": "如果省略此项（并且同时省略 destinationsList），那么该对象将广播到所有已知节点。"
    },
    {
      "id": "Delete this field when you are using policy.",
      "translation": "使用策略时删除此字段。"
    },
    {
      "id": "The list of destinations as an array of pattern:nodeId pairs that should receive this object.",
      "translation": "应接收此对象的目标列表，以“模式:节点标识”对的数组形式指定。"
    },
    {
      "id": "If provided, destinationType and destinationID must be omitted.",
      "translation": "如果提供此项，那么必须省略 destinationType 和 destinationID。"
    },
    {
      "id": "The policy specification that should be used to distribute this object.",
      "translation": "应该用来分发此对象的策略规范。"
    },
    {
      "id": "Delete these fields if the target node is using a pattern.",
      "translation": "如果目标节点使用模式，请删除这些字段。"
    },
    {
      "id": "Valid types are string, bool, int, float, list of string (comma separated), version.",
      "translation": "有效类型为字符串、布尔型、整型、浮点型、字符串列表（以逗号分隔）和版本。"
    },
    {
      "id": "Type can be omitted if the type is discernable from the value, e.g. unquoted true is boolean.",
      "translation": "如果可以根据值来辨认类型（例如，未括在引号中的 true 是布尔值），那么可以省略类型。"
    },
    {
      "id": "A list of constraint expressions of the form <property name> <operator> <property value>, separated by boolean operators AND (&&) or OR (||).",
      "translation": "一列格式为 <property name> <operator> <property value> 的约束表达式，以布尔运算符 AND (&&) 或 OR (||) 分隔。"
    },
    {
      "id": "The service(s) that will use this object.",
      "translation": "将要使用此对象的服务。"
    },
    {
      "id": "The org of the service.",
      "translation": "服务的组织。"
    },
    {
      "id": "The name of the service.",
      "translation": "服务的名称。"
    },
    {
      "id": "Set to '*' to indcate services of any hardware architecture.",
      "translation": "设置为“*”表示任何硬件体系结构的服务。"
    },
    {
      "id": "A version range.",
      "translation": "版本范围。"
    },
    {
      "id": "A timestamp/date indicating when the object expires (it is automatically deleted). The timestamp should be provided in RFC3339 format.",
      "translation": "指示对象到期时间（该对象在该时间自动删除）的时间戳记/日期。时间戳记应以 RFC3339 格式提供。"
    },
    {
      "id": "Arbitrary string value. The value is not semantically interpreted. The Model Management System does not keep multiple version of an object.",
      "translation": "任意字符串值。不会在语义上解释该值。模型管理系统不会保留一个对象的多个版本。"
    },
    {
      "id": "An arbitrary description.",
      "translation": "任意的描述。"
    },
    {
      "id": "A timestamp/date as to when this object should automatically be activated. The timestamp should be provided in RFC3339 format.",
      "translation": "用于确定何时应该自动激活此对象的时间戳记/日期。时间戳记应以 RFC3339 格式提供。"
    },
    {
      "id": "must specify exchange credentials to access the model management service",
      "translation": "必须指定 Exchange 凭证，才能访问模型管理服务"
    },
    {
      "id": "must specify --type with --id",
      "translation": "必须将 --type 与 --id 一起指定"
    },
    {
      "id": "must specify --id with --type",
      "translation": "必须将 --id 与 --type 一起指定"
    },
    {
      "id": "cannot specify --id and --type with --def",
      "translation": "不能将 --id 和 --type 与 --def 一起指定"
    },
    {
      "id": "must specify either --type and --id or --def",
      "translation": "必须指定 --type 和 --id，或者指定 --def"
    },
    {
      "id": "cannot specify --pattern with --def",
      "translation": "不能将 --pattern 与 --def 一起指定"
    },
    {
      "id": "unable to read definition file {ObjMetadataFile}: {Err}",
      "translation": "无法读取定义文件 {ObjMetadataFile}：{Err}"
    },
    {
      "id": "failed to unmarshal definition file {ObjMetadataFile}: {Err}",
      "translation": "对定义文件 {ObjMetadataFile} 进行取消编组失败：{Err}"
    },
    {
      "id": "unable to open object file {ObjFile}: {Err}",
      "translation": "无法打开对象文件 {ObjFile}：{Err}"
    },
    {
      "id": "Object {ObjFile} uploaded to org {Org} in the Model Management Service",
      "translation": "对象 {ObjFile} 已上载到模型管理服务中的组织 {Org}"
    },
    {
      "id": "Object {ObjectID} added to org {Org} in the Model Management Service",
      "translation": "对象 {ObjectID} 已添加到模型管理服务中的组织 {Org}"
    },
    {
      "id": "Object {ObjId} deleted from org {Org} in the Model Management Service",
      "translation": "对象 {ObjId} 已从模型管理服务中的组织 {Org} 中删除"
    },
    {
      "id": "health status API returned HTTP code {HttpCode}",
      "translation": "运行状态 API 已返回 HTTP 代码 {HttpCode}"
    },
    {
      "id": "unable to create network {NETWORKNAME} for file sync service, error {Err}",
      "translation": "无法为文件同步服务创建网络 {NETWORKNAME}，错误：{Err}"
    },
    {
      "id": "unable to start CSS, error {Err}",
      "translation": "无法启动 CSS，错误：{Err}"
    },
    {
      "id": "unable to load file objects into CSS, error {Err}",
      "translation": "无法将文件对象装入到 CSS 中，错误：{Err}"
    },
    {
      "id": "unable to start ESS, error {Err}",
      "translation": "无法启动 ESS，错误：{Err}"
    },
    {
      "id": "Unable to stop {MakeLabelNameESSNAME}, error {Err}",
      "translation": "无法停止 {MakeLabelNameESSNAME}，错误：{Err}"
    },
    {
      "id": "Unable to remove network {NETWORKNAME} for file sync service, error {Err}",
      "translation": "无法移除文件同步服务的网络 {NETWORKNAME}，错误：{Err}"
    },
    {
      "id": "unable to list existing docker images, error {Err}",
      "translation": "无法列示现有的 Docker 映像，错误：{Err}"
    },
    {
      "id": "Found docker image {Name} locally.",
      "translation": "在本地找到 Docker 映像 {Name}。"
    },
    {
      "id": "unable to pull CSS container using image {GetFSSFullImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a different image tag.",
      "translation": "无法使用映像 {GetFSSFullImageName} 拉取 CSS 容器，错误：{Err}。请设置环境变量 {DEVTOOLHZNFSSIMAGETAG} 以使用其他映像标记。"
    },
    {
      "id": "Pulled docker image {Name}.",
      "translation": "已拉取 Docker 映像 {Name}。"
    },
    {
      "id": "unable to create CSS container using image {GetFSSImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a diferent image tag.",
      "translation": "无法使用映像 {GetFSSImageName} 创建 CSS 容器，错误：{Err}。请设置环境变量 {DEVTOOLHZNFSSIMAGETAG} 以使用其他映像标记。"
    },
    {
      "id": "unable to start CSS container, error {Err}",
      "translation": "无法启动 CSS 容器，错误：{Err}"
    },
    {
      "id": "Created {MakeLabelNameCSSNAME} container, listening on host port {GetCSSPort}",
      "translation": "已创建 {MakeLabelNameCSSNAME} 容器，正在主机端口 {GetCSSPort} 上侦听"
    },
    {
      "id": "File sync service container {MakeLabelNameCSSNAME} listening on host port {GetCSSPort}",
      "translation": "文件同步服务容器 {MakeLabelNameCSSNAME} 正在主机端口 {GetCSSPort} 上侦听"
    },
    {
      "id": "unable to create SSL certificate for ESS, error {Err}",
      "translation": "无法创建用于 ESS 的 SSL 证书，错误：{Err}"
    },
    {
      "id": "unable to open ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
      "translation": "无法打开 ESS SSL 证书文件 {ESSSSLClientCertPath}，错误：{Err}"
    },
    {
      "id": "unable to read ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
      "translation": "无法读取 ESS SSL 证书文件 {ESSSSLClientCertPath}，错误：{Err}"
    },
    {
      "id": "unable to open ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
      "translation": "无法打开 ESS SSL 证书密钥文件 {ESSSSLCertKeyPath}，错误：{Err}"
    },
    {
      "id": "unable to read ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
      "translation": "无法读取 ESS SSL 证书密钥文件 {ESSSSLCertKeyPath}，错误：{Err}"
    },
    {
      "id": "unable to create ESS container, error {Err}",
      "translation": "无法创建 ESS 容器，错误：{Err}"
    },
    {
      "id": "unable to start ESS container, error {Err}",
      "translation": "无法启动 ESS 容器，错误：{Err}"
    },
    {
      "id": "Created {MakeLabelNameESSNAME} container",
      "translation": "已创建 {MakeLabelNameESSNAME} 容器"
    },
    {
      "id": "unable to list docker containers, error {Err}",
      "translation": "无法列示 Docker 容器，错误：{Err}"
    },
    {
      "id": "unable to stop docker container {Name}, error {Err}",
      "translation": "无法停止 Docker 容器 {Name}，错误：{Err}"
    },
    {
      "id": "unable to remove docker container {Name}, error {Err}",
      "translation": "无法移除 Docker 容器 {Name}，错误：{Err}"
    },
    {
      "id": "Stopped {Name} container",
      "translation": "已停止 {Name} 容器"
    },
    {
      "id": "Loading {FileName} into CSS",
      "translation": "正在将 {FileName} 装入到 CSS 中"
    },
    {
      "id": "unable to open file object {FileName}, error {Err}",
      "translation": "无法打开文件对象 {FileName}，错误：{Err}"
    },
    {
      "id": "unable to read file object {FileName}, error {Err}",
      "translation": "无法读取文件对象 {FileName}，错误：{Err}"
    },
    {
      "id": "unable to add file {FileName} to the CSS, error {Err}",
      "translation": "无法将文件 {FileName} 添加到 CSS，错误：{Err}"
    },
    {
      "id": "Configuration files {FileObjects} loaded into the File sync service.",
      "translation": "配置文件 {FileObjects} 已装入到文件同步服务中。"
    },
    {
      "id": "unable to marshal CSS file PUT for {Metadata}, error {Err}",
      "translation": "无法对 {Metadata} 的 CSS 文件 PUT 进行编组，错误：{Err}"
    },
    {
      "id": "unable to create CSS file PUT request for {Metadata}, error {Err}",
      "translation": "无法为 {Metadata} 创建 CSS 文件 PUT 请求，错误：{Err}"
    },
    {
      "id": "unable to send CSS file PUT request to CSS for {Metadata}, error {Err}",
      "translation": "无法将 {Metadata} 的 CSS 文件 PUT 请求发送到 CSS，错误：{Err}"
    },
    {
      "id": "HTTP code: {StatusCode}",
      "translation": "HTTP 代码：{StatusCode}"
    },
    {
      "id": "unable to PUT file {Metadata} into CSS, HTTP code {StatusCode}",
      "translation": "无法将文件 {Metadata} 放置 (PUT) 到 CSS 中，HTTP 代码：{StatusCode}"
    },
    {
      "id": "Created network {Name}",
      "translation": "已创建网络 {Name}"
    },
    {
      "id": "unable to list docker networks, error {Err}",
      "translation": "无法列示 Docker 网络，错误：{Err}"
    },
    {
      "id": "unable to remove docker network {Name}, error {Err}",
      "translation": "无法移除 Docker 网络 {Name}，错误：{Err}"
    },
    {
      "id": "failed to marshal 'exchange agbot list' output: {Err}",
      "translation": "对“exchange agbot list”的输出进行编组失败：{Err}"
    },
    {
      "id": "agbot '{Agbot}' not found in org {AgbotOrg}",
      "translation": "在组织 {AgbotOrg} 中找不到 agbot“{Agbot}”"
    },
    {
      "id": "both patternorg and pattern must be specified (or neither)",
      "translation": "必须同时指定或同时不指定 patternorg 和 pattern"
    },
    {
      "id": "pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' not found in agbot '{Agbot}'",
      "translation": "在 agbot“{Agbot}”中找不到组织为“{PatternOrg}”且节点组织为“{NodeOrg}”的模式“{Pattern}”"
    },
    {
      "id": "Pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' already exists in agbot '{Agbot}'",
      "translation": "在 agbot“{Agbot}”中已存在组织为“{PatternOrg}”且节点组织为“{NodeOrg}”的模式“{Pattern}”"
    },
    {
      "id": "Adding Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot will start looking for nodes that are compatible with this policy.",
      "translation": "正在将业务策略组织“{PolOrg}”添加到 agbot“{Agbot}”。该 agbot 将开始查找与此策略兼容的节点。"
    },
    {
      "id": "Business policy org {PolOrg}' already exists in agbot '{Agbot}'",
      "translation": "业务策略组织“{PolOrg}”已存在于 agbot“{Agbot}”中。"
    },
    {
      "id": "Removing Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot is no longer looking for nodes that are compatible with this policy.",
      "translation": "正在将业务策略组织“{PolOrg}”从 agbot“{Agbot}”中移除。该 agbot 不再查找与此策略兼容的节点。"
    },
    {
      "id": "Policy {Policy} not found in org {PolOrg}",
      "translation": "在组织 {PolOrg} 中找不到策略 {Policy}"
    },
    {
      "id": "failed to marshal 'hzn exchange business listpolicy' output: {Err}",
      "translation": "对“hzn exchange business listpolicy”的输出进行编组失败：{Err}"
    },
    {
      "id": "Incorrect business policy format in file {JsonFilePath}: {Err}",
      "translation": "文件 {JsonFilePath} 中的业务策略格式不正确：{Err}"
    },
    {
      "id": "Business policy: {PolOrg}/{Policy} updated in the Horizon Exchange",
      "translation": "已在 Horizon Exchange 中更新业务策略：{PolOrg}/{Policy}"
    },
    {
      "id": "Business policy: {PolOrg}/{Policy} added in the Horizon Exchange",
      "translation": "已在 Horizon Exchange 中添加业务策略：{PolOrg}/{Policy}"
    },
    {
      "id": "failed to unmarshal attribute input {Attribute}: {Err}",
      "translation": "对属性输入 {Attribute} 进行取消编组失败：{Err}"
    },
    {
      "id": "Updating Policy {PolOrg}/{PolicyName} in the Horizon Exchange and re-evaluating all agreements based on this Business policy. Existing agreements might be cancelled and re-negotiated.",
      "translation": "正在 Horizon Exchange 中更新策略 {PolOrg}/{PolicyName}，以及重新评估所有基于此业务策略的协议。现有协议可能已取消并重新协商。"
    },
    {
      "id": "Policy {PolOrg}/{PolicyName} updated in the Horizon Exchange",
      "translation": "已在 Horizon Exchange 中更新策略 {PolOrg}/{PolicyName}"
    },
    {
      "id": "Invalid format for properties: {Err}",
      "translation": "属性的格式无效：{Err}"
    },
    {
      "id": "Invalid format for constraints: {Err}",
      "translation": "约束的格式无效：{Err}"
    },
    {
      "id": "Business policy attribute to be updated is not found in the input file. Supported attributes are: label, description, service, properties, constraints, and userInput.",
      "translation": "在输入文件中找不到所要更新的业务策略属性。支持的属性包括：标签、描述、服务、属性、约束和用户输入。"
    },
    {
      "id": "Are you sure you want to remove business policy {Policy} for org {PolOrg} from the Horizon Exchange?",
      "translation": "确定要从 Horizon Exchange 中移除组织 {PolOrg} 的业务策略 {Policy} 吗？"
    },
    {
      "id": "Policy {PolOrg}/{Policy} not found in the Horizon Exchange",
      "translation": "在 Horizon Exchange 中找不到策略 {PolOrg}/{Policy}"
    },
    {
      "id": "Removing Business policy {PolOrg}/{Policy} and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated",
      "translation": "正在移除业务策略 {PolOrg}/{Policy}，以及重新评估所有仅基于内置节点策略的协议。现有协议可能已取消并重新协商"
    },
    {
      "id": "Business policy {PolOrg}/{Policy} removed",
      "translation": "已移除业务策略 {PolOrg}/{Policy}"
    },
    {
      "id": "Business policy label.",
      "translation": "业务策略标签。"
    },
    {
      "id": "Business policy description.",
      "translation": "业务策略描述。"
    },
    {
      "id": "Set to '*' to use services of any hardware architecture.",
      "translation": "设置为“*”表示使用任何硬件体系结构的服务。"
    },
    {
      "id": "A list of service versions.",
      "translation": "服务版本列表。"
    },
    {
      "id": "A list of policy properties that describe the service being deployed.",
      "translation": "一列描述所要部署的服务的策略属性。"
    },
    {
      "id": "A list of userInput variables to set when the service runs, listed by service.",
      "translation": "一列要在运行服务时设置的用户输入变量（按服务列示）。"
    },
    {
      "id": "The service version range to which these variables should be applied.",
      "translation": "这些变量所要应用于的服务版本范围。"
    },
    {
      "id": "The input variables to be set.",
      "translation": "要设置的输入变量。"
    },
    {
      "id": "Flags -s and -l are mutually exclusive.",
      "translation": "标志 -s 与 -l 互斥。"
    },
    {
      "id": "failed to marshal 'hzn exchange catalog servicelist -l' output: {Err}",
      "translation": "对“hzn exchange catalog servicelist -l”的输出进行编组失败：{Err}"
    },
    {
      "id": "failed to marshal 'hzn exchange catalog servicelist -s' output: {Err}",
      "translation": "对“hzn exchange catalog servicelist -s”的输出进行编组失败：{Err}"
    },
    {
      "id": "failed to marshal 'hzn exchange catalog servicelist' output: {Err}",
      "translation": "对“hzn exchange catalog servicelist”的输出进行编组失败：{Err}"
    },
    {
      "id": "failed to marshal 'hzn exchange catalog patternlist -l' output: {Err}",
      "translation": "对“hzn exchange catalog patternlist -l”的输出进行编组失败：{Err}"
    },
    {
      "id": "failed to marshal 'hzn exchange catalog patternlist -s' output: {Err}",
      "translation": "对“hzn exchange catalog patternlist -s”的输出进行编组失败：{Err}"
    },
    {
      "id": "failed to marshal 'hzn exchange catalog patternlist' output: {Err}",
      "translation": "对“hzn exchange catalog patternlist”的输出进行编组失败：{Err}"
    },
    {
      "id": "no service name",
      "translation": "没有服务名称"
    },
    {
      "id": "no docker image for service {ServiceName}",
      "translation": "没有用于服务 {ServiceName} 的 Docker 映像"
    },
    {
      "id": "failed to marshal body for {D}: {Err}",
      "translation": "对 {D} 的主体进行编组失败：{Err}"
    },
    {
      "id": "failed to unmarshal json for deployment field {StringjsonBytes}: {Err}",
      "translation": "对部署字段 {StringjsonBytes} 的 JSON 进行取消编组失败：{Err}"
    },
    {
      "id": "failed to marshal 'exchange node list' output: {Err}",
      "translation": "对“exchange node list”的输出进行编组失败：{Err}"
    },
    {
      "id": "node '{Node}' not found in org {NodeOrg}",
      "translation": "在组织 {NodeOrg} 中找不到节点“{Node}”"
    },
    {
      "id": "if node or token are specified then they both must be specified",
      "translation": "如果指定节点或令牌，那么必须同时指定这两者"
    },
    {
      "id": "do not specify both the -n flag and the node and token positional arguments. They mean the same thing.",
      "translation": "请勿同时指定 -n 标志以及节点和令牌位置自变量。它们指的是同一内容。"
    },
    {
      "id": "either the node and token positional arguments, or the -n flag must be specified.",
      "translation": "必须指定节点和令牌位置自变量，或者指定 -n 标志。"
    },
    {
      "id": "User {Org}/{User} does not exist in the exchange with the specified password, creating it...",
      "translation": "在 Exchange 中不存在具有所指定密码的用户 {Org}/{User}，正在创建该用户..."
    },
    {
      "id": "user '{Org}/{User}' does not exist with the specified password or -e was not specified to be able to create it in the 'public' org.",
      "translation": "不存在具有所指定密码的用户“{Org}/{User}”，或者未指定 -e，无法在“public”组织中创建该用户。"
    },
    {
      "id": "key '{OrgAndCredsorg_nodeId}' not found in exchange nodes output",
      "translation": "在 Exchange 节点输出中找不到键“{OrgAndCredsorg_nodeId}”"
    },
    {
      "id": "can not update existing node {NodeId} because it is owned by another user ({Owner})",
      "translation": "无法更新现有节点 {NodeId}，因为该节点由另一用户 ({Owner}) 拥有"
    },
    {
      "id": "Node {NodeOrg}/{Node} not found in the Horizon Exchange.",
      "translation": "在 Horizon Exchange 中找不到节点 {NodeOrg}/{Node}。"
    },
    {
      "id": "Updating Node {NodeOrg}/{Node} in the Horizon Exchange and re-evaluating all agreements based on this update. Existing agreements might be cancelled and re-negotiated.",
      "translation": "正在 Horizon Exchange 中更新节点 {NodeOrg}/{Node}，以及重新评估所有基于此更新的协议。现有协议可能已取消并重新协商。"
    },
    {
      "id": "Node {NodeOrg}/{Node} updated in the Horizon Exchange.",
      "translation": "已在 Horizon Exchange 中更新节点 {NodeOrg}/{Node}。"
    },
    {
      "id": "Node attribute to be updated is not found in the input file. Supported attributes are: userInput.",
      "translation": "在输入文件中找不到所要更新的节点属性。受支持的属性为：userInput。"
    },
    {
      "id": "-n is mutually exclusive with <node> and <token> arguments.",
      "translation": "-n 与 <node> 和 <token> 自变量互斥。"
    },
    {
      "id": "Please specify both node and token.",
      "translation": "请同时指定节点和令牌。"
    },
    {
      "id": "Are you sure you want to remove node {NodeOrg}/{Node} from the Horizon Exchange (should not be done while an edge node is registered with this node id)?",
      "translation": "确定要从 Horizon Exchange 中移除节点 {NodeOrg}/{Node} 吗（存在使用此节点标识注册的边缘节点时，不应执行移除）？"
    },
    {
      "id": "node '{NodeOrg}/{Node}' not found.",
      "translation": "找不到节点“{NodeOrg}/{Node}”。"
    },
    {
      "id": "Incorrect policy format in file {JsonFilePath}: {Err}",
      "translation": "文件 {JsonFilePath} 中的策略格式不正确：{Err}"
    },
    {
      "id": "Node policy not found for node {NodeOrg}/{Node}",
      "translation": "找不到节点 {NodeOrg}/{Node} 的节点策略"
    },
    {
      "id": "Invalid property list {Attribute}: {Err}",
      "translation": "属性列表 {Attribute} 无效：{Err}"
    },
    {
      "id": "Updating Node {Node} policy properties in the horizon exchange and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
      "translation": "正在 Horizon Exchange 中更新节点 {Node} 策略属性，以及重新评估所有基于此策略的协议。现有协议可能已取消并重新协商。"
    },
    {
      "id": "Node {Node} policy properties updated in the horizon exchange.",
      "translation": "已在 Horizon Exchange 中更新节点 {Node} 策略属性。"
    },
    {
      "id": "Invalid constraint expression {Attribute}: {Err}",
      "translation": "约束表达式 {Attribute} 无效：{Err}"
    },
    {
      "id": "Updating Node {Node} policy constraints in the horizon exchange and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
      "translation": "正在 Horizon Exchange 中更新节点 {Node} 策略约束，以及重新评估所有基于此策略的协议。现有协议可能已取消并重新协商。"
    },
    {
      "id": "Node {Node} policy constraints updated in the horizon exchange.",
      "translation": "已在 Horizon Exchange 中更新节点 {Node} 策略约束。"
    },
    {
      "id": "Failed to find valid attribute to update in input {Attribute}. Attributes are constraints and properties.",
      "translation": "在输入 {Attribute} 中找不到要更新的有效属性。属性是约束和特性。"
    },
    {
      "id": "Are you sure you want to remove node policy for {NodeOrg}/{Node} from the Horizon Exchange?",
      "translation": "确定要从 Horizon Exchange 中移除 {NodeOrg}/{Node} 的节点策略吗？"
    },
    {
      "id": "Removing Node policy and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated.",
      "translation": "正在移除节点策略，以及重新评估所有仅基于内置节点策略的协议。现有协议可能已取消并重新协商。"
    },
    {
      "id": "failed to marshal 'hzn exchange node listerrors' output: {Err}",
      "translation": "对“hzn exchange node listerrors”的输出进行编组失败：{Err}"
    },
    {
      "id": "Error: event record could not be found",
      "translation": "错误：找不到事件记录"
    },
    {
      "id": "failed to marshal 'exchange pattern list' output: {Err}",
      "translation": "对“exchange pattern list”的输出进行编组失败：{Err}"
    },
    {
      "id": "pattern '{Pattern}' not found in org {PatOrg}",
      "translation": "在组织 {PatOrg} 中找不到模式“{Pattern}”"
    },
    {
      "id": "failed to marshal 'hzn exchange pattern list' output: {Err}",
      "translation": "对“hzn exchange pattern list”的输出进行编组失败：{Err}"
    },
    {
      "id": "Pattern {Pattern}/{PatOrg} updated in the Horizon exchange.",
      "translation": "已在 Horizon Exchange 中更新模式 {Pattern}/{PatOrg}。"
    },
    {
      "id": "failed to unmarshal json for deployment overrides field {StringjsonBytes}: {Err}",
      "translation": "对部署覆盖字段 {StringjsonBytes} 的 JSON 进行取消编组失败：{Err}"
    },
    {
      "id": "the org specified in the input file ({Org}) must match the org specified on the command line ({Org_1})",
      "translation": "在输入文件中指定的组织 ({Org}) 必须与命令行上指定的组织 ({Org_1}) 匹配"
    },
    {
      "id": "the pattern definition ({Services}) must contain services, unable to proceed",
      "translation": "模式定义 ({Services}) 必须包含服务，无法继续"
    },
    {
      "id": "Signing deployment_overrides field in service {I__1}, serviceVersion number {J__1}",
      "translation": "正在对服务 {I__1}（服务版本号为 {J__1}）中的 deployment_overrides 字段进行签名"
    },
    {
      "id": "failed to marshal deployment_overrides field in service {I__1}, serviceVersion number {J__1}: {Err}",
      "translation": "对服务 {I__1}（服务版本号为 {J__1}）中的 deployment_overrides 字段进行编组失败：{Err}"
    },
    {
      "id": "problem signing the deployment_overrides string with {KeyFilePath}: {Err}",
      "translation": "使用 {KeyFilePath} 对 deployment_overrides 字符串进行签名时遇到问题：{Err}"
    },
    {
      "id": "Updating {ExchId} in the exchange...",
      "translation": "正在 Exchange 中更新 {ExchId}..."
    },
    {
      "id": "Creating {ExchId} in the exchange...",
      "translation": "正在 Exchange 中创建 {ExchId}..."
    },
    {
      "id": "Storing {BaseName} with the pattern in the exchange...",
      "translation": "正在将 {BaseName} 随模式一起存储在 Exchange 中..."
    },
    {
      "id": "key '{Org____pattern}' not found in resources returned from exchange",
      "translation": "在从 Exchange 返回的资源中找不到键“{Org____pattern}"
    },
    {
      "id": "verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1}",
      "translation": "正在验证服务 {I__1}（服务版本号为 {J__1}）中的 deployment_overrides 字符串"
    },
    {
      "id": "problem verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1} with {KeyFilePath}: {Err}",
      "translation": "使用 {KeyFilePath} 验证服务 {I__1}（服务版本号为 {J__1}）中的 deployment_overrides 字符串时遇到问题：{Err}"
    },
    {
      "id": "Deployment_overrides string in service {I__1}, serviceVersion number {J__1} was not signed with the private key associated with this public key {KeyFilePath}.",
      "translation": "服务 {I__1}（服务版本号为 {J__1}）中的 deployment_overrides 字符串未使用与此公用密钥 {KeyFilePath} 相关联的专用密钥进行签名。"
    },
    {
      "id": "Are you sure you want to remove pattern {Org}/{Pattern} from the Horizon Exchange?",
      "translation": "确定要从 Horizon Exchange 中移除模式 {Org}/{Pattern} 吗？"
    },
    {
      "id": "key '{KeyName}' not found",
      "translation": "找不到键“{KeyName}”"
    },
    {
      "id": "user input {Name} has no default value and is not set",
      "translation": "用户输入 {Name} 没有缺省值，未进行设置"
    },
    {
      "id": "failed to marshal 'hzn exchange service list' output: {Err}",
      "translation": "对“hzn exchange service list”的输出进行编组失败：{Err}"
    },
    {
      "id": "service '{Service}' not found in org {SvcOrg}",
      "translation": "在组织 {SvcOrg} 中找不到服务“{Service}”"
    },
    {
      "id": "Flags -I and -P are mutually exclusive.",
      "translation": "标志 -I 与 -P 互斥。"
    },
    {
      "id": "Adding service policy for service: {ServiceAddPolicyService}",
      "translation": "正在为服务添加服务策略：{ServiceAddPolicyService}"
    },
    {
      "id": "Service policy added for service: {ServiceAddPolicyService}",
      "translation": "已经为服务添加服务策略：{ServiceAddPolicyService}"
    },
    {
      "id": "the 'deploymentSignature' field is non-blank, but being ignored, because the 'deployment' field is null",
      "translation": "“deploymentSignature”字段不为空，但被忽略，因为“deployment”字段为 null"
    },
    {
      "id": "unable to sign deployment config: {Err}",
      "translation": "无法对部署配置进行签名：{Err}"
    },
    {
      "id": "the 'deployment' field is a non-empty string, which implies this service is pre-signed, but the 'deploymentSignature' field is empty",
      "translation": "“deployment”字段是非空字符串，这意味着此服务已预先进行签名，但“deploymentSignature”字段为空"
    },
    {
      "id": "'deployment' field is invalid type. It must be either a json object or a string (for pre-signed)",
      "translation": "“deployment”字段不是有效类型。它必须是 JSON 对象或字符串（对于预先签名情况）"
    },
    {
      "id": "Service {Org}/{ExchId} exists in the exchange, do you want to overwrite it?",
      "translation": "在 Exchange 中已存在服务 {Org}/{ExchId}，是否要覆盖？"
    },
    {
      "id": "Storing {BaseName} with the service in the exchange...",
      "translation": "正在将 {BaseName} 随服务一起存储在 Exchange 中..."
    },
    {
      "id": "Error: registry-token value of '{RegTok}' is not in the required format: registry:user:token. Not storing that in the Horizon exchange.",
      "translation": "错误：注册表令牌值“{RegTok}”不具有所需的格式：registry:user:token。未将该值存储在 Horizon Exchange 中。"
    },
    {
      "id": "unable to get container images from deployment: {Err}",
      "translation": "无法从部署中获取容器映像：{Err}"
    },
    {
      "id": "Deployment string was not signed with the private key associated with this public key {KeyFilePath}.",
      "translation": "部署字符串未使用与此公用密钥 {KeyFilePath} 相关联的专用密钥进行签名。"
    },
    {
      "id": "Are you sure you want to remove service {Svcorg}/{Service} from the Horizon Exchange?",
      "translation": "确定要从 Horizon Exchange 中移除服务 {Svcorg}/{Service} 吗？"
    },
    {
      "id": "keys not found",
      "translation": "找不到键"
    },
    {
      "id": "docker auth {AuthId} not found",
      "translation": "找不到 Docker 认证令牌 {AuthId}"
    },
    {
      "id": "docker auths not found",
      "translation": "找不到 Docker 认证令牌"
    },
    {
      "id": "service '{Svcorg}/{Service}' not found.",
      "translation": "找不到服务“{Svcorg}/{Service}”。"
    },
    {
      "id": "failed to marshal 'hzn exchange service listpolicy' output: {Err}",
      "translation": "对“hzn exchange service listpolicy”的输出进行编组失败：{Err}"
    },
    {
      "id": "Updating Service policy  and re-evaluating all agreements based on this Service policy. Existing agreements might be cancelled and re-negotiated.",
      "translation": "正在更新服务策略，以及重新评估所有基于此服务策略的协议。现有协议可能已取消并重新协商。"
    },
    {
      "id": "Are you sure you want to remove service policy for {Svcorg}/{Service} from the Horizon Exchange?",
      "translation": "确定要从 Horizon Exchange 中移除 {Svcorg}/{Service} 的服务策略吗？"
    },
    {
      "id": "Removing Service policy and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated.",
      "translation": "正在移除服务策略，以及重新评估所有仅基于内置节点策略的协议。现有协议可能已取消并重新协商。"
    },
    {
      "id": "theUser '{TrimPrefixtheUser_}' not found in org {Org}",
      "translation": "在组织 {Org} 中找不到用户“{TrimPrefixtheUser_}”"
    },
    {
      "id": "failed to marshal 'exchange user list' output: {Err}",
      "translation": "对“exchange user list”的输出进行编组失败：{Err}"
    },
    {
      "id": "the email must be specified via -e if the username is not an email address.",
      "translation": "如果用户名不是电子邮件地址，那么必须通过 -e 指定电子邮件地址。"
    },
    {
      "id": "Warning: this will also delete all Exchange resources owned by this user (nodes, services, patterns, etc). Are you sure you want to remove user {Org}/{User} from the Horizon Exchange?",
      "translation": "警告：这还将删除此用户所拥有的所有 Exchange 资源（节点、服务、模式，等等）。确定要从 Horizon Exchange 中移除用户 {Org}/{User} 吗？"
    },
    {
      "id": "user '{User}' not found in org {Org}",
      "translation": "在组织 {Org} 中找不到用户“{User}”"
    },
    {
      "id": "Unable to marshal userinput object: {Err}",
      "translation": "无法对用户输入对象进行编组：{Err}"
    },
    {
      "id": "A list of objects, each one containing the user inputs required for a specified service.",
      "translation": "一列对象，其中每个对象都包含指定的服务所需的用户输入。"
    },
    {
      "id": "The horizon org of the specified service.",
      "translation": "所指定服务的 Horizon 组织。"
    },
    {
      "id": "The unique string used to identify the specified service.",
      "translation": "用于识别所指定服务的唯一字符串。"
    },
    {
      "id": "The service architecture that these inputs apply to. Omit or leave blank to mean all architectures.",
      "translation": "这些输入所应用于的服务体系结构。省略或保留为空白表示所有体系结构。"
    },
    {
      "id": "The service versions that these inputs apply to. Omit or specify \"[0.0.0,INFINITY)\" to mean all versions.",
      "translation": "这些输入所应用于的服务版本。省略或指定“[0.0.0,INFINITY)”表示所有版本。"
    },
    {
      "id": "A list of objects with the names and values for the user inputs used by this service.",
      "translation": "一列对象，其中包含此服务所使用的用户输入的名称和值。"
    },
    {
      "id": "Error unmarshaling userInput json file: {Err}",
      "translation": "对用户输入 JSON 文件进行取消编组出错：{Err}"
    },
    {
      "id": "Are you sure you want to remove the node user inputs?",
      "translation": "确定要移除该节点用户输入吗？"
    },
    {
      "id": "Deployment config {Arg_1} contains unsupported capability for a workload",
      "translation": "部署配置 {Arg_1} 包含工作负载所不支持的功能"
    },
    {
      "id": "Deployment config {Arg_1} contains unsupported capability for infrastructure container.",
      "translation": "部署配置 {Arg_1} 包含基础结构容器所不支持的功能。"
    },
    {
      "id": "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}",
      "translation": "部署配置 {Arg_1} 包含工作负载所不支持的绑定，{Arg_2}"
    },
    {
      "id": "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}",
      "translation": "部署配置 {Arg_1} 包含{Arg_2} 所不支持的绑定，{Arg_3}"
    },
    {
      "id": "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}",
      "translation": "将部署字符串 {Arg_1} 反序列化时出错，错误：{Arg_2}"
    },
    {
      "id": "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}",
      "translation": "将用于协议 {Arg_2} 的部署覆盖字符串 {Arg_1} 反序列化时出错，错误：{Arg_3}"
    },
    {
      "id": "Error starting containers: {Arg_1}",
      "translation": "启动容器时出错：{Arg_1}"
    },
    {
      "id": "Error starting containers for agreement {Arg_1}: {Arg_2}",
      "translation": "启动用于协议 {Arg_1} 的容器时出错：{Arg_2}"
    },
    {
      "id": "Error restarting containers for agreements {Arg_1}: {Arg_2}",
      "translation": "重新启动用于协议 {Arg_1} 的容器时出错：{Arg_2}"
    },
    {
      "id": "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}",
      "translation": "在启动用于 {Arg_1} 的新容器之前，清除旧容器时出错。错误：{Arg_2}"
    },
    {
      "id": "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}",
      "translation": "获取用于为 {Arg_1} 进行服务重试的一列父容器失败。{Arg_2}"
    },
    {
      "id": "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}",
      "translation": "针对服务 {Arg_1}，复原与父代的网络连接失败。{Arg_2}"
    },
    {
      "id": "unable to set env var 'HORIZON_URL', error {Err}",
      "translation": "无法设置环境变量“HORIZON_URL”，错误：{Err}"
    },
    {
      "id": "failed to marshal 'agreement list' output: {Err}",
      "translation": "对“agreement list”的输出进行编组失败：{Err}"
    },
    {
      "id": "failed to marshal 'policy list' output: {Err}",
      "translation": "对“policy list”的输出进行编组失败：{Err}"
    },
    {
      "id": "Error: The organization '{Org}' does not exist.",
      "translation": "错误：组织“{Org}”不存在。"
    },
    {
      "id": "Error: Either the organization '{Org}' does not exist or the policy '{Name}' is not hosted by this agbot.",
      "translation": "错误：组织“{Org}”不存在，或者策略“{Name}”并非由此 agbot 托管。"
    },
    {
      "id": "Error parsing the selections {Form}. {Err}",
      "translation": "解析选定项目 {Form} 出错。{Err}"
    },
    {
      "id": "Error getting {Resource} for output, error {Err}",
      "translation": "获取用于输出的 {Resource} 出错，错误：{Err}"
    },
    {
      "id": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
      "translation": "解析用于节点配置/注册的输入出错。输入主体未能反序列化为节点对象：{Arg_1}，错误：{Arg_2}"
    },
    {
      "id": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}",
      "translation": "解析用于节点配置/注册的输入出错。输入主体未能反序列化为配置状态对象：{Arg_1}，错误：{Arg_2}"
    },
    {
      "id": "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
      "translation": "解析用于节点更新的输入出错。输入主体未能反序列化为节点对象：{Arg_1}，错误：{Arg_2}"
    },
    {
      "id": "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}",
      "translation": "解析用于节点策略的输入出错。输入主体未能反序列化为策略对象：{Arg_1}，错误：{Arg_2}"
    },
    {
      "id": "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
      "translation": "解析用于节点策略修补程序的输入出错。输入主体未能反序列化到约束表达式或属性列表中：{Arg_1}，错误：{Arg_2}"
    },
    {
      "id": "Error parsing input for node policy patch. Input body did not contain a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
      "translation": "解析用于节点策略修补程序的输入出错。输入主体未包含约束表达式或属性列表：{Arg_1}，错误：{Arg_2}"
    },
    {
      "id": "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}",
      "translation": "解析用于节点用户输入的输入出错。输入主体未能反序列化为用户输入对象：{Arg_1}，错误：{Arg_2}"
    },
    {
      "id": "Error in node configuration/registration for node {Arg_1}. {Arg_2}",
      "translation": "针对节点 {Arg_1} 进行的节点配置/注册出错。{Arg_2}"
    },
    {
      "id": "Error in updating node {Arg_1}. {Arg_2}",
      "translation": "更新节点 {Arg_1} 出错。{Arg_2}"
    },
    {
      "id": "Error in node unregistration. {Arg_1}",
      "translation": "注销节点出错。{Arg_1}"
    },
    {
      "id": "Error verifiying exchange version. error: {Arg_1}",
      "translation": "验证 Exchange 版本出错。错误：{Arg_1}"
    },
    {
      "id": "Error in creating or replacing node policy. {Arg_1}",
      "translation": "创建或替换节点策略出错。{Arg_1}"
    },
    {
      "id": "Error in patching node policy. {Arg_1}",
      "translation": "修补节点策略出错。{Arg_1}"
    },
    {
      "id": "Error in deleting node policy. {Arg_1}",
      "translation": "删除节点策略出错。{Arg_1}"
    },
    {
      "id": "Error in updating node user input. {Arg_1}",
      "translation": "更新节点用户输入出错。{Arg_1}"
    },
    {
      "id": "Error in patching node user input. {Arg_1}",
      "translation": "修补节点用户输入出错。{Arg_1}"
    },
    {
      "id": "Error in deleting node userinput. {Arg_1}",
      "translation": "删除节点用户输入出错。{Arg_1}"
    },
    {
      "id": "Start node configuration/registration for node {Arg_1}.",
      "translation": "针对节点 {Arg_1} 进行的节点配置/注册开始。"
    },
    {
      "id": "Start updating node {Arg_1}.",
      "translation": "开始更新节点 {Arg_1}。"
    },
    {
      "id": "Complete node update for {Arg_1}.",
      "translation": "针对 {Arg_1} 进行的节点更新完成。"
    },
    {
      "id": "Start node unregistration.",
      "translation": "开始注销节点。"
    },
    {
      "id": "Node unregistration complete for node {Arg_1}.",
      "translation": "针对节点 {Arg_1} 进行的节点注销完成。"
    },
    {
      "id": "Error unregistring the node. The node is not found from the database.",
      "translation": "注销节点出错。在数据库中找不到该节点。"
    },
    {
      "id": "Error unregistring the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it.",
      "translation": "注销节点出错。节点必须处于“已配置”或“正在配置”状态才能取消配置。"
    },
    {
      "id": "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode",
      "translation": "用于注销节点的输入错误。对于 removeNode，{Arg_1} 不是正确的值"
    },
    {
      "id": "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean",
      "translation": "用于注销节点的输入错误。对于 deepClean，{Arg_1} 不是正确的值"
    },
    {
      "id": "Input error for node unregistration. {Arg_1} is an incorrect value for block",
      "translation": "用于注销节点的输入错误。对于 block，{Arg_1} 不是正确的值"
    },
    {
      "id": "Unable to read node object from database, error {Arg_1}",
      "translation": "无法从数据库读取节点对象，错误：{Arg_1}"
    },
    {
      "id": "Error saving new node config state (unconfiguring) in the database: {Arg_1}",
      "translation": "在数据库中保存新的节点配置状态（取消配置）出错：{Arg_1}"
    },
    {
      "id": "Error in node configuration. The node is not found from the database.",
      "translation": "节点配置出错。在数据库中找不到该节点。"
    },
    {
      "id": "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}.",
      "translation": "节点配置出错。节点必须处于“已配置”或“正在配置”状态才能将状态更改为 {Arg_1}。"
    },
    {
      "id": "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported.",
      "translation": "不支持节点状态从“{Arg_1}”过渡到“{Arg_2}”。"
    },
    {
      "id": "Failed get user input from local db. {Arg_1}",
      "translation": "从本地数据库获取用户输入失败。{Arg_1}"
    },
    {
      "id": "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}",
      "translation": "从本地用户输入中找不到用于服务 {Arg_1}/{Arg_2} 的首选项，错误：{Arg_3}"
    },
    {
      "id": "Error saving new node config state to database: {Arg_1}",
      "translation": "将新节点配置状态保存到数据库出错：{Arg_1}"
    },
    {
      "id": "Complete node configuration/registration for node {Arg_1}.",
      "translation": "针对节点 {Arg_1} 进行的节点配置/注册完成。"
    },
    {
      "id": "Error in service configuration for {Arg_1}. {Arg_2}",
      "translation": "{Arg_1} 的服务配置出错。{Arg_2}"
    },
    {
      "id": "Error getting service references for pattern {Arg_1}. {Arg_2}",
      "translation": "获取模式 {Arg_1} 的服务引用出错。{Arg_2}"
    },
    {
      "id": "New node policy: {Arg_1}",
      "translation": "新节点策略：{Arg_1}"
    },
    {
      "id": "Deleted node policy",
      "translation": "已删除节点策略"
    },
    {
      "id": "New node user input: {Arg_1}",
      "translation": "新的节点用户输入：{Arg_1}"
    },
    {
      "id": "No node user input to detele",
      "translation": "没有可删除的节点用户输入"
    },
    {
      "id": "Deleted all node user input",
      "translation": "已删除所有节点用户输入"
    },
    {
      "id": "Start service configuration with user input for {Arg_1}/{Arg_2}.",
      "translation": "针对 {Arg_1}/{Arg_2} 使用用户输入进行的服务配置开始。"
    },
    {
      "id": "Start service auto configuration for {Arg_1}/{Arg_2}.",
      "translation": "针对 {Arg_1}/{Arg_2} 进行的服务自动配置开始。"
    },
    {
      "id": "Complete service configuration for {Arg_1}/{Arg_2}.",
      "translation": "针对 {Arg_1}/{Arg_2} 进行的服务配置完成。"
    },
    {
      "id": "Complete service auto configuration for {Arg_1}/{Arg_2}.",
      "translation": "针对 {Arg_1}/{Arg_2} 进行的服务自动配置完成。"
    },
    {
      "id": "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may cause agreement not formed if the business policy does not contain the setting for the missing variable.",
      "translation": "在 {Arg_2}/{Arg_3} 的服务配置中，缺失变量 {Arg_1}。业务策略未包含该缺失变量的设置时，可能无法构造协议。"
    },
    {
      "id": "Error configuring service {Arg_1}. {Arg_2}",
      "translation": "配置服务 {Arg_1} 出错。{Arg_2}"
    },
    {
      "id": "Error changing service configstate {Arg_1}, error {Arg_2}",
      "translation": "更改服务配置状态 {Arg_1} 出错，错误：{Arg_2}"
    },
    {
      "id": "Start changing service configuration state to {Arg_1} for {Arg_2} for the node.",
      "translation": "对于节点的 {Arg_2}，将服务配置状态更改为 {Arg_1} 开始。"
    },
    {
      "id": "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node.",
      "translation": "对于节点的 {Arg_2}，将服务配置状态更改为 {Arg_1} 完成。"
    },
    {
      "id": "Error converting the selections into Selectors: {Err}",
      "translation": "将选定项目转换为选择器出错：{Err}"
    },
    {
      "id": "[verbose] {M}",
      "translation": "[verbose] {M}"
    },
    {
      "id": "Error: {Msg}",
      "translation": "错误：{Msg}"
    },
    {
      "id": "Warning: {Msg}",
      "translation": "警告：{Msg}"
    },
    {
      "id": "failed to unmarshal bytes from {ErrMsg}: {Err}",
      "translation": "对 {ErrMsg} 中的字节进行取消编组失败：{Err}"
    },
    {
      "id": "failed to marshal data type from {ErrMsg}: {Err}",
      "translation": "对 {ErrMsg} 中的数据类型进行编组失败：{Err}"
    },
    {
      "id": "problem testing api key match: {Err}",
      "translation": "测试 API 密钥匹配时遇到问题：{Err}"
    },
    {
      "id": "Using API key",
      "translation": "正在使用 API 密钥"
    },
    {
      "id": "unable to create docker client: {Err}",
      "translation": "无法创建 Docker 客户机：{Err}"
    },
    {
      "id": "docker auth domainName: {DomainName}",
      "translation": "Docker 认证域名：{DomainName}"
    },
    {
      "id": "unable to find docker credentials for {Domain}",
      "translation": "找不到 {Domain} 的 Docker 凭证"
    },
    {
      "id": "Pushing {Repository}:{Tag}...",
      "translation": "正在推送 {Repository}:{Tag}..."
    },
    {
      "id": "could not get docker credentials from ~/.docker/config.json: {Err}. Maybe you need to run 'docker login ...' to provide credentials for the image registry.",
      "translation": "未能从 ~/.docker/config.json 获取 Docker 凭证：{Err}。可能需要运行“docker login ...”，以提供映像注册表的凭证。"
    },
    {
      "id": "unable to push docker image {Repository____tag}: {Err}",
      "translation": "无法推送 Docker 映像 {Repository____tag}：{Err}"
    },
    {
      "id": "could not find the image digest in the docker push output",
      "translation": "在 Docker 推送输出中找不到映像摘要"
    },
    {
      "id": "Pulling {Repository}:{Tag}...",
      "translation": "正在拉取 {Repository}:{Tag}..."
    },
    {
      "id": "unable to pull docker image {Repository____tag}. Docker credentials were not found. Maybe you need to run 'docker login ...' if the image registry is private. Error: {Err}",
      "translation": "无法拉取 Docker 映像 {Repository____tag}。找不到 Docker 凭证。如果映像注册表是私有的，您可能需要运行“docker login ...”。错误：{Err}"
    },
    {
      "id": "unable to pull docker image {Repository____tag}: {Err}",
      "translation": "无法拉取 Docker 映像 {Repository____tag}：{Err}"
    },
    {
      "id": "the id can not contain more than 1 '/'",
      "translation": "标识不得包含多个“/”"
    },
    {
      "id": "reading stdin failed: {Err}",
      "translation": "读取 stdin 失败：{Err}"
    },
    {
      "id": "reading {FilePath} failed: {Err}",
      "translation": "读取 {FilePath} 失败：{Err}"
    },
    {
      "id": "Warning: environment variable '{EnvVarName}' is referenced in input file, but not defined in the environment.",
      "translation": "警告：在输入文件中引用了环境变量“{EnvVarName}”，但未在环境中定义该变量。"
    },
    {
      "id": "Error scanning input, error {Err}",
      "translation": "扫描输入出错，错误：{Err}"
    },
    {
      "id": "Error reading HTTP response, error {Err}",
      "translation": "读取 HTTP 响应出错，错误：{Err}"
    },
    {
      "id": "Can't connect to the Horizon REST API to run {ApiMethod}. Run 'systemctl status horizon' to check if the Horizon agent is running. Or set HORIZON_URL to connect to another local port that is connected to a remote Horizon agent via a ssh tunnel. Specific error is: {Err}",
      "translation": "无法连接至 Horizon REST API 以运行 {ApiMethod}。请运行“systemctl status horizon”，以检查 Horizon 代理程序是否在运行中。或者，设置 HORIZON_URL，以连接至通过 SSH 隧道来连接至远程 Horizon 代理程序的其他本地端口。具体错误为：{Err}"
    },
    {
      "id": "Can't connect to the Horizon REST API to run {ApiMethod}. Maybe the ssh tunnel associated with that port is down? Or maybe the remote Horizon agent at the other end of that tunnel is down. Specific error is: {Err}",
      "translation": "无法连接至 Horizon REST API 以运行 {ApiMethod}。与该端口相关联的 SSH 隧道可能已关闭。或者，该隧道另一端的远程 Horizon 代理程序可能已关闭。具体错误为：{Err}"
    },
    {
      "id": "{ApiMsg} new request failed: {Err}",
      "translation": "{ApiMsg} 新请求失败：{Err}"
    },
    {
      "id": "Bad HTTP code from {ApiMsg}: {HttpCode}",
      "translation": "来自 {ApiMsg} 的 HTTP 代码不正确：{HttpCode}"
    },
    {
      "id": "bad HTTP code from {ApiMsg}: {HttpCode}",
      "translation": "来自 {ApiMsg} 的 HTTP 代码不正确：{HttpCode}"
    },
    {
      "id": "Failed to read body response from {ApiMsg}: {Err}",
      "translation": "读取来自 {ApiMsg} 的主体响应失败：{Err}"
    },
    {
      "id": "failed to read body response from {ApiMsg}: {Err}",
      "translation": "读取来自 {ApiMsg} 的主体响应失败：{Err}"
    },
    {
      "id": "Failed to unmarshal body response from {ApiMsg}: {Err}",
      "translation": "对来自 {ApiMsg} 的主体响应进行取消编组失败：{Err}"
    },
    {
      "id": "failed to unmarshal body response from {ApiMsg}: {Err}",
      "translation": "对来自 {ApiMsg} 的主体响应进行取消编组失败：{Err}"
    },
    {
      "id": "bad HTTP code {HttpCode} from {ApiMsg}: {Body}",
      "translation": "来自 {ApiMsg} 的 HTTP 代码 {HttpCode} 不正确：{Body}"
    },
    {
      "id": "failed to marshal body for {ApiMsg}: {Err}",
      "translation": "对 {ApiMsg} 的主体进行编组失败：{Err}"
    },
    {
      "id": "Failed to unmarshal bytes. {Err}",
      "translation": "对字节进行取消编组失败。{Err}"
    },
    {
      "id": "Error getting HZN_ICP_CA_CERT_PATH from {ANAXOVERWRITEFILE}: {Err}",
      "translation": "从 {ANAXOVERWRITEFILE} 获取 HZN_ICP_CA_CERT_PATH 出错：{Err}"
    },
    {
      "id": "Error getting HZN_EXCHANGE_URL from {ANAXOVERWRITEFILE}. {Err}",
      "translation": "从 {ANAXOVERWRITEFILE} 获取 HZN_EXCHANGE_URL 出错。{Err}"
    },
    {
      "id": "Error getting ExchangeUrl from {ANAXCONFIGFILE}. {Err}",
      "translation": "从 {ANAXCONFIGFILE} 获取 ExchangeUrl 出错。{Err}"
    },
    {
      "id": "HZN_EXCHANGE_URL is not set, get it from horizon agent configuration on the node.",
      "translation": "未设置 HZN_EXCHANGE_URL，从节点上的 Horizon 代理程序配置获取。"
    },
    {
      "id": "Could not get the exchange url from environment variable HZN_EXCHANGE_URL or the horizon agent",
      "translation": "未能从环境变量 HZN_EXCHANGE_URL 或 Horizon 代理程序获取 Exchange URL"
    },
    {
      "id": "The exchange url: {ExchUrl}",
      "translation": "Exchange URL：{ExchUrl}"
    },
    {
      "id": "Error getting HZN_FSS_CSSURL from {ANAXOVERWRITEFILE}. {Err}",
      "translation": "从 {ANAXOVERWRITEFILE} 获取 HZN_FSS_CSSURL 出错。{Err}"
    },
    {
      "id": "Error getting model management service Url from {ANAXCONFIGFILE}. {Err}",
      "translation": "从 {ANAXCONFIGFILE} 获取模型管理服务 URL 出错。{Err}"
    },
    {
      "id": "HZN_FSS_CSSURL is not set, get it from horizon agent configuration on the node.",
      "translation": "未设置 HZN_FSS_CSSURL，从节点上的 Horizon 代理程序配置获取。"
    },
    {
      "id": "Could not get the model management service url from environment variable HZN_FSS_CSSURL or the horizon agent",
      "translation": "未能从环境变量 HZN_FSS_CSSURL 或 Horizon 代理程序获取模型管理服务 URL"
    },
    {
      "id": "The model management service url: {MmsUrl}",
      "translation": "模型管理服务 URL：{MmsUrl}"
    },
    {
      "id": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Set {ServiceEnvVarName} to use {Article} {HorizonService_1} other than the one the Horizon Agent is currently configured for. Specific error is: {Err}",
      "translation": "无法连接至 Horizon {HorizonService} REST API 以运行 {ApiMethod}。请设置 {ServiceEnvVarName}，以使用除当前配置给 Horizon Agent 的项之外的 {Article} {HorizonService_1}。具体错误为：{Err}"
    },
    {
      "id": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Maybe {ServiceEnvVarName} is set incorrectly? Or unset {ServiceEnvVarName_1} to use the {HorizonService_1} that the Horizon Agent is configured for. Specific error is: {Err}",
      "translation": "无法连接至 Horizon {HorizonService} REST API 以运行 {ApiMethod}。可能是未正确设置 {ServiceEnvVarName}。或者，请取消设置 {ServiceEnvVarName_1}，以使用配置给 Horizon Agent 的 {HorizonService_1}。具体错误为：{Err}"
    },
    {
      "id": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. Will retry.",
      "translation": "调用 {Service} REST API {ApiMsg} 时遇到 HTTP 错误：{Err}。将会重试。"
    },
    {
      "id": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}",
      "translation": "调用 {Service} REST API {ApiMsg} 遇到 HTTP 错误：{Err}"
    },
    {
      "id": "bad HTTP code {HttpCode} from {ApiMsg}, output: {StringbodyBytes}",
      "translation": "来自 {ApiMsg} 的 HTTP 代码 {HttpCode} 不正确，输出：{StringbodyBytes}"
    },
    {
      "id": "failed to unmarshal exchange body response from {ApiMsg}: {Err}",
      "translation": "对来自 {ApiMsg} 的 Exchange 主体响应进行取消编组失败：{Err}"
    },
    {
      "id": "failed to marshal exchange output from {ApiMsg}: {Err}",
      "translation": "对来自 {ApiMsg} 的 Exchange 输出进行编组失败：{Err}"
    },
    {
      "id": "failed to marshal exchange body for {ApiMsg}: {Err}",
      "translation": "对 {ApiMsg} 的 Exchange 主体进行编组失败：{Err}"
    },
    {
      "id": "failed to read exchange body response from {ApiMsg}: {Err}",
      "translation": "读取来自 {ApiMsg} 的 Exchange 主体响应失败：{Err}"
    },
    {
      "id": "bad HTTP code {HttpCode} from {ApiMsg}: {Code}, {Msg}",
      "translation": "来自 {ApiMsg} 的 HTTP 代码 {HttpCode} 不正确：{Code}，{Msg}"
    },
    {
      "id": "bad HTTP code {HttpCode} from {ApiMsg}",
      "translation": "来自 {ApiMsg} 的 HTTP 代码 {HttpCode} 不正确"
    },
    {
      "id": "exchange authentication must be specified with one of the following: the -u flag, the -n flag, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH",
      "translation": "必须使用下列其中一项来指定 Exchange 认证：-u 标志、-n 标志、HZN_EXCHANGE_USER_AUTH 或 HZN_EXCHANGE_NODE_AUTH"
    },
    {
      "id": "{Err}. Please create the signing key.",
      "translation": "{Err}。请创建签名密钥。"
    },
    {
      "id": "running: {CmdStr}",
      "translation": "正在运行：{CmdStr}"
    },
    {
      "id": "did not get a command object",
      "translation": "未能获取命令对象"
    },
    {
      "id": "Could not get Stdin pipe, error: {Err}",
      "translation": "未能获取 Stdin 管道，错误：{Err}"
    },
    {
      "id": "could not retrieve output from command, error: {Err}",
      "translation": "未能检索来自命令的输出，错误：{Err}"
    },
    {
      "id": "could not retrieve stderr from command, error: {Err}",
      "translation": "未能检索来自命令的 stderr，错误：{Err}"
    },
    {
      "id": "Unable to start command, error: {Err}",
      "translation": "无法启动命令，错误：{Err}"
    },
    {
      "id": "Unable to write to stdin of command, error: {Err}",
      "translation": "无法写至命令的 stdin，错误：{Err}"
    },
    {
      "id": "Unable to close stdin, error: {Err}",
      "translation": "无法关闭 stdin，错误：{Err}"
    },
    {
      "id": "could not read stdout, error: {Err}",
      "translation": "未能读取 stdout，错误：{Err}"
    },
    {
      "id": "could not read stderr, error: {Err}",
      "translation": "未能读取 stderr，错误：{Err}"
    },
    {
      "id": "command failed: {Err}, stderr: {StringstderrBytes}",
      "translation": "命令失败：{Err}，stderr：{StringstderrBytes}"
    },
    {
      "id": "failed to marshal 'hzn metering list' output: {Err}",
      "translation": "对“hzn metering list”的输出进行编组失败：{Err}"
    },
    {
      "id": "The selection string {V} is not valid.",
      "translation": "选择字符串 {V} 无效。"
    },
    {
      "id": "failed to marshal 'hzn eventlog list' output: {Err}",
      "translation": "对“hzn eventlog list”的输出进行编组失败：{Err}"
    },
    {
      "id": "failed to marshal 'hzn eventlog surface' output: {Err}",
      "translation": "对“hzn eventlog surface”的输出进行编组失败：{Err}"
    }
  ]
}
