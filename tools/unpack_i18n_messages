#!/bin/bash

# this command creates message file using translated file (arg2) and original out.gotext.json (arg1).
# it inserts the translated text back to the "translation' key of the original and save the output to a new file (arg3). 

original_file=$1
translated_file=$2
output_file=$3

# sanity check 
if [ ! -f $translated_file ]; then
	echo "File $translated_file does not exists."
	exit 1
fi

if [ ! -f $original_file ]; then
	echo "File $original_file does not exists."
	exit 1
fi

# remove the markups from the PII process
translated_json_file="/tmp/translated.json"
cat $translated_file | sed 's/"id":/"message":/g' | sed '/UTF-8/d' > $translated_json_file

# replace the original file with the translation
output=$(jq '.messages' $original_file)
while read -r i; do
	orig_msg=$(echo "$i" | jq -r '.message')
	trans_msg=$(echo "$i" | jq -r '.translation')

	output=$(echo "$output" | jq --arg omsg "$orig_msg" --arg tmsg "$trans_msg" 'map(if .message==$omsg then .translation=$tmsg else . end)')
done < <(jq -c '.messages[]' $translated_json_file) 

# add language part back and save to output file
locale=$(jq '.language' $translated_json_file)
echo "[{\"key\": \"language\", \"value\": $locale}, {\"key\": \"messages\", \"value\": $output}]" | jq 'from_entries' > $output_file

